{"version":3,"sources":["components/HomePage.js","store/reducers.js","settings.js","services/jwtAuth.js","services/requests.js","store/actions.js","store/actionTypes.js","components/Common/StatusButtonGroup.js","components/GamePage.js","components/MoviePage.js","components/SearchPage/CardGame.js","components/SearchPage/CardMovie.js","components/Common/CardUser.js","components/Common/CategoriesTab.js","components/SearchPage/SearchPage.js","components/LoginForm.js","components/RegistrationForm.js","components/ConfirmPage.js","components/UserPage/GameBlock.js","components/UserPage/FriendBlock.js","components/UserPage/MovieBlock.js","components/UserPage/UserPage.js","components/Navbar.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","initialState","Map","auth","loggedIn","user","username","email","id","content","game","rawg","name","background_image","background_image_additional","developers","hltb","game_image_url","user_info","status","review","score","spent_time","movie","tmdb","title","poster_path","searchContent","games","movies","users","userPageContent","stats","openedPages","LoginForm","RegistrateForm","errors","registrate","gameRequest","movieRequest","userPage","isLoading","contentGame","contentMovie","searchGames","searchMovies","searchUsers","getLoggedIn","state","get","getContentGame","getContentMovie","getSearchContentGames","getSearchContentMovies","getSearchContentUsers","getAuthError","getRegistrateError","getGameRequestError","getUser","getLoginForm","getRegistrateForm","getIsLoadingContentGame","getIsLoadingContentMovie","getIsLoadingSearchGames","getIsLoadingSearchMovies","getIsLoadingSearchUsers","getIsLoadingUserPageContent","getUserPageContent","BACKEND_URL","GET_TOKEN_URL","REFRESH_TOKEN_URL","REGISTRATE_URL","CONFIRM_URL","GET_GAME_URL","GET_MOVIE_URL","USER_INFO_URL","axiosConfig","headers","getToken","password","a","axios","post","res","userData","jwt_decode","data","access","user_id","token","refreshToken","refresh","console","log","updateToken","registration","response","confirmation","uid64","patch","getGame","AuthStr","getMovie","setGameStatus","gameSlug","put","setMovieStatus","query","page","params","getUserInfo","userID","setUserStatus","is_following","checkAuthorization","dispatch","localStorage","getItem","Date","now","type","setItem","resetAuthorization","removeItem","defaults","common","StatusButtonGroup","statuses","activeColor","onChangeStatus","userStatus","useState","activeStatus","setActiveStatus","useEffect","map","className","key","style","backgroundColor","onClick","connect","selectors","requestError","gameIsLoading","requestGame","Requests","then","result","toast","error","actions","openLoginForm","isOpen","getState","slug","useParams","genres","setGenres","metascoreBlock","setMetascoreBlock","setReview","spentTime","setSpentTime","setDevelopers","date","setDate","gameplay_main_extra","gameplay_main","gameplay_comletionist","hltbInfo","setHtlbInfo","newGenres","i","length","metacritic","playtime","gameplay_completionist","newDevelopers","released","mas","split","newDate","document","backgroundImage","active","spinner","text","md","size","src","alt","marginBottom","display","hidden","far","icon","gameplay_main_unit","gameplay_main_extra_unit","gameplay_completionist_unit","stop","emptySymbol","fontSize","fullSymbol","n","initialRating","readonly","onChange","marginTop","paddingTop","dangerouslySetInnerHTML","__html","description","paddingLeft","label","value","event","target","outline","disabled","getElementById","movieIsLoading","requestMovie","companies","setCompanies","cast","setCast","director","setDirector","vote_average","production_companies","newCompanies","newCast","crew","newDirector","job","backdrop_path","release_date","runtime","tagline","overview","CardGame","history","useHistory","setName","newName","substr","href","window","location","origin","e","push","preventDefault","CardMovie","CardUser","CategoriesTab","categories","onChangeCategory","activeCategory","setActiveCategory","category","color","height","borderColor","gamesIsLoading","moviesIsLoading","usersIsLoading","searchGame","searchMovie","results","queryText","setQueryText","gamesCards","setGamesCards","moviesCards","setMoviesCards","usersCards","setUsersCards","onSubmit","placeholder","aria-label","authError","closeForm","logIn","login","toggle","centered","htmlFor","registrateArror","confirmEmailRequest","success","search","URLSearchParams","GameBlock","gameColumns","field","sort","columns","rows","gameTableData","setGameTableData","rawg_slug","rawg_name","name2","games_count","games_total_spent_time","striped","bordered","small","info","barReverse","noBottomColumns","noRecordsFoundLabel","paginationLabel","entriesLabel","searchLabel","FriendBlock","MovieBlock","movieColumns","movieTableData","setMovieTableData","tmdb_id","tmdb_name","movies_count","movies_total_spent_time","userIsLoading","userInfo","currentUserInfo","is_followed","followed_users","onLoginClick","onLogoutClick","onRegistrationClick","dark","expand","fixed","left","right","to","nav","caret","Routes","exact","path","component","GamePage","MoviePage","SearchPage","ConfirmPage","UserPage","render","position","hideProgressBar","newestOnTop","closeOnClick","React","Component","onLoad","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","setIn","applyMiddleware","thunk","ReactDOM","URL","process","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gSAgBeA,MATf,WAEI,OACD,6BACC,uJ,+CCPEC,EAAeC,YACjB,CACIC,KAAM,CAAEC,UAAU,GAClBC,KAAM,CAAEC,SAAS,GAAIC,MAAM,GAAIC,GAAI,MACnCC,QAAS,CACLC,KAAM,CACFC,KAAM,CACFC,KAAM,GACNC,iBAAkB,GAClBC,4BAA6B,GAC7BC,WAAY,CAAC,KAEjBC,KAAK,CACDC,eAAgB,IAEpBC,UAAU,CACNC,OAAQ,KACRC,OAAQ,GACRC,MAAO,EACPC,WAAY,IAGpBC,MAAO,CACHC,KAAM,CACFC,MAAO,GACPC,YAAa,GACbX,WAAY,CAAC,KAEjBG,UAAU,CACNC,OAAQ,KACRC,OAAQ,GACRC,MAAO,EACPC,WAAY,KAIxBK,cAAe,CACXC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAEXC,gBAAiB,CACbC,MAAO,IAEXC,YAAa,CAAEC,WAAW,EAAOC,gBAAgB,GACjDC,OAAQ,CAACjC,MAAM,EAAOkC,YAAY,EAAOC,aAAa,EAAOC,cAAc,EAAOC,UAAU,GAC5FC,UAAW,CAACC,aAAa,EAAOC,cAAc,EAAOC,aAAa,EAAOC,cAAc,EAAOd,iBAAiB,EAAOe,aAAa,KAuEpI,SAASC,EAAYC,GACxB,OAAOA,EAAMC,IAAI,QAAQ7C,SAOtB,SAAS8C,EAAeF,GAC3B,OAAOA,EAAMC,IAAI,WAAWvC,KAGzB,SAASyC,EAAgBH,GAC5B,OAAOA,EAAMC,IAAI,WAAW1B,MAGzB,SAAS6B,EAAsBJ,GAClC,OAAOA,EAAMC,IAAI,iBAAiBrB,MAG/B,SAASyB,EAAuBL,GACnC,OAAOA,EAAMC,IAAI,iBAAiBpB,OAG/B,SAASyB,EAAsBN,GAClC,OAAOA,EAAMC,IAAI,iBAAiBnB,MAG/B,SAASyB,EAAaP,GACzB,OAAOA,EAAMC,IAAI,UAAU9C,KAGxB,SAASqD,EAAmBR,GAC/B,OAAOA,EAAMC,IAAI,UAAUZ,WAGxB,SAASoB,EAAoBT,GAChC,OAAOA,EAAMC,IAAI,UAAUX,YAWxB,SAASoB,EAAQV,GACpB,OAAOA,EAAMC,IAAI,QAGd,SAASU,EAAaX,GACzB,OAAOA,EAAMC,IAAI,eAAef,UAG7B,SAAS0B,EAAkBZ,GAC9B,OAAOA,EAAMC,IAAI,eAAed,eAG7B,SAAS0B,EAAwBb,GACpC,OAAOA,EAAMC,IAAI,aAAaP,YAG3B,SAASoB,EAAyBd,GACrC,OAAOA,EAAMC,IAAI,aAAaN,aAG3B,SAASoB,EAAwBf,GACpC,OAAOA,EAAMC,IAAI,aAAaL,YAG3B,SAASoB,EAAyBhB,GACrC,OAAOA,EAAMC,IAAI,aAAaJ,aAG3B,SAASoB,EAAwBjB,GACpC,OAAOA,EAAMC,IAAI,aAAaH,YAO3B,SAASoB,EAA4BlB,GACxC,OAAOA,EAAMC,IAAI,aAAalB,gBAG3B,SAASoC,EAAmBnB,GAC/B,OAAOA,EAAMC,IAAI,mB,6DC/MRmB,EAAc,8BAEdC,EAAgBD,EAAc,oBAE9BE,EAAoBF,EAAc,4BAElCG,EAAiBH,EAAc,qBAE/BI,EAAcJ,EAAc,2BAE5BK,GAAeL,EAAc,cAI7BM,GAAgBN,EAAc,gBAI9BO,GAAgBP,EAAc,cCjBvCQ,GAAc,CACdC,QAAS,CACL,eAAgB,mCASjB,SAAeC,GAAtB,qC,8CAAO,WAAwBxE,EAAUyE,GAAlC,mBAAAC,EAAA,+EAEmBC,IAAMC,KAAKb,EAAe,CAChC/D,SAAUA,EACVyE,SAAUA,GACXH,IALZ,cAEOO,EAFP,OAOKC,EAAWC,IAAWF,EAAIG,KAAKC,QAC/BlF,EAAO,CAACC,SAAU8E,EAAS9E,SAAUE,GAAI4E,EAASI,QAASjF,MAAO6E,EAAS7E,OARhF,kBAUQ,CAACkF,MAAON,EAAIG,KAAKC,OAAQG,aAAcP,EAAIG,KAAKK,QAAStF,KAAMA,IAVvE,uCAYCuF,QAAQC,IAAI,sBAZb,kBAaQ,MAbR,0D,sBAoBA,SAAeC,GAAtB,mC,8CAAO,WAA2BJ,GAA3B,mBAAAV,EAAA,2DACyB,qBAAjBU,EAA+C,MAAhBA,GADvC,0CAGuBT,IAAMC,KAAKZ,EAAmB,CACpCqB,QAASD,GACVd,IALhB,cAGWO,EAHX,OAOSC,EAAWC,IAAWF,EAAIG,KAAKC,QAC/BlF,EAAO,CAACC,SAAU8E,EAAS9E,SAAUE,GAAI4E,EAASI,QAASjF,MAAO6E,EAAS7E,OARpF,kBAUY,CAACkF,MAAON,EAAIG,KAAKC,OAAQlF,KAAMA,IAV3C,yCAYKuF,QAAQC,IAAI,sBAZjB,kBAaY,MAbZ,iCAeI,MAfJ,2D,sBAkBA,SAAeE,GAAtB,uC,8CAAO,WAA4BzF,EAAUC,EAAOwE,GAA7C,iBAAAC,EAAA,+EAEmBC,IAAMC,KAAKX,EACzB,CAAGjE,SAAUA,EACTC,MAAOA,EACPwE,SAAUA,GACXH,IANR,cAEOO,EAFP,OAOKG,EAAOH,EAAIG,KAPhB,kBAQQA,GARR,uCAUCM,QAAQC,IAAI,gBAAiB,KAAEG,UAVhC,kBAWQ,KAAEA,UAXV,0D,sBAeA,SAAeC,GAAtB,qC,8CAAO,WAA4BC,EAAOT,GAAnC,iBAAAT,EAAA,sEAECY,QAAQC,IAAIK,GACZN,QAAQC,IAAIJ,GAHb,SAImBR,IAAMkB,MAAM3B,EACzB,CACG0B,MAAOA,EACPT,MAAOA,GAEVb,IATN,cAIOO,EAJP,OAUKG,EAAOH,EAAIG,KAVhB,kBAWQA,GAXR,yCAaEM,QAAQC,IAAI,gBAAiB,KAAEG,UAbjC,kBAcS,KAAEA,UAdX,2D,sBCjEP,IAAIpB,GAAc,CACdC,QAAS,CACL,eAAgB,mCAcjB,SAAeuB,GAAtB,qC,8CAAO,WAAuBX,EAAOjF,GAA9B,qBAAAwE,EAAA,mEAGKS,EAHL,uBAISY,EAAU,UAAYZ,EAJ/B,SAKuBR,IAAMhC,IAAIwB,GAAejE,EAAK,IAAK,CAAE,QAAW,CAAE,cAAiB6F,KAL1F,OAKWlB,EALX,OAMKG,EAAOH,EAAIG,KANhB,wCAQuBL,IAAMhC,IAAIwB,GAAejE,EAAK,IAAKoE,IAR1D,QAQWO,EARX,OASKG,EAAOH,EAAIG,KAThB,iCAWQA,GAXR,yCAaCM,QAAQC,IAAI,gBAAZ,MAbD,kBAcQ,MAdR,2D,sBAyBA,SAAeS,GAAtB,qC,8CAAO,WAAwBb,EAAOjF,GAA/B,qBAAAwE,EAAA,mEAGKS,EAHL,uBAISY,EAAU,UAAYZ,EAJ/B,SAKuBR,IAAMhC,IAAIyB,GAAgBlE,EAAK,IAAK,CAAE,QAAW,CAAE,cAAiB6F,KAL3F,OAKWlB,EALX,OAMKG,EAAOH,EAAIG,KANhB,wCAQuBL,IAAMhC,IAAIyB,GAAgBlE,EAAK,IAAKoE,IAR3D,QAQWO,EARX,OASKG,EAAOH,EAAIG,KAThB,iCAWQA,GAXR,yCAaCM,QAAQC,IAAI,gBAAZ,MAbD,kBAcQ,MAdR,2D,sBAwBA,SAAeU,GAAtB,uC,8CAAO,WAA6Bd,EAAOe,EAAUtF,GAA9C,iBAAA8D,EAAA,sEAEKqB,EAAU,UAAYZ,EAC1BG,QAAQC,IAAI3E,GAHb,SAImB+D,IAAMwB,IAAIhC,GAAe+B,EAAW,IAClDtF,EAAW,CAAE2D,QAAS,CAAE,cAAiBwB,KAL9C,UAIOlB,EAJP,OAMCS,QAAQC,IAAIV,GAEO,MAAfA,EAAIhE,QAAiC,MAAfgE,EAAIhE,QAAiC,MAAfgE,EAAIhE,OARrD,0CASYgE,EAAIG,MAThB,iCAUa,MAVb,iEAYCM,QAAQC,IAAI,gBAAZ,MAZD,kBAaQ,MAbR,2D,sBAuBA,SAAea,GAAtB,uC,8CAAO,WAA8BjB,EAAOjF,EAAIU,GAAzC,iBAAA8D,EAAA,sEAEKqB,EAAU,UAAYZ,EAC1BG,QAAQC,IAAI3E,GAHb,SAImB+D,IAAMwB,IAAI/B,GAAgBlE,EAAK,IAC7CU,EAAW,CAAE2D,QAAS,CAAE,cAAiBwB,KAL9C,UAIOlB,EAJP,OAMCS,QAAQC,IAAIV,GAEO,MAAfA,EAAIhE,QAAiC,MAAfgE,EAAIhE,QAAiC,MAAfgE,EAAIhE,OARrD,0CASYgE,EAAIG,MAThB,iCAUa,MAVb,iEAYCM,QAAQC,IAAI,gBAAZ,MAZD,kBAaQ,MAbR,2D,sBA4CA,SAAejD,GAAtB,qC,8CAAO,WAA2B+D,EAAOC,GAAlC,eAAA5B,EAAA,+EAEmBC,IAAMhC,IF1HAmB,2CE0HsB,CAAEyC,OAAS,CAACF,MAAOA,EAAOC,KAAMA,IAC1E,CAAE,QAAW,CAAE,eAAgB,oCAHpC,cAEOzB,EAFP,yBAIQA,EAAIG,MAJZ,uCAMCM,QAAQC,IAAI,gBAAZ,MAND,kBAOQ,MAPR,0D,sBAgBA,SAAehD,GAAtB,qC,8CAAO,WAA4B8D,EAAOC,GAAnC,eAAA5B,EAAA,+EAEmBC,IAAMhC,IFtICmB,4CEsIsB,CAAEyC,OAAS,CAACF,MAAOA,EAAOC,KAAMA,IAC3E,CAAE,QAAW,CAAE,eAAgB,oCAHpC,cAEOzB,EAFP,OAIKS,QAAQC,IAAIV,GAJjB,kBAKQA,EAAIG,MALZ,uCAOCM,QAAQC,IAAI,gBAAZ,MAPD,kBAQQ,MARR,0D,sBAgBA,SAAe/C,GAAtB,mC,8CAAO,WAA2B6D,GAA3B,eAAA3B,EAAA,+EAEmBC,IAAMhC,IFlJAmB,2CEkJsB,CAAEyC,OAAS,CAACF,MAAOA,IAC7D,CAAE,QAAW,CAAE,eAAgB,oCAHpC,cAEOxB,EAFP,OAIKS,QAAQC,IAAIV,GAJjB,kBAKQA,EAAIG,MALZ,uCAOCM,QAAQC,IAAI,gBAAZ,MAPD,kBAQQ,MARR,0D,sBAkBA,SAAeiB,GAAtB,qC,8CAAO,WAA2BrB,EAAOsB,GAAlC,qBAAA/B,EAAA,mEAGKS,EAHL,uBAISY,EAAU,UAAYZ,EAJ/B,SAKuBR,IAAMhC,IAAI0B,GAAgBoC,EAAS,IAAK,CAAE,QAAW,CAAE,cAAiBV,KAL/F,OAKWlB,EALX,OAMKG,EAAOH,EAAIG,KANhB,wCAQuBL,IAAMhC,IAAI0B,GAAgBoC,EAAS,IAAKnC,IAR/D,QAQWO,EARX,OASKG,EAAOH,EAAIG,KAThB,iCAWQA,GAXR,yCAaCM,QAAQC,IAAI,gBAAZ,MAbD,kBAcQ,MAdR,2D,sBAwBA,SAAemB,GAAtB,uC,8CAAO,WAA6BvB,EAAOwB,EAAcF,GAAlD,iBAAA/B,EAAA,sEAEKqB,EAAU,UAAYZ,EAF3B,SAGmBR,IAAMwB,IAAI9B,GAAgBoC,EAAS,WACjDE,EAAc,CAAEpC,QAAS,CAAE,cAAiBwB,KAJjD,UAGOlB,EAHP,OAKCS,QAAQC,IAAIV,GAEO,MAAfA,EAAIhE,QAAiC,MAAfgE,EAAIhE,QAAiC,MAAfgE,EAAIhE,OAPrD,0CAQYgE,EAAIG,MARhB,iCASa,MATb,iEAWCM,QAAQC,IAAI,gBAAZ,MAXD,kBAYQ,MAZR,2D,sBC/JA,SAASqB,KACZ,8CAAO,WAAMC,GAAN,mBAAAnC,EAAA,2DACmC,OAAlCoC,aAAaC,QAAQ,SAAoBC,KAAKC,MAAQH,aAAaC,QAAQ,aHnDzD,MGkDnB,iCAEmBvB,GAAYsB,aAAaC,QAAQ,iBAFpD,UAGa,QADNlC,EAFP,gCAIKgC,EAAS,CACLK,KCvDI,WDwDJrH,KAAM,CAAEC,UAAU,KAEtB+G,EAAS,CACLK,KC5DI,WD6DJnH,KAAM8E,EAAI9E,OAEd+G,aAAaK,QAAQ,QAAStC,EAAIM,OAClC2B,aAAaK,QAAQ,YAAaH,KAAKC,OAb5C,mBAcY,GAdZ,eAiBKJ,EAASO,MAjBd,mBAkBY,GAlBZ,uCAqBKtC,EAAWC,IAAW+B,aAAaC,QAAQ,UAC3ChH,EAAO,CAACC,SAAU8E,EAAS9E,SAAUE,GAAI4E,EAASI,QAASjF,MAAO6E,EAAS7E,OAC/E4G,EAAS,CACLK,KC3EQ,WD4ERnH,KAAMA,IAEV8G,EAAS,CACLK,KC9EQ,WD+ERrH,KAAM,CAAEC,UAAU,KA7BvB,mBA+BQ,GA/BR,4CAAP,sDAqCG,SAASsH,KACZ,8CAAO,WAAMP,GAAN,SAAAnC,EAAA,sDACHoC,aAAaO,WAAW,gBACxBP,aAAaO,WAAW,SACxBP,aAAaO,WAAW,aACxBR,EAAS,CACLK,KC7FY,WD8FZrH,KAAM,CAAEC,UAAU,KAEtB+G,EAAS,CACLK,KClGY,WDmGZnH,KAAM,CAAEC,SAAS,GAAIE,GAAI,KAAMD,MAAM,MAVtC,2CAAP,sDDhFJ0E,IAAM2C,SAAS/C,QAAQgD,OAAS,CAC5B,eAAgB,oB,MGkBLC,OAzBf,YAAmF,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WAAc,EACtCC,mBAAS,IAD6B,mBACvEC,EADuE,KACzDC,EADyD,KAS9E,OANAC,qBAAU,WACFD,EAAgBH,GAAsBH,EAAS,MAEnD,CAACA,EAAUG,IAIX,6BACKH,EAASQ,KAAI,SAACpH,GAAD,OAAY,4BAAQqH,UAAW,kBACbC,IAAKtH,EACLuH,MAAO,CAACC,gBAAkBP,IAAiBjH,EAAO6G,EAAY,WAC9DY,QAAS,WACDX,EAAe9G,IACfkH,EAAgBlH,KAGvBA,QCsM7C,IAwBe0H,gBAxBS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,GAChC+F,aAAcD,EAA8B9F,GAC5CtC,KAAMoI,EAAyB9F,GAC/BgG,cAAeF,EAAkC9F,OAG1B,SAACmE,GAC3B,MAAO,CACN8B,YAAa,SAACzI,GACJ2G,EHrFL,SAAqB3G,GACxB,8CAAO,WAAM2G,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KCjI+B,8BDkI/B/E,WAAW,IAEfyG,GAAiB9B,aAAaC,QAAQ,SAAU7G,GAAI2I,MAAK,SAACC,GACxC,MAAVA,GACAjC,EAAS,CACLK,KCtJY,mBDuJZ9G,KAAM0I,IAEVjC,EAAS,CACLK,KC3IuB,8BD4IvB/E,WAAW,MAIf4G,IAAMC,MAAM,qFACZnC,EAAS,CACLK,KC7Jc,qBD8Jd8B,OAAO,IAEXnC,EAAS,CACLK,KCtJuB,8BDuJvB/E,WAAW,QAxBpB,2CAAP,sDGoFiB8G,CAAoB/I,KAEjCgJ,cAAe,WACXrC,EH+JD,CAAEK,KCtYgB,gBDsYiBiC,QAAQ,KG1J9ClD,cAAe,SAACpF,GH5BjB,IAAuBD,EG6BlBiG,GH7BkBjG,EG6BaC,EH5BvC,uCAAO,WAAMgG,EAAUuC,GAAhB,SAAA1E,EAAA,sEACOmC,EAASD,MADhB,kCAECgC,GAAuB9B,aAAaC,QAAQ,SAAUyB,EAAyBY,KAAY/I,KAAKgJ,KAAMzI,GAAWiI,MAAK,SAACC,GAC9GA,EAIDjC,EAAS,CACLK,KChNiB,4BDiNjBtG,UAAWkI,IALfC,IAAMC,MAAM,mJAJrB,2CAAP,8DGiCWT,EA1Nf,YACS,IADYI,EACb,EADaA,YAAavI,EAC1B,EAD0BA,KAAoBN,GAC9C,EADgC2I,aAChC,EAD8C3I,UAAUoJ,EACxD,EADwDA,cAAejD,EACvE,EADuEA,cAAeyC,EACtF,EADsFA,cAEpFxI,EAAOoJ,cAAPpJ,GADF,EAEwB2H,mBAAS,IAFjC,mBAEG0B,EAFH,KAEWC,EAFX,OAGwC3B,mBAAS,IAHjD,mBAGG4B,EAHH,KAGmBC,EAHnB,OAIwB7B,mBAAS,IAJjC,mBAIG/G,EAJH,KAIW6I,EAJX,OAK8B9B,mBAAS,GALvC,mBAKG+B,EALH,KAKcC,EALd,OAMgChC,mBAAS,IANzC,mBAMGpH,EANH,KAMeqJ,EANf,OAOoBjC,mBAAS,IAP7B,mBAOGkC,EAPH,KAOSC,EAPT,OAQ4BnC,mBAAS,CAACoC,qBAAsB,EAAGC,eAAgB,EAAGC,uBAAwB,IAR1G,mBAQGC,EARH,KAQaC,EARb,KA8EJ,OApEArC,qBACF,WACUW,EAAYzI,KAGtB,CAACA,EAAIyI,EAAa7I,IAGhBkI,qBACF,WACU,GAAI5H,EAAKC,KAAKkJ,OAAO,CAEjB,IADA,IAAIe,EAAY,GACPC,EAAI,EAAGA,EAAInK,EAAKC,KAAKkJ,OAAOiB,OAAQD,IACzCD,GAAalK,EAAKC,KAAKkJ,OAAOgB,GAAGjK,KAC7BiK,IAAMnK,EAAKC,KAAKkJ,OAAOiB,OAAS,IAChCF,GAAa,MAEpBd,EAAUc,GA6Bf,GA1BIlK,EAAKC,KAAKoK,WACVf,EACI,6BACI,yBAAKxB,UAAU,cACX,2BAAI9H,EAAKC,KAAKoK,aAElB,uBAAGvC,UAAU,kBAAb,eAIRwB,EAAkB,IAGlBtJ,EAAKM,KACL2J,EAAYjK,EAAKM,MACXN,EAAKC,KAAKqK,SAChBL,EAAY,CAACJ,oBAAqB7J,EAAKC,KAAKqK,SAAUR,eAAgB,EAAGS,wBAAyB,IAElGN,EAAY,CAACJ,qBAAsB,EAAGC,eAAgB,EAAGS,wBAAyB,IAGlFvK,EAAKQ,YACL+I,EAAUvJ,EAAKQ,UAAUE,QACzB+I,EAAazJ,EAAKQ,UAAUI,aAG5BZ,EAAKC,KAAKI,WAAW,CAErB,IADA,IAAImK,EAAgB,GACXL,EAAI,EAAGA,EAAInK,EAAKC,KAAKI,WAAW+J,OAAQD,IAC7CK,GAAiBxK,EAAKC,KAAKI,WAAW8J,GAAGjK,KACrCiK,IAAMnK,EAAKC,KAAKI,WAAW+J,OAAS,IACxCI,GAAiB,MAErBd,EAAcc,GAGlB,GAAIxK,EAAKC,KAAKwK,SAAS,CACnB,IAAIC,EAAM1K,EAAKC,KAAKwK,SAASE,MAAM,KAC/BC,EAAUF,EAAI,GAAK,IAAMA,EAAI,GAAK,IAAMA,EAAI,GAChDd,EAAQgB,QAERhB,EAAQ,IAEZiB,SAAS9J,MAAQf,EAAKC,KAAKC,OAErC,CAACF,IAIS,6BACT,yBAAK8H,UAAU,KAAKE,MAAO,CAAC8C,gBAAgB,OAAD,OAAS9K,EAAKC,KAAKG,4BAA4BJ,EAAKC,KAAKG,4BAA4BJ,EAAKC,KAAKE,iBAA/F,QAC9B,kBAAC,IAAD,CACI4K,OAAQzC,EACR0C,SAAO,EACPC,KAAK,uDAET,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,GAAG,QACX,kBAAC,IAAD,CAAQpD,UAAU,mBACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQA,UAAU,iCACd,kBAAC,IAAD,CAAQqD,KAAK,KACT,yBAAKC,IAAKpL,EAAKC,KAAKE,iBAAkB2H,UAAU,YAAYuD,IAAI,MAEpE,kBAAC,IAAD,CAAQF,KAAK,KACT,4BAAKnL,EAAKC,KAAKC,MACf,uBAAG8H,MAAO,CAACsD,aAAc,QAAzB,6EAAgDjL,GAChD,uBAAG2H,MAAO,CAACsD,aAAc,QAAzB,kEAA+C3B,GAC/C,uBAAG3B,MAAO,CAACsD,aAAc,QAAzB,6BAAwCnC,GACxC,uBAAGnB,MAAO,CAACsD,aAAc,MAAOC,QAAS,WAAzC,uGACI,yBAAKC,OAAQxB,EAASF,cAAgB,EAAG9B,MAAO,CAACuD,QAAS,WACtD,kBAAC,IAAD,CAASE,KAAG,EAACC,KAAK,QAAQ5D,UAAU,mBAAmB/G,MAAO,8EAAkB,0BAAM+G,UAAU,OAAOkC,EAASF,cADpH,IACoIE,EAAS2B,mBAAmB,0BAAM7D,UAAU,QAPxL,IAQe,uBAAGE,MAAO,CAACuD,QAAS,WAApB,KACP,yBAAKC,OAAQxB,EAASH,oBAAsB,EAAG7B,MAAO,CAACuD,QAAS,WAC5D,kBAAC,IAAD,CAASE,KAAG,EAACC,KAAK,QAAQ5D,UAAU,cAAc/G,MAAO,4KAAqC,0BAAM+G,UAAU,OAAOkC,EAASH,oBADlI,IACwJG,EAAS4B,yBAAyB,0BAAM9D,UAAU,QAVlN,IAWe,uBAAGE,MAAO,CAACuD,QAAS,WAApB,KACP,yBAAKC,OAAQxB,EAASO,uBAAyB,EAAGvC,MAAO,CAACuD,QAAS,WAC/D,kBAAC,IAAD,CAASE,KAAG,EAACC,KAAK,QAAQ5D,UAAU,WAAW/G,MAAO,4GAAuB,0BAAM+G,UAAU,OAAOkC,EAASO,uBADjH,IAC0IP,EAAS6B,6BAEvJ,6BACA,kBAAC,IAAD,CAAQC,KAAM,GACVC,YAAa,kBAAC,IAAD,CAASN,KAAG,EAACC,KAAK,OAAOP,KAAK,KAAKnD,MAAO,CAACgE,SAAU,UAClEC,WAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIpE,KAAI,SAAAqE,GAAC,OAAI,kBAAC,IAAD,CAASR,KAAK,OAAOP,KAAK,KAAKnD,MAAO,CAACgE,SAAU,QAASjL,MAAOmL,OAC7GC,cAAenM,EAAKQ,UAAUR,EAAKQ,UAAUG,MAAM,EACnDyL,UAAW1M,GAAaM,EAAKQ,UAC7B6L,SAAU,SAAC1L,GACFjB,EAGDmG,EAAc,CAAClF,MAAOA,IAFtBmI,KAKRd,MAAO,CAACsE,UAAW,OAAQhB,aAAc,UA5BjD,IA6BO,6BACH,kBAAC,GAAD,CACIjE,SAAU,CAAC,8CAAY,gEAAe,iCAAS,6CAAW,wCAC1DC,YAAY,UACZE,WAAYxH,EAAKQ,UAAUR,EAAKQ,UAAUC,OAAO,8CACjD8G,eAAgB,SAAC9G,GACRf,EAGFmG,EAAc,CAAEpF,OAAQA,IAFvBqI,QAOhB,kBAAC,IAAD,CAAQqC,KAAK,KACP9B,IAGV,kBAAC,IAAD,CAAQvB,UAAU,mBACd,kBAAC,IAAD,KACI,wBAAIE,MAAO,CAACuE,WAAY,SAAxB,oDACA,yBAAKC,wBAAyB,CAACC,OAAQzM,EAAKC,KAAKyM,iBAGzD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQvB,KAAK,IAAInD,MAAO,CAAC2E,YAAa,SAClC,wBAAI3E,MAAO,CAACuE,WAAY,SAAxB,wCAEI,kBAAC,IAAD,CACIzF,KAAK,WACLhH,GAAG,cACH8M,MAAM,oDACNC,MAAOnM,EACP2L,SAAU,SAACS,GAAD,OAAUvD,EAAUuD,EAAMC,OAAOF,QAC3CG,SAAO,IAEX,kBAAC,IAAD,CACIlG,KAAK,SACLhH,GAAG,iBACH8M,MAAM,+HACNC,MAAOrD,EACP6C,SAAU,SAACS,GAAD,OAAUrD,EAAaqD,EAAMC,OAAOF,UAElD,4BACI/E,UAAW,oBACXmF,UAAWvN,GAAaM,EAAKQ,UAC7B0H,QAAS,WACIxI,EAGDmG,EAAc,CAAInF,OAAQmK,SAASqC,eAAe,eAAeL,MAAOjM,WAAYiK,SAASqC,eAAe,kBAAkBL,QAF9H/D,MALhB,8DAkBhB,kBAAC,IAAD,CAAQoC,GAAG,eCJnC,IAqBe/C,gBArBS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,GAChC+F,aAAcD,EAA8B9F,GAC5CzB,MAAOuH,EAA0B9F,GACjC6K,eAAgB/E,EAAmC9F,OAG5B,SAACmE,GAC3B,MAAO,CACN2G,aAAc,SAACtN,GACL2G,EJzCL,SAAsB3G,GACzB,8CAAO,WAAM2G,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KChKgC,+BDiKhC/E,WAAW,IAEfyG,GAAkB9B,aAAaC,QAAQ,SAAU7G,GAAI2I,MAAK,SAACC,GACvDxD,QAAQC,IAAIuD,GACE,MAAVA,GACAjC,EAAS,CACLK,KCtLa,oBDuLbjG,MAAO6H,IAEXjC,EAAS,CACLK,KC3KwB,+BD4KxB/E,WAAW,MAIf4G,IAAMC,MAAM,qFACZnC,EAAS,CACLK,KC7Le,sBD8Lf8B,OAAO,IAEXnC,EAAS,CACLK,KCtLwB,+BDuLxB/E,WAAW,QAzBpB,2CAAP,sDIwCiB8G,CAAqB/I,KAElCgJ,cAAe,WACXrC,EJ2KD,CAAEK,KCtYgB,gBDsYiBiC,QAAQ,KIzK9C/C,eAAgB,SAACvF,GJwGlB,IAAwBD,EIvGnBiG,GJuGmBjG,EIvGaC,EJwGxC,uCAAO,WAAMgG,EAAUuC,GAAhB,SAAA1E,EAAA,sEACOmC,EAASD,MADhB,kCAECgC,GAAwB9B,aAAaC,QAAQ,SAAUyB,EAA0BY,KAAYlI,KAAKhB,GAAIU,GAAWiI,MAAK,SAACC,GAC9GA,EAIDjC,EAAS,CACLK,KCjUkB,6BDkUlBtG,UAAWkI,IALfC,IAAMC,MAAM,mJAJrB,2CAAP,8DInGWT,EA3Mf,YACS,IADaiF,EACd,EADcA,aAAcvM,EAC5B,EAD4BA,MAAOnB,EACnC,EADmCA,SAAUyN,EAC7C,EAD6CA,eAAgBnH,EAC7D,EAD6DA,eAAgB8C,EAC7E,EAD6EA,cAE3EhJ,EAAOoJ,cAAPpJ,GADF,EAEwC2H,mBAAS,IAFjD,mBAEG4B,EAFH,KAEmBC,EAFnB,OAGwB7B,mBAAS,IAHjC,mBAGG0B,EAHH,KAGWC,EAHX,OAI8B3B,mBAAS,IAJvC,mBAIG4F,EAJH,KAIcC,EAJd,OAKoB7F,mBAAS,IAL7B,mBAKG8F,EALH,KAKSC,EALT,OAM4B/F,mBAAS,IANrC,mBAMGgG,EANH,KAMaC,EANb,OAOwBjG,mBAAS,IAPjC,mBAOG/G,EAPH,KAOW6I,EAPX,KAmFJ,OA1EA3B,qBACF,WACUwF,EAAatN,KAGvB,CAACA,EAAIsN,EAAc1N,IAGjBkI,qBACF,WAcU,GAbI/G,EAAMC,KAAK6M,aACXrE,EACI,6BACI,yBAAKxB,UAAU,cACX,2BAA8B,GAA1BjH,EAAMC,KAAK6M,eAEnB,uBAAG7F,UAAU,kBAAb,gBAIRwB,EAAkB,IAGlBzI,EAAMC,KAAKqI,OAAO,CAElB,IADA,IAAIe,EAAY,GACPC,EAAI,EAAGA,EAAItJ,EAAMC,KAAKqI,OAAOiB,OAAQD,IAC1CD,GAAarJ,EAAMC,KAAKqI,OAAOgB,GAAGjK,KAC9BiK,IAAMtJ,EAAMC,KAAKqI,OAAOiB,OAAS,IACjCF,GAAa,MAErBd,EAAUc,GAGd,GAAIrJ,EAAMC,KAAK8M,qBAAqB,CAEhC,IADA,IAAIC,EAAe,GACV1D,EAAI,EAAGA,EAAItJ,EAAMC,KAAK8M,qBAAqBxD,OAAQD,IACxD0D,GAAgBhN,EAAMC,KAAK8M,qBAAqBzD,GAAGjK,KAC/CiK,IAAMtJ,EAAMC,KAAK8M,qBAAqBxD,OAAS,IAC/CyD,GAAgB,MAExBP,EAAaO,GAGjB,GAAIhN,EAAMC,KAAKyM,KAAK,CAGhB,IAFA,IAAIO,EAAU,GACV1D,EAASvJ,EAAMC,KAAKyM,KAAKnD,OAAO,EAAE,EAAEvJ,EAAMC,KAAKyM,KAAKnD,OAC/CD,EAAI,EAAGA,EAAIC,EAAQD,IACxB2D,GAAWjN,EAAMC,KAAKyM,KAAKpD,GAAGjK,KAC1BiK,IAAMC,EAAS,IACf0D,GAAW,MAEnBN,EAAQM,GAGZ,GAAIjN,EAAMC,KAAKiN,KAAK,CAEhB,IADA,IAAIC,EAAc,GACT7D,EAAI,EAAGA,EAAItJ,EAAMC,KAAKiN,KAAK3D,OAAQD,IACxC,GAA+B,aAA3BtJ,EAAMC,KAAKiN,KAAK5D,GAAG8D,IAAmB,CACtCD,EAAcnN,EAAMC,KAAKiN,KAAK5D,GAAGjK,KACjC,MAGRwN,EAAYM,GAGZnN,EAAML,WACN+I,EAAU1I,EAAML,UAAUE,QAG9BmK,SAAS9J,MAAQF,EAAMC,KAAKC,QAEtC,CAACF,IAIS,6BACT,yBAAKiH,UAAU,KAAKE,MAAO,CAAC8C,gBAAgB,OAAD,OAAU,uDAAyDjK,EAAMC,KAAKoN,cAA9E,QAC9B,kBAAC,IAAD,CACInD,OAAQoC,EACRnC,SAAO,EACPC,KAAK,uDAET,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,GAAG,QACX,kBAAC,IAAD,CAAQpD,UAAU,oBACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQA,UAAU,kCACd,kBAAC,IAAD,CAAQqD,KAAK,KACT,yBAAKC,IAAK,iDAAmDvK,EAAMC,KAAKE,YAAa8G,UAAU,YAAYuD,IAAI,MAEnH,kBAAC,IAAD,CAAQF,KAAK,KACT,4BAAKtK,EAAMC,KAAKC,OAChB,uBAAGiH,MAAO,CAACsD,aAAc,QAAzB,kEAA+CzK,EAAMC,KAAKqN,cAC1D,uBAAGnG,MAAO,CAACsD,aAAc,QAAzB,gIAA2DzK,EAAMC,KAAKsN,SACtE,uBAAGpG,MAAO,CAACsD,aAAc,QAAzB,6BAAwCnC,GACxC,uBAAGnB,MAAO,CAACsD,aAAc,QAAzB,qDAA4C+B,GAC5C,uBAAGrF,MAAO,CAACsD,aAAc,QAAzB,yCAA0CzK,EAAMC,KAAKuN,SACrD,uBAAGrG,MAAO,CAACsD,aAAc,QAAzB,0CAA2CiC,GAC3C,uBAAGvF,MAAO,CAACsD,aAAc,QAAzB,qDAA4CmC,GAC5C,6BACA,kBAAC,IAAD,CAAQ3B,KAAM,GACVC,YAAa,kBAAC,IAAD,CAASN,KAAG,EAACC,KAAK,OAAOP,KAAK,KAAKnD,MAAO,CAACgE,SAAU,UAClEC,WAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAIpE,KAAI,SAAAqE,GAAC,OAAI,kBAAC,IAAD,CAASR,KAAK,OAAOP,KAAK,KAAKnD,MAAO,CAACgE,SAAU,QAASjL,MAAOmL,OAC7GC,cAAetL,EAAML,UAAUK,EAAML,UAAUG,MAAM,EACrDyL,UAAW1M,GAAamB,EAAML,UAC9B6L,SAAU,SAAC1L,GACFjB,EAGDsG,EAAe,CAACrF,MAAOA,IAFvBmI,OAjBhB,IAsBO,6BACH,kBAAC,GAAD,CAAmBpJ,SAAUA,EACzB2H,SAAU,CAAC,0DAAc,4EAAiB,6CAAW,0DACrDC,YAAY,UACZE,WAAY3G,EAAML,UAAUK,EAAML,UAAUC,OAAO,0DACnD8G,eAAgB,SAAC9G,GACRf,EAGFsG,EAAe,CAAEvF,OAAQA,IAFxBqI,QAMhB,kBAAC,IAAD,CAAQqC,KAAK,KACP9B,IAGV,kBAAC,IAAD,CAAQvB,UAAU,oBACd,kBAAC,IAAD,KACI,wBAAIE,MAAO,CAACuE,WAAY,SAAxB,oDACA,yBAAKC,wBAAyB,CAACC,OAAQ5L,EAAMC,KAAKwN,cAG1D,kBAAC,IAAD,CAAQnD,KAAK,IAAInD,MAAO,CAAC2E,YAAa,SAClC,wBAAI3E,MAAO,CAACuE,WAAY,SAAxB,wCAEI,kBAAC,IAAD,CACIzF,KAAK,WACLhH,GAAG,cACH8M,MAAM,oDACNC,MAAOnM,EACP2L,SAAU,SAACS,GAAD,OAAUvD,EAAUuD,EAAMC,OAAOF,QAC3CG,SAAO,IAEX,4BACIlF,UAAW,oBACXmF,UAAWvN,GAAamB,EAAML,UAC9B0H,QAAS,WACIxI,EAGDsG,EAAe,CAAItF,OAAQmK,SAASqC,eAAe,eAAeL,QAFlE/D,MALhB,6DAiBhB,kBAAC,IAAD,CAAQoC,GAAG,e,OCtJpBqD,OA5Cf,YAA6B,IAATvO,EAAQ,EAARA,KACZwO,EAAUC,cADU,EAEAhH,mBAAS,IAFT,mBAEjBkC,EAFiB,KAEXC,EAFW,OAGAnC,mBAAS,IAHT,mBAGjBvH,EAHiB,KAGXwO,EAHW,KA6BxB,OAxBA9G,qBAAU,WACF,GAAI5H,EAAKyK,SAAS,CACd,IAAIC,EAAM1K,EAAKyK,SAASE,MAAM,KAC1BC,EAAUF,EAAI,GAAK,IAAMA,EAAI,GAAK,IAAMA,EAAI,GAChDd,EAAQgB,QAERhB,EAAQ,IAEZ,GAAI5J,EAAKE,KAAKkK,OAAS,GAAG,CACtB,IAAIuE,EAAU3O,EAAKE,KAAK0O,OAAO,EAAG,IAAM,MACxCF,EAAQC,QAERD,EAAQ1O,EAAKE,QAErB,CAACF,IAWD,yBAAK8H,UAAU,kBACX,yBAAKA,UAAU,sBAAsBE,MAAO,CAAC8C,gBAAgB,OAAD,OAAS9K,EAAKG,iBAAd,OAA5D,KACA,yBAAK2H,UAAU,sBACX,uBAAG+G,KAAMC,OAAOC,SAASC,OAAS,SAAWhP,EAAKiJ,KAC9Cf,QAAS,SAAC+G,GAAQT,EAAQU,KAAK,SAAWlP,EAAKiJ,MAAOgG,EAAEE,mBACpD,4BAAMjP,IAEd,2BAAIyJ,MCDLyF,OArCf,YAAgC,IAAVvO,EAAS,EAATA,MACd2N,EAAUC,cADa,EAGHhH,mBAAS,IAHN,mBAGpBkC,EAHoB,KAGdC,EAHc,OAIHnC,mBAAS,IAJN,mBAIpBvH,EAJoB,KAIdwO,EAJc,KAuB3B,OAjBA9G,qBAAU,WACF,GAAI/G,EAAMsN,aAAa,CACnB,IAAIzD,EAAM7J,EAAMsN,aAAaxD,MAAM,KAC/BC,EAAUF,EAAI,GAAK,IAAMA,EAAI,GAAK,IAAMA,EAAI,GAChDd,EAAQgB,QAERhB,EAAQ,IAEZ,GAAI/I,EAAME,MAAMqJ,OAAS,GAAG,CACxB,IAAIuE,EAAU9N,EAAME,MAAM6N,OAAO,EAAG,IAAM,MAC1CF,EAAQC,QAERD,EAAQ7N,EAAME,SAEtB,CAACF,IAID,yBAAKiH,UAAU,mBACX,yBAAKA,UAAU,uBAAuBE,MAAO,CAAC8C,gBAAgB,OAAD,OAAS,iDAAmDjK,EAAMG,YAAlE,OAA7D,KACA,yBAAK8G,UAAU,uBACX,uBAAG+G,KAAMC,OAAOC,SAASC,OAAS,UAAYnO,EAAMf,GAChDoI,QAAS,SAAC+G,GAAQT,EAAQU,KAAK,UAAYrO,EAAMf,IAAKmP,EAAEE,mBACpD,4BAAMjP,IAEd,2BAAIyJ,MCTL0F,OAtBf,YAA8B,IAAT1P,EAAQ,EAARA,KACb6O,EAAUC,cAQd,OANA7G,qBAAU,cAGN,CAACjI,IAID,yBAAKmI,UAAU,YACX,yBAAKA,UAAU,gBAAgBE,MAAO,CAAC8C,gBAAgB,OAAD,OAAS,uEAAT,OAAtD,KACA,yBAAKhD,UAAU,gBACX,uBAAG+G,KAAMC,OAAOC,SAASC,OAAS,SAAWrP,EAAKG,GAC9CoI,QAAS,SAAC+G,GAAQT,EAAQU,KAAK,SAAWvP,EAAKG,IAAKmP,EAAEE,mBAClD,4BAAMxP,EAAKC,cCGpB0P,OApBf,YAAuE,IAA9CC,EAA6C,EAA7CA,WAAYjI,EAAiC,EAAjCA,YAAakI,EAAoB,EAApBA,iBAAoB,EACtB/H,mBAAS8H,EAAW,IADE,mBAC3DE,EAD2D,KAC3CC,EAD2C,KAGlE,OACI,6BACKH,EAAW1H,KAAI,SAAC8H,GAAD,OAAc,4BAAQ7H,UAAW,gBACjBC,IAAK4H,EACL3H,MAAO,CAAC4H,MAAQH,IAAmBE,EAASrI,EAAY,WACxDY,QAAS,WACLwH,EAAkBC,GAClBH,EAAiBG,KAEpBA,MAEjC,6BAVJ,eAWI,wBAAI3H,MAAO,CAAE4H,MAAOtI,EAAaW,gBAAiB,UAAW4H,OAAQ,IAAMC,YAAc,UAAWxD,UAAW,QAAShB,aAAc,WAX1I,MC0IR,IA2BenD,gBA3BS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,GAChCyN,eAAgB3H,EAAkC9F,GAClD0N,gBAAiB5H,EAAmC9F,GACpD2N,eAAgB7H,EAAkC9F,GAClDpB,MAAOkH,EAAgC9F,GACvCnB,OAAQiH,EAAiC9F,GACzClB,MAAOgH,EAAgC9F,OAGhB,SAACmE,GAC3B,MAAO,CACAqC,cAAe,WACXrC,ET0OD,CAAEK,KCtYgB,gBDsYiBiC,QAAQ,KSxO9CmH,WAAY,SAACjK,EAAOC,GAChBO,ETsHL,SAAqBR,EAAOC,GAC/B,8CAAO,WAAMO,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KCrQ+B,8BDsQ/B/E,WAAW,IAEfyG,GAAqBvC,EAAOC,GAAMuC,MAAK,SAACC,GAC/BA,EAIDjC,EAAS,CACLK,KCnRoB,2BDoRpB5F,MAAOwH,IALXC,IAAMC,MAAM,6EAQhBnC,EAAS,CACLK,KCnR2B,8BDoR3B/E,WAAW,OAjBhB,2CAAP,sDSvHiB8G,CAAoB5C,EAAOC,KAExCiK,YAAa,SAAClK,EAAOC,GACjBO,ET2IL,SAAsBR,EAAOC,GAChC,8CAAO,WAAMO,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KC5RgC,+BD6RhC/E,WAAW,IAEfyG,GAAsBvC,EAAOC,GAAMuC,MAAK,SAACC,GAChCA,EAIDjC,EAAS,CACLK,KC1SqB,4BD2SrB3F,OAAQuH,EAAO0H,UALnBzH,IAAMC,MAAM,6EAQhBnC,EAAS,CACLK,KC1S4B,+BD2S5B/E,WAAW,OAjBhB,2CAAP,sDS5IiB8G,CAAqB5C,EAAOC,KAEzC9D,YAAa,SAAC6D,GACVQ,ETkLL,SAAqBR,GACxB,8CAAO,WAAMQ,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KCrU+B,8BDsU/B/E,WAAW,IAEfyG,GAAqBvC,GAAOwC,MAAK,SAACC,GACzBA,EAIDjC,EAAS,CACLK,KCnVoB,2BDoVpB1F,MAAOsH,IALXC,IAAMC,MAAM,6EAQhBnC,EAAS,CACLK,KCnV2B,8BDoV3B/E,WAAW,OAjBhB,2CAAP,sDSnLiB8G,CAAoB5C,QAK1BkC,EA5If,YAAiK,EAAzIzI,SAAyI,EAA/HoJ,cAAgI,IAAjHiH,EAAgH,EAAhHA,eAAgBC,EAAgG,EAAhGA,gBAAiBC,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,WAAYhP,EAAmD,EAAnDA,MAAOiP,EAA4C,EAA5CA,YAAahP,EAA+B,EAA/BA,OAAQiB,EAAuB,EAAvBA,YAAahB,EAAU,EAAVA,MAC/IoN,EAAUC,cACRxI,EAAUiD,cAAVjD,MAFuJ,EAG3HwB,mBAAS,IAHkH,mBAGtJ4I,EAHsJ,KAG3IC,EAH2I,OAIzH7I,mBAAS,IAJgH,mBAItJ8I,EAJsJ,KAI1IC,EAJ0I,OAKvH/I,mBAAS,IAL8G,mBAKtJgJ,EALsJ,KAKzIC,EALyI,OAMzHjJ,mBAAS,IANgH,mBAMtJkJ,EANsJ,KAM1IC,EAN0I,OAQjHnJ,mBAAS,sBARwG,mBAQtJgI,EARsJ,KAQtIC,EARsI,KA2C7J,OAjCA9H,qBACF,WACUsI,EAAWjK,EAAO,GAClBkK,EAAYlK,EAAO,GACnB7D,EAAY6D,GACZqK,EAAarK,GACb4E,SAAS9J,MAAQ,mCAE3B,CAACkF,EAAOiK,EAAYC,EAAa/N,IAG/BwF,qBACF,WACU4I,EAAc,yBAAK1I,UAAU,oBAAoB5G,EAAM2G,KAAI,SAAA7H,GAAI,OAAI,kBAAC,GAAD,CAAUA,KAAMA,EAAM+H,IAAK/H,EAAKF,YAE7G,CAACoB,IAGC0G,qBACF,WACU8I,EAAe,yBAAK5I,UAAU,oBAAoB3G,EAAO0G,KAAI,SAAAhH,GAAK,OAAI,kBAAC,GAAD,CAAWA,MAAOA,EAAOkH,IAAKlH,EAAMf,YAEpH,CAACqB,IAICyG,qBACF,WACUgJ,EAAc,yBAAK9I,UAAU,oBAAoB1G,EAAMyG,KAAI,SAAAlI,GAAI,OAAI,kBAAC,GAAD,CAAUA,KAAMA,EAAMoI,IAAKpI,EAAKC,kBAE7G,CAACwB,IAIS,6BACT,yBAAK0G,UAAU,gBACF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQoD,GAAG,QACX,kBAAC,IAAD,CAAQpD,UAAU,cACd,8DACA,kBAAC,IAAD,CAAeA,UAAU,UACrB+I,SAAW,SAAC/D,GAA6G,OAAlGA,EAAMqC,iBAAkBX,EAAQU,KAAK,WAAarE,SAASqC,eAAe,gBAAgBL,QAAe,IAChI,kBAAC,IAAD,CAASnB,KAAK,WACd,2BACI5D,UAAU,yCACVhB,KAAK,OACLgK,YAAY,iCACZC,aAAW,SACXjR,GAAG,eACH+M,MAAOwD,EACPhE,SAAU,SAACS,GAAD,OAAUwD,EAAaxD,EAAMC,OAAOF,WAGtD,iIACI,kBAAC,GAAD,CACI0C,WAAY,CAAC,qBAAO,2BAAQ,uCAAU,4EACtCjI,YAAY,UACZkI,iBAAkB,SAACG,GACfD,EAAkBC,MAG1B,kBAAC,IAAD,CACI5E,OAAQgF,EACR/E,SAAO,EACPC,KAAK,wDAEL,yBAAKO,OAAyB,uBAAjBiE,GAA2C,6BAAjBA,GACnC,wDACCc,IAIT,kBAAC,IAAD,CACIxF,OAAQiF,EACRhF,SAAO,EACPC,KAAK,oEAEL,yBAAKO,OAAyB,uBAAjBiE,GAA2C,yCAAjBA,GACnC,oEACCgB,IAIT,kBAAC,IAAD,CACI1F,OAAQkF,EACRjF,SAAO,EACPC,KAAK,8GAEL,yBAAKO,OAAyB,uBAAjBiE,GAA2C,6EAAjBA,GACnC,wGACCkB,KAKjB,kBAAC,IAAD,CAAQzF,GAAG,cCtFnC,IAgBe/C,gBAhBS,SAAA7F,GAAK,MAAK,CACjCyG,OAAQX,EAAuB9F,GAC/B0O,UAAW5I,EAAuB9F,OAGR,SAACmE,GAC3B,MAAO,CACNwK,UAAW,WACVxK,EVgVQ,CAAEK,KC1YgB,gBD0YiBiC,QAAQ,KU9UpDmI,MAAO,SAACC,EAAO9M,GACdoC,EVvDI,SAAiB0K,EAAO9M,GAC3B,8CAAO,WAAMoC,GAAN,eAAAnC,EAAA,6DACHmC,EAAS,CACLK,KCLc,aDMd8B,OAAO,IAHR,kBAOexE,GAAS+M,EAAO9M,GAP/B,OAQS,QADNI,EAPH,SASCiC,aAAaK,QAAQ,eAAgBtC,EAAIO,cACzC0B,aAAaK,QAAQ,QAAStC,EAAIM,OAClC2B,aAAaK,QAAQ,YAAaH,KAAKC,OACvCJ,EAAS,CACLK,KCrBQ,WDsBRrH,KAAM,CAAEC,UAAU,KAEtB+G,EAAS,CACLK,KC1BQ,WD2BRnH,KAAM8E,EAAI9E,OAEd8G,EAAS,CACLK,KC5Ba,gBD6BbiC,QAAQ,KAGZtC,EAAS,CACLK,KC7BU,aD8BV8B,OAAO,IA3BZ,gDAgCH1D,QAAQ0D,MAAR,MACAnC,EAAS,CACLK,KCrCc,aDsCd8B,OAAO,IAnCR,yDAAP,sDUsDQC,CAAgBsI,EAAO9M,QAKpB8D,EAnDf,YAA6D,IAAxCY,EAAuC,EAAvCA,OAAQkI,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,MAAOF,EAAa,EAAbA,UAC9C,OACO,kBAAC,IAAD,CAAUjI,OAAQA,EAAQqI,OAAQH,EAAW9F,KAAK,KAAKkG,UAAQ,GAClE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0BAAMR,SAAU,SAAC/D,GAAWA,EAAMqC,iBACrC+B,EAAMrG,SAASqC,eAAe,cAAcL,MAC3ChC,SAASqC,eAAe,iBAAiBL,SACrC,uBAAG/E,UAAU,uBAAb,kCACT,uBAAGA,UAAU,mBAAmB0D,QAASwF,GAAzC,4IACS,2BAAOM,QAAQ,aAAaxJ,UAAU,aAAtC,kCAGA,2BAAOhB,KAAK,OAAOhH,GAAG,aAAagI,UAAU,iBAC7C,6BACA,2BAAOwJ,QAAQ,gBAAgBxJ,UAAU,aAAzC,wCAGA,2BAAOhB,KAAK,WAAWhH,GAAG,gBAAgBgI,UAAU,iBACpD,yBAAKA,UAAU,oBACzB,kBAAC,IAAD,CAAQE,MAAO,CAAC4H,MAAO,QAAS3H,gBAAiB,WAAYnB,KAAK,UAAlE,4CCmBL,IAiBeqB,gBAjBS,SAAA7F,GAAK,MAAK,CACjCyG,OAAQX,EAA4B9F,GACjCiP,gBAAiBnJ,EAA6B9F,GAC9C3C,KAAMyI,EAAkB9F,OAGD,SAACmE,GAC3B,MAAO,CACNwK,UAAW,WACVxK,EXiVQ,CAAEK,KCjZqB,qBDiZiBiC,QAAQ,KW/UzDpH,WAAY,SAACwP,EAAOtR,EAAOwE,GAC1BoC,EXkCI,SAA6B7G,EAAUC,EAAOwE,GACjD,8CAAO,WAAMoC,GAAN,SAAAnC,EAAA,sDACHe,GAAazF,EAAUC,EAAOwE,GAAUoE,MAAK,SAACC,GAE1C,GADAxD,QAAQC,IAAIuD,GACU,MAAlBA,EAAOjI,OACPgG,EAAS,CACLK,KC9GI,WD+GJnH,KAAM,CAAEwR,MAAOzI,EAAO9I,SAAUC,MAAO6I,EAAO7I,SAElD4G,EAAS,CACLK,KC3GY,mBD4GZ8B,OAAO,QAGX,CACA,IAAK,IAAIA,KAASF,EAAO9D,KACrB+D,IAAMC,MAAMF,EAAO9D,KAAKgE,GAAO,IAEnCnC,EAAS,CACLK,KCpHY,mBDqHZ8B,OAAO,QAnBhB,2CAAP,sDWnCQC,CAA4BsI,EAAOtR,EAAOwE,QAKvC8D,EA1Df,YAAqF,IAAzDY,EAAwD,EAAxDA,OAAQkI,EAAgD,EAAhDA,UAAWtP,EAAqC,EAArCA,WAAY4P,EAAyB,EAAzBA,gBAAiB5R,EAAQ,EAARA,KAC3E,OACO,kBAAC,IAAD,CAAUoJ,OAAQA,EAAQqI,OAAQH,EAAW9F,KAAK,KAAKkG,UAAQ,GAClE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,8BACE,uBAAGvJ,UAAU,uBAAb,sEACT,uBAAGA,UAAU,mBAAmB0D,QAAS+F,GAAzC,4GACY,uBAAGzJ,UAAU,oBAAoB0D,OAAqB,KAAb7L,EAAKE,OAAcF,EAAKwR,MAAjE,oTAAoIxR,EAAKE,OAC5I,2BAAOyR,QAAQ,aAAaxJ,UAAU,aAAtC,8CAGA,2BAAOhB,KAAK,OAAOhH,GAAG,aAAagI,UAAU,iBAC7C,6BACG,2BAAOwJ,QAAQ,aAAaxJ,UAAU,aAAtC,qGAGH,2BAAOhB,KAAK,QAAQhH,GAAG,aAAagI,UAAU,iBAC9C,6BACA,2BAAOwJ,QAAQ,gBAAgBxJ,UAAU,aAAzC,wCAGA,2BAAOhB,KAAK,WAAWhH,GAAG,gBAAgBgI,UAAU,iBACpD,yBAAKA,UAAU,oBACV,kBAAC,IAAD,CAAQE,MAAO,CAAC4H,MAAO,QAAS3H,gBAAiB,WAAYnB,KAAK,SAASoB,QAAS,kBAAMvG,EAAWkJ,SAASqC,eAAe,cAAcL,MACvChC,SAASqC,eAAe,cAAcL,MAC7HhC,SAASqC,eAAe,iBAAiBL,SAFtD,0HCZpB,IAYe1E,gBAZS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,OAGT,SAACmE,GAC3B,MAAO,CACA+K,oBAAqB,SAAChM,EAAOT,GACzB0B,EZ6FL,SAA6BjB,EAAOT,GACvC,6BAAO,sBAAAT,EAAA,sDACHiB,GAAaC,EAAOT,GAAO0D,MAAK,SAACC,GAC7BxD,QAAQC,IAAIuD,GACU,MAAlBA,EAAOjI,OACPkI,IAAM8I,QAAQ,4GAGd9I,IAAMC,MAAMF,EAAO9D,SAPxB,2CY9FUiE,CAA4BrD,EAAOT,QAKzCoD,EAjCf,YACC,IADuBqJ,EACxB,EADwBA,oBAEnBE,EAAS5C,OAAOC,SAAS2C,OACzBvL,EAAS,IAAIwL,gBAAgBD,GAC7BlM,EAAQW,EAAO5D,IAAI,SACnBwC,EAAQoB,EAAO5D,IAAI,SASpB,OAPHqF,qBACC,WACC4J,EAAoBhM,EAAOT,KAE5B,CAACyM,EAAqBzM,EAAOS,IAI5B,iC,OC+DYoM,OAlFf,YAAuC,IAAjB1Q,EAAgB,EAAhBA,MAAOI,EAAS,EAATA,MAEnBuQ,EAAc,CAChB,CACEjF,MAAO,mDACPkF,MAAO,OACPC,KAAM,YAER,CACEnF,MAAO,uCACPkF,MAAO,SACPC,KAAM,OAER,CACEnF,MAAO,uCACPkF,MAAO,QACPC,KAAM,OAER,CACEnF,MAAO,iCACPkF,MAAO,SACPC,KAAM,OAER,CACEnF,MAAO,oGACPkF,MAAO,aACPC,KAAM,QA1BsB,EA8BQtK,mBAAS,CAC/CuK,QAASH,EACTI,KAAM,KAhCwB,mBA8B3BC,EA9B2B,KA8BZC,EA9BY,KA8DlC,OA1BAvK,qBAAU,WACE1G,GAEAiR,EAAiB,CACbH,QAASH,EACTI,KAAM/Q,EAAM2G,KAAI,SAAC7H,GACb,MAAO,CACCE,KAAM,uBAAG2O,KAAMC,OAAOC,SAASC,OAAS,SAAWhP,EAAKA,KAAKoS,WAAYpS,EAAKA,KAAKqS,WACnFC,MAAOtS,EAAKA,KAAKqS,UACjB5R,OAAQT,EAAKS,OACbE,MAAOX,EAAKW,MACZD,OAAQV,EAAKU,OACbE,WAAYZ,EAAKY,mBAWzC,CAACM,IAID,6BACI,6FAAiBI,EAAMiR,YAAvB,sFAAsDjR,EAAMkR,wBAC5D,kBAAC,IAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/N,KAAMsN,EACNU,MAAM,EACNC,YAAY,EACZC,iBAAiB,EACjBC,oBAAoB,gGACpBC,gBAAiB,CAAC,+DAAc,0DAChCC,aAAa,gJACbC,YAAY,qCCpEbC,OAVf,YAAkC,IAAV/R,EAAS,EAATA,MAEpB,OACI,6BACI,wBAAI4G,MAAO,CAACsD,aAAc,SAA1B,yEACClK,EAAMyG,KAAI,SAAClI,GAAD,OAAU,kBAAC,GAAD,CAAUA,KAAMA,SCyElCyT,OA5Ef,YAAyC,IAAlBjS,EAAiB,EAAjBA,OAAQG,EAAS,EAATA,MAErB+R,EAAe,CACnB,CACEzG,MAAO,mDACPkF,MAAO,OACPC,KAAM,YAER,CACEnF,MAAO,uCACPkF,MAAO,SACPC,KAAM,OAER,CACEnF,MAAO,uCACPkF,MAAO,QACPC,KAAM,OAER,CACEnF,MAAO,iCACPkF,MAAO,SACPC,KAAM,QArB0B,EAyBMtK,mBAAS,CACjDuK,QAASqB,EACTpB,KAAM,KA3B4B,mBAyB/BqB,EAzB+B,KAyBfC,EAzBe,KAwDpC,OAzBA3L,qBAAU,WACEzG,GAEFoS,EAAkB,CAChBvB,QAASqB,EACTpB,KAAM9Q,EAAO0G,KAAI,SAAChH,GACd,MAAO,CACCX,KAAM,uBAAG2O,KAAMC,OAAOC,SAASC,OAAS,UAAYnO,EAAMA,MAAM2S,SAAU3S,EAAMA,MAAM4S,WACtFnB,MAAOzR,EAAMA,MAAM4S,UACnBhT,OAAQI,EAAMJ,OACdE,MAAOE,EAAMF,MACbD,OAAQG,EAAMH,eAWlC,CAACS,IAID,6BACI,uIAAwBG,EAAMoS,aAA9B,4FAA+DpS,EAAMqS,yBACrE,kBAAC,IAAD,CACIlB,SAAO,EACPC,UAAQ,EACRC,OAAK,EACL/N,KAAM0O,EACNV,MAAM,EACNC,YAAY,EACZC,iBAAiB,EACjBC,oBAAoB,gGACpBC,gBAAiB,CAAC,+DAAc,0DAChCC,aAAa,wKACbC,YAAY,qCCa5B,IAqBe/K,gBArBS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,GAChCsR,cAAexL,EAAsC9F,GACrDuR,SAAUzL,EAA6B9F,GACvCwR,gBAAiB1L,EAAkB9F,OAGZ,SAACmE,GAC3B,MAAO,CACAqC,cAAe,WACXrC,EhBqSD,CAAEK,KCtYgB,gBDsYiBiC,QAAQ,KgBnS9C3C,YAAa,SAACtB,GhBkJf,IAAgClF,EgBjJ3B6G,GhBiJ2B7G,EgBjJakF,EhBkJhD,uCAAO,WAAM2B,GAAN,SAAAnC,EAAA,sDACHmC,EAAS,CACLK,KClOoC,mCDmOpC/E,WAAW,IAEfyG,GAAqB9B,aAAaC,QAAQ,SAAU/G,GAAU6I,MAAK,SAACC,GAClD,MAAVA,GACAjC,EAAS,CACLK,KCvOiB,wBDwOjB/G,QAAS2I,IAEbjC,EAAS,CACLK,KC5O4B,mCD6O5B/E,WAAW,MAIf4G,IAAMC,MAAM,iGACZnC,EAAS,CACLK,KCjQW,kBDkQX8B,OAAO,IAEXnC,EAAS,CACLK,KCvP4B,mCDwP5B/E,WAAW,QAxBpB,2CAAP,yDgBhJIuE,cAAe,SAACC,EAAcF,GAC1BI,EhBwQL,SAAuBF,EAAcF,GACxC,8CAAO,WAAMI,GAAN,SAAAnC,EAAA,sEACOmC,EAASD,MADhB,kCAECgC,GAAuB9B,aAAaC,QAAQ,SAAUJ,EAAcF,GAAQoC,MAAK,SAACC,GACzEA,EAIDjC,EAAS,CACLK,KChWe,0BDiWfP,aAAcmC,EAAOnC,eALzBoC,IAAMC,MAAM,mJAJrB,2CAAP,sDgBzQiBC,CAAsBtC,EAAcF,QAK1C8B,EAnFf,YACC,IADqByL,EACtB,EADsBA,cAAexN,EACrC,EADqCA,YAAayN,EAClD,EADkDA,SAAUC,EAC5D,EAD4DA,gBAAiBxN,EAC7E,EAD6EA,cAEnED,EAAW6C,cAAX7C,OADV,EAEgDoB,mBAAS,IAFzD,mBAEWgI,EAFX,KAE2BC,EAF3B,KAmBI,OAfA9H,qBACF,WACUxB,EAAYC,KAEtB,CAACA,EAAQD,IAGPwB,qBACF,WACU8H,EAAkB,kBAAC,GAAD,CAAWxO,MAAO2S,EAAS3S,MAAOI,MAAOuS,EAASvS,SACpEuJ,SAAS9J,MAAQ,8CAAa8S,EAASjU,WAEjD,CAACiU,IAIK,6BACI,yBAAK/L,UAAU,gBACf,kBAAC,IAAD,CACIiD,OAAQ6I,EACR5I,SAAO,EACPC,KAAK,uDAET,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,GAAG,QACX,kBAAC,IAAD,CAAQpD,UAAU,cACd,4KAA+B+L,EAASjU,UACxC,4BACI4L,OAAQsI,EAAgBlU,WAAaiU,EAASjU,SAC9CkI,UAAU,kBACVI,QAAU,WACN5B,EAAc,CAACC,cAAcsN,EAASE,aAAyBF,EAAS/T,MAE3E+T,EAASE,YAAY,+DAAa,sEAEvC,kBAAC,GAAD,CACIxE,WAAY,CAAC,2BAAQ,uCAAU,wCAC/BjI,YAAY,UACZkI,iBAAkB,SAACG,GACE,6BAAbA,GACAD,EAAkB,kBAAC,GAAD,CAAWxO,MAAO2S,EAAS3S,MAAOI,MAAOuS,EAASvS,SACvD,yCAAbqO,GACAD,EAAkB,kBAAC,GAAD,CAAYvO,OAAQ0S,EAAS1S,OAAQG,MAAOuS,EAASvS,SAC1D,yCAAbqO,GACAD,EAAkB,kBAAC,GAAD,CAAatO,MAAOyS,EAASG,qBAE1DvE,GAEL,kBAAC,IAAD,CAAQvE,GAAG,eCR/B,IAmBe/C,gBAnBS,SAAA7F,GAAK,MAAK,CAC9B5C,SAAU0I,EAAsB9F,GAChC3C,KAAMyI,EAAkB9F,OAGC,SAACmE,GAC7B,MAAO,CACNwN,aAAc,WACbxN,EjBuTQ,CAAEK,KCtYgB,gBDsYiBiC,QAAQ,KiBrT9CmL,cAAe,WACXzN,EAASoC,OAEbsL,oBAAqB,WACjB1N,EjByTD,CAAEK,KC7YqB,qBD6YiBiC,QAAQ,QiBpT5CZ,EArEf,YAAuF,IAArEzI,EAAoE,EAApEA,SAAUuU,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,oBAAqBxU,EAAQ,EAARA,KACtE6O,EAAUC,cAEd,OACQ,kBAAC,IAAD,CAAWzG,MAAO,CAAEC,gBAAiB,WAAamM,MAAI,EAACC,OAAO,KAAKC,MAAM,OACzE,kBAAC,IAAD,KACI,4BAAQxM,UAAU,cAAlB,cAEJ,kBAAC,IAAD,CAAcyM,MAAI,IAIlB,kBAAC,IAAD,CAAcC,OAAK,GACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAe3D,SAAW,SAAC/D,GAA4G,OAAjGA,EAAMqC,iBAAkBX,EAAQU,KAAK,WAAarE,SAASqC,eAAe,eAAeL,QAAe,IAC1I,yBAAK/E,UAAU,gBACf,2BAAOA,UAAU,uBAAuBhB,KAAK,OAAOgK,YAAY,iCAAQC,aAAW,iCAC/EjR,GAAG,mBAKf,kBAAC,IAAD,CAAYgI,UAAU,mBAAmB0D,OAAQ9L,GAC7C,kBAAC,IAAD,CAAY+U,GAAG,IAAIvM,QAAS+L,GACxB,kBAAC,IAAD,CAASvI,KAAK,gBADlB,oCAIJ,kBAAC,IAAD,CAAY5D,UAAU,mBAAmB0D,OAAQ9L,GAC7C,kBAAC,IAAD,CAAY+U,GAAG,IAAIvM,QAASiM,GACxB,kBAAC,IAAD,CAASzI,KAAK,cADlB,kHAIJ,kBAAC,IAAD,CAAYF,QAAS9L,EAAUoI,UAAU,oBACrC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAmB4M,KAAG,EAACC,OAAK,GAC5B,0BAAM7M,UAAU,QAAQnI,EAAKC,WAE7B,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAiBiP,KAAM,SAASlP,EAAKG,IAArC,8CACA,kBAAC,IAAD,CAAiBoI,QAAUgM,GACvB,kBAAC,IAAD,CAASxI,KAAK,iBADlB,2CCxBTkJ,G,uKArBX,OACE,6BACE,kBAAC,GAAD,MACA,yBAAK9M,UAAU,WACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+M,OAAK,EAACC,KAAK,IAAIC,UAAWzV,IACjC,kBAAC,IAAD,CAAOuV,OAAK,EAACC,KAAK,YAAYC,UAAWC,KACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWE,KAC1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,iBAAiBC,UAAWG,KAC9C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,YAAYC,UAAWI,KACzC,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,gBAAgBC,UAAWK,KAC7C,kBAAC,IAAD,CAAOC,OAAQ,WAAc,OAAO,6CAE1C,kBAAC,IAAD,CAAgBC,SAAS,aAAaC,iBAAe,EAACC,aAAW,EAACC,cAAY,IAC9E,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAjBeC,IAAMC,WCa3B,IAQexN,eAAQ,MARI,SAAC1B,GAC3B,MAAO,CACJmP,OAAQ,WACNnP,EAASoC,UAKAV,EA7Bf,YAAwB,IAAVyN,EAAS,EAATA,OAUZ,OARAhO,qBACE,WACIgO,MAGJ,IAIA,kBAAC,IAAD,KACE,yBAAK9N,UAAU,UACb,8BACE,kBAAC,GAAD,YCTJ+N,GAAcC,QACW,cAA7BhH,OAAOC,SAASgH,UAEe,UAA7BjH,OAAOC,SAASgH,UAEhBjH,OAAOC,SAASgH,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzN,MAAK,SAAApD,GACJA,EAAakR,cAAgB,WAC3B,IAAMC,EAAmBnR,EAAaoR,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlU,QACf8T,UAAUC,cAAcM,YAI1BzR,QAAQC,IACN,iHAKEgR,GAAUA,EAAOS,UACnBT,EAAOS,SAASvR,KAMlBH,QAAQC,IAAI,sCAGRgR,GAAUA,EAAOU,WACnBV,EAAOU,UAAUxR,WAO5ByR,OAAM,SAAAlO,GACL1D,QAAQ0D,MAAM,4CAA6CA,M,sBC/E3DmO,GAAmBjI,OAAOkI,sCAAwCC,KAClEC,GAAQC,czBoCC,WAAgD,IAA/B7U,EAA8B,uDAAtB/C,EAAc6X,EAAQ,uCAC5D,OAAQA,EAAOtQ,MACb,IKxDoB,WLyDhB,OAAOxE,EAAM+U,MAAM,CAAC,QAASD,EAAOzX,MACxC,IKzDoB,WL0DhB,OAAO2C,EAAM+U,MAAM,CAAC,QAASD,EAAO3X,MAExC,IKzD4B,mBL0DxB,OAAO6C,EAAM+U,MAAM,CAAC,UAAW,QAASD,EAAOpX,MACnD,IK1D6B,oBL2DzB,OAAOsC,EAAM+U,MAAM,CAAC,UAAW,SAAUD,EAAOvW,OAEpD,IKlDoC,2BLmDhC,OAAOyB,EAAM+U,MAAM,CAAC,gBAAiB,SAAUD,EAAOlW,OAC1D,IKnDqC,4BLoDjC,OAAOoB,EAAM+U,MAAM,CAAC,gBAAiB,UAAWD,EAAOjW,QAC3D,IKpDoC,2BLqDhC,OAAOmB,EAAM+U,MAAM,CAAC,gBAAiB,SAAUD,EAAOhW,OAE1D,IK9DqC,4BL+DjC,OAAOkB,EAAM+U,MAAM,CAAC,UAAW,OAAQ,aAAcD,EAAO5W,WAChE,IK/D4C,mCLgExC,OAAO8B,EAAM+U,MAAM,CAAC,UAAW,OAAQ,YAAa,UAAWD,EAAO3W,QAC1E,IKhE2C,kCLiEvC,OAAO6B,EAAM+U,MAAM,CAAC,UAAW,OAAQ,YAAa,SAAUD,EAAOzW,OAEzE,IKjEsC,6BLkElC,OAAO2B,EAAM+U,MAAM,CAAC,UAAW,QAAS,aAAcD,EAAO5W,WAEjE,IK1DiC,wBL2D7B,OAAO8B,EAAM+U,MAAM,CAAC,mBAAoBD,EAAOrX,SACnD,IK3DmC,0BL4D/B,OAAOuC,EAAM+U,MAAM,CAAC,kBAAmB,eAAgBD,EAAO7Q,cAElE,IKtFyB,gBLuFrB,OAAOjE,EAAM+U,MAAM,CAAC,cAAe,aAAcD,EAAOrO,QAC5D,IKvF8B,qBLwF1B,OAAOzG,EAAM+U,MAAM,CAAC,cAAe,kBAAmBD,EAAOrO,QAEjE,IKvFsB,aLwFlB,OAAOzG,EAAM+U,MAAM,CAAC,SAAU,QAASD,EAAOxO,OAClD,IKxF4B,mBLyFxB,OAAOtG,EAAM+U,MAAM,CAAC,SAAU,cAAeD,EAAOxO,OACxD,IKzF8B,qBL0F1B,OAAOtG,EAAM+U,MAAM,CAAC,SAAU,eAAgBD,EAAOxO,OACzD,IK1F+B,sBL2F3B,OAAOtG,EAAM+U,MAAM,CAAC,SAAU,gBAAiBD,EAAOxO,OAC1D,IK3F2B,kBL4FvB,OAAOtG,EAAM+U,MAAM,CAAC,SAAU,YAAaD,EAAOxO,OAEtD,IKrFuC,8BLsFnC,OAAOtG,EAAM+U,MAAM,CAAC,YAAa,eAAgBD,EAAOrV,WAC5D,IKtFwC,+BLuFpC,OAAOO,EAAM+U,MAAM,CAAC,YAAa,gBAAiBD,EAAOrV,WAC7D,IKvFuC,8BLwFnC,OAAOO,EAAM+U,MAAM,CAAC,YAAa,eAAgBD,EAAOrV,WAC5D,IKxFwC,+BLyFpC,OAAOO,EAAM+U,MAAM,CAAC,YAAa,gBAAiBD,EAAOrV,WAC7D,IKxF4C,mCLyFxC,OAAOO,EAAM+U,MAAM,CAAC,YAAa,mBAAoBD,EAAOrV,WAChE,IK3FuC,8BL4FnC,OAAOO,EAAM+U,MAAM,CAAC,YAAa,eAAgBD,EAAOrV,WAC5D,QACI,OAAOO,KyBnGoByU,GAAiBO,aAAgBC,QAEpEC,IAASnC,OACP,kBAAC,IAAD,CAAU6B,MAAOA,IACb,kBAAC,GAAD,OAEJrM,SAASqC,eAAe,SDFnB,SAAkBiJ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwB5I,OAAOC,SAASF,MACpDG,SAAWF,OAAOC,SAASC,OAIvC,OAGFF,OAAO6I,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMwB,GAAN,sBAEP7B,KAgEV,SAAiCK,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX/R,QAAS,CAAE,iBAAkB,YAE5BsE,MAAK,SAAAnD,GAEJ,IAAMuS,EAAcvS,EAASnB,QAAQ5B,IAAI,gBAEnB,MAApB+C,EAAS7E,QACO,MAAfoX,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMtP,MAAK,SAAApD,GACjCA,EAAa2S,aAAavP,MAAK,WAC7BqG,OAAOC,SAASkJ,eAKpBhC,GAAgBC,EAAOC,MAG1BW,OAAM,WACL5R,QAAQC,IACN,oEAvFA+S,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMtP,MAAK,WACjCvD,QAAQC,IACN,iHAMJ8Q,GAAgBC,EAAOC,OCpB/BE,GAEea,c","file":"static/js/main.e90529ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction HomePage () \r\n{\r\n    return (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Страница ещё не готова</h1>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nexport default HomePage;","import * as types from './actionTypes';\r\nimport { Map } from 'immutable';\r\n\r\n// Создаем reducer с начальным состоянием.\r\nconst initialState = Map(\r\n    {\r\n        auth: { loggedIn: false },\r\n        user: { username:\"\", email:\"\", id: null },\r\n        content: { \r\n            game: {\r\n                rawg: {\r\n                    name: \"\",\r\n                    background_image: \"\",\r\n                    background_image_additional: \"\",\r\n                    developers: [{}],\r\n                },\r\n                hltb:{\r\n                    game_image_url: \"\"\r\n                },\r\n                user_info:{\r\n                    status: null,\r\n                    review: \"\",\r\n                    score: 0,\r\n                    spent_time: 0\r\n                }\r\n            },\r\n            movie: {\r\n                tmdb: {\r\n                    title: \"\",\r\n                    poster_path: \"\",\r\n                    developers: [{}],\r\n                },\r\n                user_info:{\r\n                    status: null,\r\n                    review: \"\",\r\n                    score: 0,\r\n                    spent_time: 0\r\n                }\r\n            } \r\n        },\r\n        searchContent: {\r\n            games: [],\r\n            movies: [],\r\n            users: []\r\n        },\r\n        userPageContent: {\r\n            stats: {}\r\n        },\r\n        openedPages: { LoginForm: false, RegistrateForm: false },\r\n        errors: {auth: false, registrate: false, gameRequest: false, movieRequest: false, userPage: false },\r\n        isLoading: {contentGame: false, contentMovie: false, searchGames: false, searchMovies: false, userPageContent: false, searchUsers: false}\r\n    }\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_USER:\r\n        return state.setIn(['user'], action.user);\r\n    case types.SET_AUTH:\r\n        return state.setIn(['auth'], action.auth);\r\n\r\n    case types.SET_CONTENT_GAME:\r\n        return state.setIn(['content', 'game'], action.game);\r\n    case types.SET_CONTENT_MOVIE:\r\n        return state.setIn(['content', 'movie'], action.movie);\r\n\r\n    case types.SET_SEARCH_CONTENT_GAMES:\r\n        return state.setIn(['searchContent', 'games'], action.games);\r\n    case types.SET_SEARCH_CONTENT_MOVIES:\r\n        return state.setIn(['searchContent', 'movies'], action.movies);\r\n    case types.SET_SEARCH_CONTENT_USERS:\r\n        return state.setIn(['searchContent', 'users'], action.users);\r\n\r\n    case types.SET_CONTENT_GAME_USERINFO:\r\n        return state.setIn(['content', 'game', 'user_info'], action.user_info);\r\n    case types.SET_CONTENT_GAME_USERINFO_STATUS:\r\n        return state.setIn(['content', 'game', 'user_info', 'status'], action.status)\r\n    case types.SET_CONTENT_GAME_USERINFO_SCORE:\r\n        return state.setIn(['content', 'game', 'user_info', 'score'], action.score)\r\n\r\n    case types.SET_CONTENT_MOVIE_USERINFO:\r\n        return state.setIn(['content', 'movie', 'user_info'], action.user_info);\r\n\r\n    case types.SET_USER_PAGE_CONTENT:\r\n        return state.setIn(['userPageContent'], action.content);\r\n    case types.SET_USER_PAGE_FOLLOWING:\r\n        return state.setIn(['userPageContent', 'is_followed'], action.is_following);\r\n\r\n    case types.SET_LOGINFORM:\r\n        return state.setIn(['openedPages', 'LoginForm'], action.isOpen);\r\n    case types.SET_REGISTRATEFORM:\r\n        return state.setIn(['openedPages', 'RegistrateForm'], action.isOpen);\r\n\r\n    case types.AUTH_ERROR:\r\n        return state.setIn(['errors', 'auth'], action.error);\r\n    case types.REGISTRATE_ERROR:\r\n        return state.setIn(['errors', 'registrate'], action.error);\r\n    case types.GAME_REQUEST_ERROR:\r\n        return state.setIn(['errors', 'gameRequest'], action.error);\r\n    case types.MOVIE_REQUEST_ERROR:\r\n        return state.setIn(['errors', 'movieRequest'], action.error);\r\n    case types.USER_PAGE_ERROR:\r\n        return state.setIn(['errors', 'userPage'], action.error);\r\n\r\n    case types.SET_IS_LOADING_CONTENT_GAME:\r\n        return state.setIn(['isLoading', 'contentGame'], action.isLoading);\r\n    case types.SET_IS_LOADING_CONTENT_MOVIE:\r\n        return state.setIn(['isLoading', 'contentMovie'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_GAMES:\r\n        return state.setIn(['isLoading', 'searchGames'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_MOVIES:\r\n        return state.setIn(['isLoading', 'searchMovies'], action.isLoading);\r\n    case types.SET_IS_LOADING_USER_PAGE_CONTENT:\r\n        return state.setIn(['isLoading', 'userPageContent'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_USERS:\r\n        return state.setIn(['isLoading', 'searchUsers'], action.isLoading);\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport function getLoggedIn(state) {\r\n    return state.get('auth').loggedIn;\r\n}\r\n\r\nexport function getAuth(state) {\r\n    return state.get('auth');\r\n}\r\n\r\nexport function getContentGame(state) {\r\n    return state.get('content').game;\r\n}\r\n\r\nexport function getContentMovie(state) {\r\n    return state.get('content').movie;\r\n}\r\n\r\nexport function getSearchContentGames(state) {\r\n    return state.get('searchContent').games;\r\n}\r\n\r\nexport function getSearchContentMovies(state) {\r\n    return state.get('searchContent').movies;\r\n}\r\n\r\nexport function getSearchContentUsers(state) {\r\n    return state.get('searchContent').users;\r\n}\r\n\r\nexport function getAuthError(state) {\r\n    return state.get('errors').auth;\r\n}\r\n\r\nexport function getRegistrateError(state) {\r\n    return state.get('errors').registrate;\r\n}\r\n\r\nexport function getGameRequestError(state) {\r\n    return state.get('errors').gameRequest;\r\n}\r\n\r\nexport function getMovieRequestError(state) {\r\n    return state.get('errors').movieRequest;\r\n}\r\n\r\nexport function getUserPageError(state) {\r\n    return state.get('errors').userPage;\r\n}\r\n\r\nexport function getUser(state) {\r\n    return state.get('user');\r\n}\r\n\r\nexport function getLoginForm(state) {\r\n    return state.get('openedPages').LoginForm;\r\n}\r\n\r\nexport function getRegistrateForm(state) {\r\n    return state.get('openedPages').RegistrateForm;\r\n}\r\n\r\nexport function getIsLoadingContentGame(state) {\r\n    return state.get('isLoading').contentGame;\r\n}\r\n\r\nexport function getIsLoadingContentMovie(state) {\r\n    return state.get('isLoading').contentMovie;\r\n}\r\n\r\nexport function getIsLoadingSearchGames(state) {\r\n    return state.get('isLoading').searchGames;\r\n}\r\n\r\nexport function getIsLoadingSearchMovies(state) {\r\n    return state.get('isLoading').searchMovies;\r\n}\r\n\r\nexport function getIsLoadingSearchUsers(state) {\r\n    return state.get('isLoading').searchUsers;\r\n}\r\n\r\nexport function getIsLoadingSearchAll(state) {\r\n    return (state.get('isLoading').searchUsers || state.get('isLoading').searchMovies || state.get('isLoading').searchGames);\r\n}\r\n\r\nexport function getIsLoadingUserPageContent(state) {\r\n    return state.get('isLoading').userPageContent;\r\n}\r\n\r\nexport function getUserPageContent(state){\r\n    return state.get('userPageContent');\r\n}","/** Время жизни токена в миллисекундах, после истечения которого будет запрошен новый токен*/\r\nexport const TOKEN_LIFETIME = 86000000; \r\n/**Адрес сервера*/\r\nexport const BACKEND_URL = \"http://35.193.124.214:8001/\";\r\n/**Адрес получения токена */\r\nexport const GET_TOKEN_URL = BACKEND_URL + \"users/auth/login/\"; \r\n/**Адрес обновления токена */\r\nexport const REFRESH_TOKEN_URL = BACKEND_URL + \"users/auth/refresh-token/\";\r\n/**Адрес регистрации */\r\nexport const REGISTRATE_URL = BACKEND_URL + \"users/auth/signup/\";\r\n/**Адрес подтверждения почты */\r\nexport const CONFIRM_URL = BACKEND_URL + \"users/auth/confirmation/\";\r\n/**Адрес запроса игры */\r\nexport const GET_GAME_URL = BACKEND_URL + \"games/game/\";\r\n/**Адрес поиска игр */\r\nexport const SEARCH_GAMES_URL = BACKEND_URL + \"games/search/\";\r\n/**Адрес запроса фильма */\r\nexport const GET_MOVIE_URL = BACKEND_URL + \"movies/movie/\";\r\n/**Адрес поиска фильмов */\r\nexport const SEARCH_MOVIES_URL = BACKEND_URL + \"movies/search/\";\r\n/**Адрес получения информации о пользователе */\r\nexport const USER_INFO_URL = BACKEND_URL + \"users/user/\";\r\n/**Адрес поиска пользователей */\r\nexport const SEARCH_USERS_URL = BACKEND_URL + \"users/search/\"; \r\n","import axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport {GET_TOKEN_URL, REFRESH_TOKEN_URL, REGISTRATE_URL, CONFIRM_URL} from '../settings';\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n};\r\n\r\n/**\r\n * ПОлучение токена авторизации. Токен сохраняется в localStorage\r\n * @param {string} username Имя пользователя\r\n * @param {string} password Пароль \r\n */\r\nexport async function getToken(username, password){\r\n    try{\r\n        const res = await axios.post(GET_TOKEN_URL, {\r\n                    username: username,\r\n                    password: password \r\n                }, axiosConfig);\r\n\r\n        let userData = jwt_decode(res.data.access);\r\n        let user = {username: userData.username, id: userData.user_id, email: userData.email}\r\n\r\n        return {token: res.data.access, refreshToken: res.data.refresh, user: user};\r\n    }catch(e){\r\n        console.log(\"axios error: \" + e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Функция обновления токена\r\n */\r\nexport async function updateToken(refreshToken){\r\n    if (typeof refreshToken !== 'undefined' & refreshToken != null)\r\n        try{\r\n            const res = await axios.post(REFRESH_TOKEN_URL, {\r\n                        refresh: refreshToken\r\n                    }, axiosConfig);\r\n                    \r\n            let userData = jwt_decode(res.data.access);\r\n            let user = {username: userData.username, id: userData.user_id, email: userData.email};\r\n\r\n            return {token: res.data.access, user: user};\r\n        }catch(e){\r\n            console.log(\"exios error: \" + e);\r\n            return null;\r\n        }\r\n    return null;\r\n}\r\n\r\nexport async function registration(username, email, password) {\r\n   try{\r\n        const res = await axios.post(REGISTRATE_URL, \r\n            {  username: username,\r\n                email: email, \r\n                password: password \r\n            }, axiosConfig);\r\n        let data = res.data;\t\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e.response);\r\n        return e.response;\r\n    }\r\n}\r\n\r\nexport async function confirmation(uid64, token) {\r\n    try{\r\n        console.log(uid64);\r\n        console.log(token);\r\n        const res = await axios.patch(CONFIRM_URL, \r\n             {  \r\n                uid64: uid64,\r\n                token: token\r\n             }, \r\n             axiosConfig);\r\n        let data = res.data;\t\r\n        return data;\r\n     }catch(e){\r\n         console.log(\"AXIOS ERROR: \", e.response);\r\n         return e.response;\r\n     }\r\n }\r\n","import axios from \"axios\";\r\nimport {GET_GAME_URL, SEARCH_GAMES_URL, USER_INFO_URL, SEARCH_MOVIES_URL, GET_MOVIE_URL, SEARCH_USERS_URL} from \"../settings\";\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n};\r\n\r\naxios.defaults.headers.common = {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n\r\n/**\r\n * Запрос к бд, получающий информацию об игре\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID игры  \r\n * @returns {object} Информация об игре\r\n */\r\nexport async function getGame(token, id) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(GET_GAME_URL + id + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(GET_GAME_URL + id + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Запрос к бд, получающий информацию о фильме\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID фильма  \r\n * @returns {object} Информация о фильме\r\n */\r\nexport async function getMovie(token, id) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(GET_MOVIE_URL + id + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(GET_MOVIE_URL + id + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса игры\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Статус игры\r\n * @param {string} gameSlug Слаг игры\r\n */\r\nexport async function setGameStatus(token, gameSlug, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        console.log(user_info);\r\n        const res = await axios.put(GET_GAME_URL + gameSlug + \"/\", \r\n            user_info, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса фильма\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Статус фильма\r\n * @param {string} movieID ID фильма\r\n */\r\nexport async function setMovieStatus(token, id, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        console.log(user_info);\r\n        const res = await axios.put(GET_MOVIE_URL + id + \"/\", \r\n            user_info, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса игры\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Объект статуса игры\r\n * @param {string} gameSlug Слаг игры\r\n \r\nexport async function patchGameStatus(token, gameSlug, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        const res = await axios.patch(GET_GAME_URL + gameSlug + \"/\", \r\n        {status: user_info.status, score: user_info.score, review: user_info.review, spent_time: user_info.spent_time }, { 'headers': { 'Authorization': AuthStr } });\r\n        console.log(res.data);\r\n        if (res.status === 204 || res.status === 201|| res.status === 200)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}*/\r\n\r\n\r\n/**\r\n * Запрос на поиск игр\r\n * @param {string} query Поисковый запрос\r\n * @param {int} page Страница поиска\r\n */\r\nexport async function searchGames(query, page){\r\n    try{\r\n        const res = await axios.get(SEARCH_GAMES_URL, { params : {query: query, page: page} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на поиск фильмов\r\n * @param {string} query Поисковый запрос\r\n * @param {int} page Страница поиска\r\n */\r\nexport async function searchMovies(query, page){\r\n    try{\r\n        const res = await axios.get(SEARCH_MOVIES_URL, { params : {query: query, page: page} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n            console.log(res);\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на поиск пользователей\r\n * @param {string} query Поисковый запрос\r\n */\r\nexport async function searchUsers(query){\r\n    try{\r\n        const res = await axios.get(SEARCH_USERS_URL, { params : {query: query} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n            console.log(res);\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос к бд, получающий информацию об игре\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID игры  \r\n * @returns {object} Информация об игре\r\n */\r\nexport async function getUserInfo(token, userID) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса пользовтеля (добавить в друзья и тд)\r\n * @param {string} token Токен доступа\r\n * @param {boolean} is_following Статус фильма\r\n * @param {string} userID ID пользовтеля\r\n */\r\nexport async function setUserStatus(token, is_following, userID){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        const res = await axios.put(USER_INFO_URL + userID + \"/follow/\", \r\n            is_following, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport * as selectors from './reducers';\r\nimport {getToken, updateToken, registration, confirmation} from \"../services/jwtAuth\";\r\nimport {TOKEN_LIFETIME} from \"../settings\";\r\nimport * as Requests from \"../services/requests\";\r\nimport { toast } from \"react-toastify\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport function tryAuth(login, password) {\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.AUTH_ERROR,\r\n            error: false \r\n        });\r\n\r\n      try {\r\n        const res = await getToken(login, password);\r\n        if (res !== null){\r\n            localStorage.setItem('refreshToken', res.refreshToken);\r\n            localStorage.setItem('token', res.token);\r\n            localStorage.setItem('tokenTime', Date.now());\r\n            dispatch({\r\n                type: actionTypes.SET_AUTH,\r\n                auth: { loggedIn: true }, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: res.user, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_LOGINFORM,\r\n                isOpen: false \r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: actionTypes.AUTH_ERROR,\r\n                error: true \r\n            });\r\n        }\r\n            \r\n      }catch (error) {\r\n        console.error(error);\r\n        dispatch({\r\n            type: actionTypes.AUTH_ERROR,\r\n            error: true \r\n        });\r\n      }\r\n    };\r\n}\r\n\r\nexport function checkAuthorization(){\r\n    return async(dispatch) => {\r\n        if (localStorage.getItem('token') === null | Date.now() - localStorage.getItem('tokenTime') > TOKEN_LIFETIME){\r\n            const res = await updateToken(localStorage.getItem(\"refreshToken\"));\r\n            if (res !== null){\r\n                dispatch({\r\n                    type: actionTypes.SET_AUTH,\r\n                    auth: { loggedIn: true }, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: res.user, \r\n                });\r\n                localStorage.setItem('token', res.token);\r\n                localStorage.setItem('tokenTime', Date.now());\r\n                return true;\r\n            }else{\r\n                //toast.warn(\"Произошла ошибка авторизации. Зайдите ещё раз\");\r\n                dispatch(resetAuthorization());\r\n                return false;\r\n            } \r\n        }else{\r\n            let userData = jwt_decode(localStorage.getItem('token'));\r\n            let user = {username: userData.username, id: userData.user_id, email: userData.email};\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: user, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_AUTH,\r\n                auth: { loggedIn: true }, \r\n            });\r\n            return true;\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport function resetAuthorization(){\r\n    return async(dispatch) => {\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('tokenTime');\r\n        dispatch({\r\n            type: actionTypes.SET_AUTH,\r\n            auth: { loggedIn: false }, \r\n        });\r\n        dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: { username:\"\", id: null, email:\"\" }, \r\n        });\r\n    }\r\n}\r\n\r\nexport function registrationRequest(username, email, password){\r\n    return async(dispatch) => {\r\n        registration(username, email, password).then((result) => {\r\n            console.log(result);\r\n            if (result.status !== 400){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: { login: result.username, email: result.email }, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.REGISTRATE_ERROR,\r\n                    error: false \r\n                });\r\n            }\r\n            else{\r\n                for (let error in result.data)\r\n                    toast.error(result.data[error][0]);\r\n                   \r\n                dispatch({\r\n                    type: actionTypes.REGISTRATE_ERROR,\r\n                    error: true \r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function confirmEmailRequest(uid64, token){\r\n    return async() => {\r\n        confirmation(uid64, token).then((result) => {\r\n            console.log(result);\r\n            if (result.status !== 400){\r\n                toast.success(\"Почта подтверждена!\");\r\n            }\r\n            else{\r\n                toast.error(result.data);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestGame(id){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n            isLoading: true\r\n        });\r\n        Requests.getGame(localStorage.getItem('token'), id).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_CONTENT_GAME,\r\n                    game: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Игра не найдена!\");\r\n                dispatch({\r\n                    type: actionTypes.GAME_REQUEST_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestMovie(id){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n            isLoading: true\r\n        });\r\n        Requests.getMovie(localStorage.getItem('token'), id).then((result) => {\r\n            console.log(result);\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_CONTENT_MOVIE,\r\n                    movie: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Фильм не найден!\");\r\n                dispatch({\r\n                    type: actionTypes.MOVIE_REQUEST_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function setGameStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setGameStatus(localStorage.getItem('token'), selectors.getContentGame(getState()).rawg.slug, user_info).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_GAME_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/*export function patchGameStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.patchGameStatus(localStorage.getItem('token'), selectors.getContentGame(getState()).rawg.slug, user_info).then((result) => {\r\n                console.log(result)\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_GAME_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}*/\r\n\r\nexport function requestUserPageContent(username){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n            isLoading: true\r\n        });\r\n        Requests.getUserInfo(localStorage.getItem('token'), username).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER_PAGE_CONTENT,\r\n                    content: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Профиль не найден!\");\r\n                dispatch({\r\n                    type: actionTypes.USER_PAGE_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function searchGames(query, page){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_GAMES,\r\n            isLoading: true\r\n        });\r\n        Requests.searchGames(query, page).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_GAMES,\r\n                    games: result, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_GAMES,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function searchMovies(query, page){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_MOVIES,\r\n            isLoading: true\r\n        });\r\n        Requests.searchMovies(query, page).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_MOVIES,\r\n                    movies: result.results, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_MOVIES,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function setMovieStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setMovieStatus(localStorage.getItem('token'), selectors.getContentMovie(getState()).tmdb.id, user_info).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_MOVIE_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function searchUsers(query){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_USERS,\r\n            isLoading: true\r\n        });\r\n        Requests.searchUsers(query).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_USERS,\r\n                    users: result, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_USERS,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function setUserStatus(is_following, userID){\r\n    return async(dispatch) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setUserStatus(localStorage.getItem('token'), is_following, userID).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_USER_PAGE_FOLLOWING,\r\n                        is_following: result.is_following\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function setUser(user) {\r\n    return({ type: actionTypes.SET_USER, user: user });\r\n}\r\n\r\nexport function openLoginForm() {\r\n    return({ type: actionTypes.SET_LOGINFORM, isOpen: true  });\r\n}\r\n\r\nexport function closeLoginForm() {\r\n    return({ type: actionTypes.SET_LOGINFORM, isOpen: false  });\r\n}\r\n\r\nexport function openRegistrateForm() {\r\n    return({ type: actionTypes.SET_REGISTRATEFORM, isOpen: true  });\r\n}\r\n\r\nexport function closeRegistrateForm() {\r\n    return({ type: actionTypes.SET_REGISTRATEFORM, isOpen: false  });\r\n}","export const SET_USER = 'SET_USER';\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_LOGINFORM = \"SET_LOGINFORM\";\r\nexport const SET_REGISTRATEFORM = \"SET_REGISTRATEFORM\";\r\nexport const SET_CONTENT_GAME = \"SET_CONTENT_GAME\";\r\nexport const SET_CONTENT_MOVIE = \"SET_CONTENT_MOVIE\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTRATE_ERROR = \"REGISTRATE_ERROR\";\r\nexport const GAME_REQUEST_ERROR = \"GAME_REQUEST_ERROR\";\r\nexport const MOVIE_REQUEST_ERROR = \"MOVIE_REQUEST_ERROR\";\r\nexport const USER_PAGE_ERROR = \"USER_PAGE_ERROR\";\r\nexport const SET_CONTENT_GAME_USERINFO = \"SET_CONTENT_GAME_USERINFO\";\r\nexport const SET_CONTENT_GAME_USERINFO_STATUS = \"SET_CONTENT_GAME_USERINFO_STATUS\";\r\nexport const SET_CONTENT_GAME_USERINFO_SCORE = \"SET_CONTENT_GAME_USERINFO_SCORE\";\r\nexport const SET_CONTENT_GAME_USERINFO_REVIEW = \"SET_CONTENT_GAME_USERINFO_REVIEW\";\r\nexport const SET_CONTENT_MOVIE_USERINFO = \"SET_CONTENT_MOVIE_USERINFO\";\r\nexport const SET_SEARCH_CONTENT_GAMES = \"SET_SEARCH_CONTENT_GAMES\";\r\nexport const SET_SEARCH_CONTENT_MOVIES = \"SET_SEARCH_CONTENT_MOVIES\";\r\nexport const SET_SEARCH_CONTENT_USERS = \"SET_SEARCH_CONTENT_USERS\";\r\nexport const SET_IS_LOADING_CONTENT_GAME = \"SET_IS_LOADING_CONTENT_GAME\";\r\nexport const SET_IS_LOADING_CONTENT_MOVIE = \"SET_IS_LOADING_CONTENT_MOVIE\";\r\nexport const SET_IS_LOADING_SEARCH_GAMES = \"SET_IS_LOADING_SEARCH_GAMES\";\r\nexport const SET_IS_LOADING_SEARCH_MOVIES = \"SET_IS_LOADING_SEARCH_MOVIES\";\r\nexport const SET_IS_LOADING_SEARCH_USERS = \"SET_IS_LOADING_SEARCH_USERS\";\r\nexport const SET_IS_LOADING_USER_PAGE_CONTENT = \"SET_IS_LOADING_USER_PAGE_CONTENT\";\r\nexport const SET_USER_PAGE_CONTENT = \"SET_USER_PAGE_CONTENT\";\r\nexport const SET_USER_PAGE_FOLLOWING = \"SET_USER_PAGE_FOLLOWING\";\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './style.css';\r\n\r\nfunction StatusButtonGroup( {statuses, activeColor, onChangeStatus, userStatus} ) {\r\n    const [activeStatus, setActiveStatus] = useState('');\r\n\r\n    useEffect(() =>{\r\n            setActiveStatus(userStatus?userStatus:statuses[0]);\r\n        },\r\n        [statuses, userStatus]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            {statuses.map((status) => <button className={'contentStatuses'} \r\n                                            key={status}\r\n                                            style={{backgroundColor: (activeStatus === status?activeColor:'#000000')}}\r\n                                            onClick={()=>{ \r\n                                                if (onChangeStatus(status)){\r\n                                                    setActiveStatus(status);\r\n                                                }\r\n                                            }}>\r\n                                            {status}\r\n                                        </button>) }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StatusButtonGroup;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput\r\n} from \"mdbreact\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport Rating from \"react-rating\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\nimport StatusButtonGroup from \"./Common/StatusButtonGroup\";\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction GamePage ( {requestGame, game, requestError, loggedIn, openLoginForm, setGameStatus, gameIsLoading\r\n    } ) {\r\n    let { id } = useParams();\r\n    const [genres, setGenres] = useState(\"\");\r\n    const [metascoreBlock, setMetascoreBlock] = useState(\"\");\r\n    const [review, setReview] = useState(\"\");\r\n    const [spentTime, setSpentTime] = useState(0);\r\n    const [developers, setDevelopers] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [hltbInfo, setHtlbInfo] = useState({gameplay_main_extra: -1, gameplay_main: -1, gameplay_comletionist: -1});\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            requestGame(id);\r\n        },\r\n        // eslint-disable-next-line\r\n\t\t[id, requestGame, loggedIn]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            if (game.rawg.genres){\r\n                let newGenres = \"\"\r\n                for (let i = 0; i < game.rawg.genres.length; i++){\r\n                    newGenres += game.rawg.genres[i].name;\r\n                    if (i !== game.rawg.genres.length - 1)\r\n                        newGenres += \", \";\r\n                }\r\n                 setGenres(newGenres);   \r\n            }\r\n\r\n            if (game.rawg.metacritic){\r\n                setMetascoreBlock(\r\n                    <div>\r\n                        <div className=\"metacritic\">\r\n                            <p>{game.rawg.metacritic}</p>\r\n                        </div>\r\n                        <p className=\"metacriticText\">Metascore</p>\r\n                    </div>\r\n                );\r\n            }else{\r\n                setMetascoreBlock(\"\");\r\n            }\r\n\r\n            if (game.hltb){\r\n                setHtlbInfo(game.hltb);\r\n            }else if (game.rawg.playtime){\r\n                setHtlbInfo({gameplay_main_extra: game.rawg.playtime, gameplay_main: -1, gameplay_completionist: -1});\r\n            }else{\r\n                setHtlbInfo({gameplay_main_extra: -1, gameplay_main: -1, gameplay_completionist: -1});\r\n            }\r\n\r\n            if (game.user_info){\r\n                setReview(game.user_info.review);\r\n                setSpentTime(game.user_info.spent_time);\r\n            }\r\n\r\n            if (game.rawg.developers){\r\n                let newDevelopers = \"\"\r\n                for (let i = 0; i < game.rawg.developers.length; i++){\r\n                    newDevelopers += game.rawg.developers[i].name;\r\n                    if (i !== game.rawg.developers.length - 1)\r\n                    newDevelopers += \", \";\r\n                }\r\n                setDevelopers(newDevelopers);   \r\n            }\r\n\r\n            if (game.rawg.released){\r\n                let mas = game.rawg.released.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            document.title = game.rawg.name;\r\n\t\t},\r\n\t\t[game]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg\" style={{backgroundImage: `url(${game.rawg.background_image_additional?game.rawg.background_image_additional:game.rawg.background_image})`}}/>\r\n                <LoadingOverlay\r\n                    active={gameIsLoading}\r\n                    spinner\r\n                    text='Загрузка...'\r\n                    >\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"gameContentPage\"> \r\n                            <MDBContainer>\r\n                                <MDBRow className=\"gameContentHeader rounded-top\" >\r\n                                    <MDBCol size=\"5\">\r\n                                        <img src={game.rawg.background_image} className=\"img-fluid\" alt=\"\"/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"6\">\r\n                                        <h1>{game.rawg.name}</h1>\r\n                                        <p style={{marginBottom: \"2px\"}}>Разработчики: {developers}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Дата релиза: {date}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Жанр: {genres}</p>\r\n                                        <p style={{marginBottom: \"4px\", display: \"inline\"}} >Время прохождения: </p>\r\n                                            <div hidden={hltbInfo.gameplay_main < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"light-green-text\" title={\"Главный сюжет\"}/><span className=\"hs\"/>{hltbInfo.gameplay_main} {hltbInfo.gameplay_main_unit}<span className=\"hs\"/>\r\n                                            </div> <p style={{display: \"inline\"}} > </p>\r\n                                            <div hidden={hltbInfo.gameplay_main_extra < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"yellow-text\" title={\"Главный сюжет + побочные задания\"}/><span className=\"hs\"/>{hltbInfo.gameplay_main_extra} {hltbInfo.gameplay_main_extra_unit}<span className=\"hs\"/> \r\n                                            </div> <p style={{display: \"inline\"}} > </p>\r\n                                            <div hidden={hltbInfo.gameplay_completionist < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"red-text\" title={\"Полное прохождение\"}/><span className=\"hs\"/>{hltbInfo.gameplay_completionist} {hltbInfo.gameplay_completionist_unit}\r\n                                            </div>\r\n                                        <br/>\r\n                                        <Rating stop={10}\r\n                                            emptySymbol={<MDBIcon far icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}}/>}\r\n                                            fullSymbol={[1,2,3,4,5,6,7,8,9,10].map(n => <MDBIcon icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}} title={n}/>)}\r\n                                            initialRating={game.user_info?game.user_info.score:0}\r\n                                            readonly={!loggedIn | (!game.user_info)}\r\n                                            onChange={(score) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                    setGameStatus({score: score });\r\n                                                }}\r\n                                            }\r\n                                            style={{marginTop: \"20px\", marginBottom: \"10px\"}}\r\n                                        /> <br/>\r\n                                        <StatusButtonGroup\r\n                                            statuses={['Не играл', 'Буду играть', 'Играю', 'Дропнул', 'Прошел']}\r\n                                            activeColor='#4527a0' \r\n                                            userStatus={game.user_info?game.user_info.status:'Не играл'}\r\n                                            onChangeStatus={(status) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                   setGameStatus({ status: status });\r\n                                                }\r\n                                            }}\r\n                                            />\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"1\">\r\n                                        { metascoreBlock }\r\n                                    </MDBCol>\r\n                                </MDBRow> \r\n                                <MDBRow className=\"gameContentBody\"> \r\n                                    <MDBCol >\r\n                                        <h3 style={{paddingTop: \"15px\"}}>Описание</h3>\r\n                                        <div dangerouslySetInnerHTML={{__html: game.rawg.description}} />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow>\r\n                                <MDBCol size=\"6\" style={{paddingLeft: \"20px\"}}>\r\n                                    <h3 style={{paddingTop: \"10px\"}}>Отзывы</h3>\r\n                                        \r\n                                        <MDBInput \r\n                                            type=\"textarea\" \r\n                                            id=\"reviewInput\"\r\n                                            label=\"Ваш отзыв\" \r\n                                            value={review}\r\n                                            onChange={(event) =>setReview(event.target.value)}\r\n                                            outline\r\n                                        />\r\n                                        <MDBInput\r\n                                            type=\"number\"\r\n                                            id=\"spentTimeInput\"\r\n                                            label=\"Время прохождения (часы)\" \r\n                                            value={spentTime}\r\n                                            onChange={(event) =>setSpentTime(event.target.value)}\r\n                                        />\r\n                                        <button \r\n                                            className={'savePreviewButton'} \r\n                                            disabled={!loggedIn | (!game.user_info)}\r\n                                            onClick={() => {\r\n                                                    if (!loggedIn){\r\n                                                        openLoginForm();\r\n                                                    }else{\r\n                                                        setGameStatus({   review: document.getElementById('reviewInput').value, spent_time: document.getElementById('spentTimeInput').value });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            >\r\n                                            Сохранить\r\n                                        </button>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBContainer>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n                 </LoadingOverlay>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    requestError: selectors.getGameRequestError(state),\r\n    game: selectors.getContentGame(state),\r\n    gameIsLoading: selectors.getIsLoadingContentGame(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\trequestGame: (id) => {\r\n            dispatch(actions.requestGame(id));\r\n        },\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        /*patchGameStatus: (user_info) => {\r\n            dispatch(actions.patchGameStatus(user_info));\r\n        },*/\r\n        setGameStatus: (status) => {\r\n            dispatch(actions.setGameStatus(status));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput\r\n} from \"mdbreact\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport Rating from \"react-rating\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\nimport StatusButtonGroup from \"./Common/StatusButtonGroup\";\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction MoviePage ( {requestMovie, movie, loggedIn, movieIsLoading, setMovieStatus, openLoginForm\r\n    } ) {\r\n    let { id } = useParams();\r\n    const [metascoreBlock, setMetascoreBlock] = useState(\"\");\r\n    const [genres, setGenres] = useState(\"\");\r\n    const [companies, setCompanies] = useState(\"\");\r\n    const [cast, setCast] = useState(\"\");\r\n    const [director, setDirector] = useState(\"\");\r\n    const [review, setReview] = useState(\"\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            requestMovie(id);\r\n        },\r\n        // eslint-disable-next-line\r\n\t\t[id, requestMovie, loggedIn]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            if (movie.tmdb.vote_average){\r\n                setMetascoreBlock(\r\n                    <div>\r\n                        <div className=\"metacritic\">\r\n                            <p>{movie.tmdb.vote_average * 10}</p>\r\n                        </div>\r\n                        <p className=\"metacriticText\">TMDB score</p>\r\n                    </div>\r\n                );\r\n            }else{\r\n                setMetascoreBlock(\"\");\r\n            }\r\n\r\n            if (movie.tmdb.genres){\r\n                let newGenres = \"\"\r\n                for (let i = 0; i < movie.tmdb.genres.length; i++){\r\n                    newGenres += movie.tmdb.genres[i].name;\r\n                    if (i !== movie.tmdb.genres.length - 1)\r\n                        newGenres += \", \";\r\n                }\r\n                setGenres(newGenres);   \r\n            }\r\n\r\n            if (movie.tmdb.production_companies){\r\n                let newCompanies = \"\"\r\n                for (let i = 0; i < movie.tmdb.production_companies.length; i++){\r\n                    newCompanies += movie.tmdb.production_companies[i].name;\r\n                    if (i !== movie.tmdb.production_companies.length - 1)\r\n                        newCompanies += \", \";\r\n                }\r\n                setCompanies(newCompanies);   \r\n            }\r\n\r\n            if (movie.tmdb.cast){\r\n                let newCast = \"\";\r\n                let length = movie.tmdb.cast.length>5?5:movie.tmdb.cast.length;\r\n                for (let i = 0; i < length; i++){\r\n                    newCast += movie.tmdb.cast[i].name;\r\n                    if (i !== length - 1)\r\n                        newCast += \", \";\r\n                }\r\n                setCast(newCast);   \r\n            }\r\n\r\n            if (movie.tmdb.crew){\r\n                let newDirector = \"\"\r\n                for (let i = 0; i < movie.tmdb.crew.length; i++){\r\n                    if (movie.tmdb.crew[i].job === \"Director\"){\r\n                        newDirector = movie.tmdb.crew[i].name;\r\n                        break;\r\n                    }\r\n                }\r\n                setDirector(newDirector);   \r\n            }\r\n\r\n            if (movie.user_info){\r\n                setReview(movie.user_info.review);\r\n            }\r\n\r\n            document.title = movie.tmdb.title;\r\n\t\t},\r\n\t\t[movie]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg\" style={{backgroundImage: `url(${ 'http://image.tmdb.org/t/p/w1920_and_h800_multi_faces' + movie.tmdb.backdrop_path})`}}/>\r\n                <LoadingOverlay\r\n                    active={movieIsLoading}\r\n                    spinner\r\n                    text='Загрузка...'\r\n                    >\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"movieContentPage\"> \r\n                            <MDBContainer>\r\n                                <MDBRow className=\"movieContentHeader rounded-top\" >\r\n                                    <MDBCol size=\"5\">\r\n                                        <img src={\"http://image.tmdb.org/t/p/w600_and_h900_bestv2\" + movie.tmdb.poster_path} className=\"img-fluid\" alt=\"\"/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"6\">\r\n                                        <h1>{movie.tmdb.title}</h1>\r\n                                        <p style={{marginBottom: \"2px\"}}>Дата релиза: {movie.tmdb.release_date}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Продолжительность (мин): {movie.tmdb.runtime}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Жанр: {genres}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Компания: {companies}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Слоган: {movie.tmdb.tagline}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>В ролях: {cast}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Режиссер: {director}</p>\r\n                                        <br/>\r\n                                        <Rating stop={10}\r\n                                            emptySymbol={<MDBIcon far icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}}/>}\r\n                                            fullSymbol={[1,2,3,4,5,6,7,8,9,10].map(n => <MDBIcon icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}} title={n}/>)}\r\n                                            initialRating={movie.user_info?movie.user_info.score:0}\r\n                                            readonly={!loggedIn | (!movie.user_info)}\r\n                                            onChange={(score) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                    setMovieStatus({score: score });\r\n                                                }}\r\n                                            }\r\n                                        /> <br/>\r\n                                        <StatusButtonGroup loggedIn={loggedIn} \r\n                                            statuses={['Не смотрел', 'Буду смотреть', 'Дропнул', 'Посмотрел']}\r\n                                            activeColor='#4527a0' \r\n                                            userStatus={movie.user_info?movie.user_info.status:'Не смотрел'}\r\n                                            onChangeStatus={(status) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                   setMovieStatus({ status: status });\r\n                                                }\r\n                                            }}/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"1\">\r\n                                        { metascoreBlock }\r\n                                    </MDBCol>\r\n                                </MDBRow> \r\n                                <MDBRow className=\"movieContentBody\"> \r\n                                    <MDBCol >\r\n                                        <h3 style={{paddingTop: \"15px\"}}>Описание</h3>\r\n                                        <div dangerouslySetInnerHTML={{__html: movie.tmdb.overview}} />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBCol size=\"6\" style={{paddingLeft: \"20px\"}}>\r\n                                    <h3 style={{paddingTop: \"10px\"}}>Отзывы</h3>\r\n                                        \r\n                                        <MDBInput \r\n                                            type=\"textarea\" \r\n                                            id=\"reviewInput\"\r\n                                            label=\"Ваш отзыв\" \r\n                                            value={review}\r\n                                            onChange={(event) =>setReview(event.target.value)}\r\n                                            outline\r\n                                        />\r\n                                        <button \r\n                                            className={'savePreviewButton'} \r\n                                            disabled={!loggedIn | (!movie.user_info)}\r\n                                            onClick={() => {\r\n                                                    if (!loggedIn){\r\n                                                        openLoginForm();\r\n                                                    }else{\r\n                                                        setMovieStatus({   review: document.getElementById('reviewInput').value });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            >\r\n                                            Сохранить\r\n                                        </button>\r\n                                    </MDBCol>\r\n                            </MDBContainer>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n                 </LoadingOverlay>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    requestError: selectors.getGameRequestError(state),\r\n    movie: selectors.getContentMovie(state),\r\n    movieIsLoading: selectors.getIsLoadingContentMovie(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\trequestMovie: (id) => {\r\n            dispatch(actions.requestMovie(id));\r\n        },\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        setMovieStatus: (status) => {\r\n            dispatch(actions.setMovieStatus(status));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\n\r\nfunction CardGame( {game} ) {\r\n    let history = useHistory();\r\n    const [date, setDate] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n            if (game.released){\r\n                let mas = game.released.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            if (game.name.length > 55){\r\n                let newName = game.name.substr(0, 55) + \"...\";\r\n                setName(newName);\r\n            }else\r\n                setName(game.name);\r\n        },\r\n        [game]\r\n    );\r\n\r\n    /*const mouseDownHandler = ( event ) => {\r\n        if( event.button === 1 ) {\r\n            console.log(window.location.origin + '/game/' + game.slug );\r\n\r\n        }\r\n      }*/\r\n\r\n    return(\r\n        <div className=\"searchCardGame\" >\r\n            <div className=\"searchCardGameImage\" style={{backgroundImage: `url(${game.background_image})`}}> </div>\r\n            <div className=\"searchCardGameText\">\r\n                <a href={window.location.origin + '/game/' + game.slug} \r\n                    onClick={(e) => { history.push('/game/' + game.slug); e.preventDefault();}}>\r\n                        <h4 >{name}</h4>\r\n                </a>\r\n                <p>{date}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n//onMouseDown={mouseDownHandler} \r\n\r\nexport default CardGame;\r\n","import React, { useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nfunction CardMovie ( {movie} ) {\r\n    let history = useHistory();\r\n\r\n    const [date, setDate] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n            if (movie.release_date){\r\n                let mas = movie.release_date.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            if (movie.title.length > 55){\r\n                let newName = movie.title.substr(0, 55) + \"...\";\r\n                setName(newName);\r\n            }else\r\n                setName(movie.title);\r\n        },\r\n        [movie]\r\n    );\r\n\r\n    return(\r\n        <div className=\"searchCardMovie\" >\r\n            <div className=\"searchCardMovieImage\" style={{backgroundImage: `url(${\"http://image.tmdb.org/t/p/w600_and_h900_bestv2\" + movie.poster_path})`}}> </div>\r\n            <div className=\"searchCardMovieText\">\r\n                <a href={window.location.origin + '/movie/' + movie.id} \r\n                    onClick={(e) => { history.push('/movie/' + movie.id); e.preventDefault();}}>\r\n                        <h4 >{name}</h4>\r\n                </a>\r\n                <p>{date}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CardMovie;\r\n","import React, { useEffect} from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nfunction CardUser ( {user} ) {\r\n    let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n            \r\n        },\r\n        [user]\r\n    );\r\n\r\n    return(\r\n        <div className=\"cardUser\" >\r\n            <div className=\"cardUserImage\" style={{backgroundImage: `url(${'http://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png'})`}}> </div>\r\n            <div className=\"cardUserText\">\r\n                <a href={window.location.origin + '/user/' + user.id} \r\n                    onClick={(e) => { history.push('/user/' + user.id); e.preventDefault();}}>\r\n                        <h4 >{user.username}</h4>\r\n                </a>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CardUser;\r\n","import React, {useState} from \"react\";\r\nimport './style.css';\r\n\r\nfunction CategoriesTab( {categories, activeColor, onChangeCategory} ) {\r\n    const [activeCategory, setActiveCategory] = useState(categories[0]);\r\n\r\n    return(\r\n        <div>\r\n            {categories.map((category) => <button className={'categoriesTab'} \r\n                                            key={category}\r\n                                            style={{color: (activeCategory === category?activeColor:'#000000')}}\r\n                                            onClick={()=>{ \r\n                                                setActiveCategory(category);\r\n                                                onChangeCategory(category);\r\n                                            }}>\r\n                                            {category}\r\n                                        </button>) }\r\n            <br/>\r\n`           <hr style={{ color: activeColor, backgroundColor: '#6C0AAB', height: 2.5,  borderColor : '#6C0AAB', marginTop: \"-16px\", marginBottom: \"-10px\" }}/>`\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default CategoriesTab;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBFormInline\r\n} from \"mdbreact\";\r\nimport './style.css';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport CardGame from './CardGame';\r\nimport CardMovie from './CardMovie';\r\nimport CardUser from '../Common/CardUser';\r\nimport CategoriesTab from '../Common/CategoriesTab';\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../../store/reducers';\r\nimport * as actions from '../../store/actions';\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction SearchPage ( { loggedIn, openLoginForm, gamesIsLoading, moviesIsLoading, usersIsLoading, searchGame, games, searchMovie, movies, searchUsers, users } ) {\r\n    let history = useHistory();\r\n    let { query } = useParams();\r\n    const [queryText, setQueryText] = useState(\"\");\r\n    const [gamesCards, setGamesCards] = useState(\"\");\r\n    const [moviesCards, setMoviesCards] = useState(\"\");\r\n    const [usersCards, setUsersCards] = useState(\"\");\r\n\r\n    const [activeCategory, setActiveCategory] = useState(\"Всё\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            searchGame(query, 1);\r\n            searchMovie(query, 1);\r\n            searchUsers(query);\r\n            setQueryText(query);\r\n            document.title = 'Поиск';\r\n\t\t},\r\n\t\t[query, searchGame, searchMovie, searchUsers]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setGamesCards(<div className=\"searchCardsGroup\">{games.map(game => <CardGame game={game} key={game.id}/>)}</div>);\r\n\t\t},\r\n\t\t[games]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setMoviesCards(<div className=\"searchCardsGroup\">{movies.map(movie => <CardMovie movie={movie} key={movie.id}/>)}</div>);\r\n\t\t},\r\n\t\t[movies]\r\n    );\r\n\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setUsersCards(<div className=\"searchCardsGroup\">{users.map(user => <CardUser user={user} key={user.username}/>)}</div>);\r\n\t\t},\r\n\t\t[users]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg searchBG\"/> \r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"searchPage\"> \r\n                            <h1>Поиск</h1>\r\n                            <MDBFormInline className=\"md-form\"\r\n                                onSubmit={ (event) => {event.preventDefault(); history.push('/search/' + document.getElementById('searchInput2').value); return false; }}>\r\n                                <MDBIcon icon=\"search\" />\r\n                                <input \r\n                                    className=\"form-control form-control-sm ml-3 w-50\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Найти\" \r\n                                    aria-label=\"Search\" \r\n                                    id=\"searchInput2\" \r\n                                    value={queryText} \r\n                                    onChange={(event) =>setQueryText(event.target.value)}/>\r\n                            </MDBFormInline>\r\n\r\n                            <h1>Результаты поиска</h1>\r\n                                <CategoriesTab\r\n                                    categories={['Всё', 'Игры', 'Фильмы', 'Пользователи']}\r\n                                    activeColor='#4527a0' \r\n                                    onChangeCategory={(category) => {\r\n                                        setActiveCategory(category);\r\n                                    }}/>\r\n\r\n                                <LoadingOverlay\r\n                                    active={gamesIsLoading}\r\n                                    spinner\r\n                                    text='Ищем игры...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Игры'}>\r\n                                        <h3>Игры</h3>\r\n                                        {gamesCards}\r\n                                    </div>\r\n                                </LoadingOverlay>\r\n\r\n                                <LoadingOverlay\r\n                                    active={moviesIsLoading}\r\n                                    spinner\r\n                                    text='Ищем фильмы...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Фильмы'}>\r\n                                        <h3>Фильмы</h3>\r\n                                        {moviesCards}\r\n                                    </div>       \r\n                                </LoadingOverlay>\r\n                                \r\n                                <LoadingOverlay\r\n                                    active={usersIsLoading}\r\n                                    spinner\r\n                                    text='Ищем пользователей...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Пользователи'}>\r\n                                        <h3>Пользователи</h3>\r\n                                        {usersCards}\r\n                                    </div>    \r\n                                </LoadingOverlay>\r\n                                \r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    gamesIsLoading: selectors.getIsLoadingSearchGames(state),\r\n    moviesIsLoading: selectors.getIsLoadingSearchMovies(state),\r\n    usersIsLoading: selectors.getIsLoadingSearchUsers(state),\r\n    games: selectors.getSearchContentGames(state),\r\n    movies: selectors.getSearchContentMovies(state),\r\n    users: selectors.getSearchContentUsers(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        searchGame: (query, page) => {\r\n            dispatch(actions.searchGames(query, page));\r\n        },\r\n        searchMovie: (query, page) => {\r\n            dispatch(actions.searchMovies(query, page));\r\n        },\r\n        searchUsers: (query) => {\r\n            dispatch(actions.searchUsers(query));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","import React from \"react\";\r\nimport {\r\n\tMDBModal, \r\n\tMDBModalBody,\r\n\tMDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn\r\n} from \"mdbreact\";\r\nimport { connect } from 'react-redux'; \r\nimport * as actions from '../store/actions';\r\nimport * as selectors from '../store/reducers';\r\n\r\n/**\r\n * КОмпонент формы авторизации\r\n * @param {number} Параметр, при изменении которого компонент открывается \r\n */\r\nfunction LoginForm( {isOpen, closeForm, logIn, authError} ) {\r\n\treturn (\r\n        <MDBModal isOpen={isOpen} toggle={closeForm} size=\"sm\" centered>\r\n\t    <MDBModalBody>\r\n\t      <MDBContainer>\r\n\t        <MDBRow>\r\n\t          <MDBCol>\r\n\t            <form onSubmit={(event) => {event.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\tlogIn(document.getElementById(\"loginInput\").value,\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"passwordInput\").value)}}>\r\n\t              <p className=\"h4 text-center mb-4\">Войти</p>\r\n\t\t\t\t  <p className=\"note note-danger\" hidden={!authError} >Неверный логин или пароль!</p>\r\n\t              <label htmlFor=\"loginInput\" className=\"grey-text\">\r\n\t                Логин\r\n\t              </label>\r\n\t              <input type=\"text\" id=\"loginInput\" className=\"form-control\" />\r\n\t              <br />\r\n\t              <label htmlFor=\"passwordInput\" className=\"grey-text\">\r\n\t                Пароль\r\n\t              </label>\r\n\t              <input type=\"password\" id=\"passwordInput\" className=\"form-control\" />\r\n\t              <div className=\"text-center mt-4\">\r\n\t\t\t\t\t<MDBBtn style={{color: \"white\", backgroundColor: \"#6C0AAB\"}} type=\"submit\">\r\n\t\t\t\t\t\tВойти\r\n\t\t\t\t\t</MDBBtn>\r\n\t              </div>\r\n\t            </form>\r\n\t          </MDBCol>\r\n\t        </MDBRow>\r\n\t      </MDBContainer>\r\n\t    </MDBModalBody>\r\n      </MDBModal>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisOpen: selectors.getLoginForm(state),\r\n\tauthError: selectors.getAuthError(state)\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcloseForm: () => {\r\n\t\t\tdispatch(actions.closeLoginForm());\r\n\t\t},\r\n\t\tlogIn: (login, password) => {\r\n\t\t\tdispatch(actions.tryAuth(login, password));\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from \"react\";\r\nimport {\r\n\tMDBModal, \r\n\tMDBModalBody,\r\n\tMDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn\r\n} from \"mdbreact\";\r\nimport { connect } from 'react-redux'; \r\nimport * as actions from '../store/actions';\r\nimport * as selectors from '../store/reducers';\r\n\r\n/**\r\n * КОмпонент формы авторизации\r\n * @param {number} Параметр, при изменении которого компонент открывается \r\n */\r\nfunction RegistrationForm( {isOpen, closeForm, registrate, registrateArror, user} ) {\r\n\treturn (\r\n        <MDBModal isOpen={isOpen} toggle={closeForm} size=\"sm\" centered>\r\n\t    <MDBModalBody>\r\n\t      <MDBContainer>\r\n\t        <MDBRow>\r\n\t          <MDBCol>\r\n\t            <form>\r\n\t              <p className=\"h4 text-center mb-4\">Регистрация</p>\r\n\t\t\t\t  <p className=\"note note-danger\" hidden={!registrateArror} >Ошибка регистрации!</p>\r\n                  <p className=\"note note-success\" hidden={user.email===\"\"} >{user.login}, добро пожаловать! Осталось только подтвердить вашу почту: {user.email}</p>\r\n\t              <label htmlFor=\"loginInput\" className=\"grey-text\">\r\n\t                Никнейм\r\n\t              </label>\r\n\t              <input type=\"text\" id=\"loginInput\" className=\"form-control\" />\r\n\t              <br />\r\n                  <label htmlFor=\"emailInput\" className=\"grey-text\">\r\n\t                Электронная почта\r\n\t              </label>\r\n\t              <input type=\"email\" id=\"emailInput\" className=\"form-control\" />\r\n\t              <br />\r\n\t              <label htmlFor=\"passwordInput\" className=\"grey-text\">\r\n\t                Пароль\r\n\t              </label>\r\n\t              <input type=\"password\" id=\"passwordInput\" className=\"form-control\" />\r\n\t              <div className=\"text-center mt-4\">\r\n                    <MDBBtn style={{color: \"white\", backgroundColor: \"#6C0AAB\"}} type=\"button\" onClick={() => registrate(document.getElementById(\"loginInput\").value,\r\n                                                                                                                        document.getElementById(\"emailInput\").value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    document.getElementById(\"passwordInput\").value)}>\r\n\t\t\t\t\t\tЗарегистрироваться\r\n\t\t\t\t\t</MDBBtn>\r\n\t              </div>\r\n\t            </form>\r\n\t          </MDBCol>\r\n\t        </MDBRow>\r\n\t      </MDBContainer>\r\n\t    </MDBModalBody>\r\n      </MDBModal>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisOpen: selectors.getRegistrateForm(state),\r\n    registrateArror: selectors.getRegistrateError(state),\r\n    user: selectors.getUser(state)\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcloseForm: () => {\r\n\t\t\tdispatch(actions.closeRegistrateForm());\r\n\t\t},\r\n\t\tregistrate: (login, email, password) => {\r\n\t\t\tdispatch(actions.registrationRequest(login, email, password));\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, {\r\n    useEffect\r\n} from \"react\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction ConfirmPage ( {confirmEmailRequest} ) \r\n{\r\n\tlet search = window.location.search;\r\n\tlet params = new URLSearchParams(search);\r\n\tlet uid64 = params.get('uid64');\r\n\tlet token = params.get('token');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconfirmEmailRequest(uid64, token);\r\n\t\t},\r\n\t\t[confirmEmailRequest, token, uid64]\r\n\t);\r\n\t\r\n    return (\r\n\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        confirmEmailRequest: (uid64, token) => {\r\n            dispatch(actions.confirmEmailRequest(uid64, token));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmPage);","import React, { useEffect, useState} from \"react\";\r\n\r\nimport {\r\n    MDBDataTable\r\n} from \"mdbreact\";\r\n\r\nfunction GameBlock ( {games, stats} ) {\r\n\r\n    const gameColumns = [\r\n        {\r\n          label: 'Название',\r\n          field: 'name',\r\n          sort: 'disabled'\r\n        },\r\n        {\r\n          label: 'Статус',\r\n          field: 'status',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Оценка',\r\n          field: 'score',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Отзыв',\r\n          field: 'review',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Время прохождения',\r\n          field: 'spent_time',\r\n          sort: 'asc'\r\n        }\r\n      ];\r\n\r\n    const [gameTableData, setGameTableData] = useState({\r\n        columns: gameColumns,\r\n        rows: [\r\n        ]\r\n    });\r\n\r\n    useEffect(() =>{\r\n            if (games)\r\n            {\r\n                setGameTableData({\r\n                    columns: gameColumns,\r\n                    rows: games.map((game) => {\r\n                        return {\r\n                                name: <a href={window.location.origin + '/game/' + game.game.rawg_slug}>{game.game.rawg_name}</a>,\r\n                                name2: game.game.rawg_name,\r\n                                status: game.status,\r\n                                score: game.score,\r\n                                review: game.review,\r\n                                spent_time: game.spent_time,\r\n                                /*clickEvent: (e) => {\r\n                                    //window.open('/game/' + game.game.rawg_slug);\r\n                                    history.push('/game/' + game.game.rawg_slug);\r\n                                }*/\r\n                            }      \r\n                    })\r\n                });\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [games]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <p>Игр сыграно: {stats.games_count}, часов наиграно: {stats.games_total_spent_time}</p>  \r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={gameTableData}\r\n                info={false}\r\n                barReverse={true}\r\n                noBottomColumns={true}\r\n                noRecordsFoundLabel=\"Ничего не найдено!\"\r\n                paginationLabel={[\"Предыдущая\", \"Следующая\"]}\r\n                entriesLabel=\"Показывать игр на странице\"\r\n                searchLabel='Поиск'\r\n                />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default GameBlock;\r\n","import React from \"react\";\r\n\r\nimport CardUser from '../Common/CardUser';\r\n\r\nfunction FriendBlock ( {users} ) {\r\n\r\n    return(\r\n        <div>\r\n            <h2 style={{marginBottom: \"25px\"}}>Мои подписки: </h2>\r\n            {users.map((user) => <CardUser user={user}/>) }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FriendBlock;\r\n","import React, { useEffect, useState} from \"react\";\r\n\r\nimport {\r\n    MDBDataTable\r\n} from \"mdbreact\";\r\n\r\nfunction MovieBlock ( {movies, stats} ) {\r\n\r\n    const movieColumns = [\r\n      {\r\n        label: 'Название',\r\n        field: 'name',\r\n        sort: 'disabled'\r\n      },\r\n      {\r\n        label: 'Статус',\r\n        field: 'status',\r\n        sort: 'asc'\r\n      },\r\n      {\r\n        label: 'Оценка',\r\n        field: 'score',\r\n        sort: 'asc'\r\n      },\r\n      {\r\n        label: 'Отзыв',\r\n        field: 'review',\r\n        sort: 'asc'\r\n      }\r\n    ];\r\n\r\n  const [movieTableData, setMovieTableData] = useState({\r\n      columns: movieColumns,\r\n      rows: [\r\n      ]\r\n  });\r\n\r\n    useEffect(() =>{\r\n            if (movies)\r\n            {\r\n              setMovieTableData({\r\n                columns: movieColumns,\r\n                rows: movies.map((movie) => {\r\n                    return {\r\n                            name: <a href={window.location.origin + '/movie/' + movie.movie.tmdb_id}>{movie.movie.tmdb_name}</a>,\r\n                            name2: movie.movie.tmdb_name,\r\n                            status: movie.status,\r\n                            score: movie.score,\r\n                            review: movie.review,\r\n                            /*clickEvent: (e) => {\r\n                                //window.open('/game/' + game.game.rawg_slug);\r\n                                history.push('/movie/' + movie.movie.tmdb_id)\r\n                            }*/\r\n                        }      \r\n                  })\r\n              });\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [movies]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <p>Фильмов посмотрено: {stats.movies_count}, часов просмотра: {stats.movies_total_spent_time}</p>  \r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={movieTableData}\r\n                info={false}\r\n                barReverse={true}\r\n                noBottomColumns={true}\r\n                noRecordsFoundLabel=\"Ничего не найдено!\"\r\n                paginationLabel={[\"Предыдущая\", \"Следующая\"]}\r\n                entriesLabel=\"Показывать фильмов на странице\"\r\n                searchLabel='Поиск'\r\n                />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default MovieBlock;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer\r\n} from \"mdbreact\";\r\nimport './style.css';\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../../store/reducers';\r\nimport * as actions from '../../store/actions';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport GameBlock from './GameBlock';\r\nimport FriendBlock from './FriendBlock';\r\nimport MovieBlock from './MovieBlock';\r\nimport CategoriesTab from '../Common/CategoriesTab';\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction UserPage ( { userIsLoading, getUserInfo, userInfo, currentUserInfo, setUserStatus }) \r\n{ \r\n    let { userID } = useParams();\r\n    const [activeCategory, setActiveCategory] = useState(\"\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            getUserInfo(userID);\r\n\t\t},\r\n\t\t[userID, getUserInfo]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setActiveCategory(<GameBlock games={userInfo.games} stats={userInfo.stats} />);\r\n            document.title = 'Профиль ' + userInfo.username;\r\n\t\t},\r\n\t\t[userInfo]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bg searchBG\"/> \r\n            <LoadingOverlay\r\n                active={userIsLoading}\r\n                spinner\r\n                text='Загрузка...'\r\n                >\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"0.5\"></MDBCol>\r\n                    <MDBCol className=\"searchPage\"> \r\n                        <h1>Информация о пользователе {userInfo.username}</h1>\r\n                        <button \r\n                            hidden={currentUserInfo.username === userInfo.username}\r\n                            className='addFriendButton'\r\n                            onClick={ () => {\r\n                                setUserStatus({is_following: userInfo.is_followed?false:true}, userInfo.id);\r\n                            }}>\r\n                            {userInfo.is_followed?'Отписаться':'Подписаться'}\r\n                        </button>\r\n                        <CategoriesTab\r\n                            categories={['Игры', 'Фильмы', 'Друзья']}\r\n                            activeColor='#4527a0' \r\n                            onChangeCategory={(category) => {\r\n                                if (category === 'Игры')\r\n                                    setActiveCategory(<GameBlock games={userInfo.games} stats={userInfo.stats} />);\r\n                                if (category === 'Фильмы')\r\n                                    setActiveCategory(<MovieBlock movies={userInfo.movies} stats={userInfo.stats} />);\r\n                                if (category === 'Друзья')\r\n                                    setActiveCategory(<FriendBlock users={userInfo.followed_users} />);\r\n                            }}/>\r\n                        {activeCategory}\r\n                    </MDBCol>\r\n                    <MDBCol md=\"0.5\"></MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n            </LoadingOverlay>\r\n        </div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    userIsLoading: selectors.getIsLoadingUserPageContent(state),\r\n    userInfo: selectors.getUserPageContent(state),\r\n    currentUserInfo: selectors.getUser(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        getUserInfo: (user_id) => {\r\n            dispatch(actions.requestUserPageContent(user_id));\r\n        },\r\n        setUserStatus: (is_following, userID) => {\r\n            dispatch(actions.setUserStatus(is_following, userID));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);","import React from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport {\r\n\tMDBNavbar,\r\n    MDBNavItem,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavLink,\r\n    MDBIcon,\r\n    MDBFormInline,\r\n    MDBDropdown,\r\n    MDBDropdownItem,\r\n    MDBDropdownMenu,\r\n    MDBDropdownToggle\r\n} from \"mdbreact\";\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\n\r\nfunction Navbar( {loggedIn, onLoginClick, onLogoutClick, onRegistrationClick, user} ) {\r\n    let history = useHistory();\r\n\r\n    return(\r\n            <MDBNavbar style={{ backgroundColor: \"#4527a0\" }} dark expand=\"md\" fixed=\"top\">\r\n            <MDBNavbarBrand>\r\n                <strong className=\"white-text\">Interests</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarNav left>\r\n                \r\n            </MDBNavbarNav>\r\n\r\n            <MDBNavbarNav right>\r\n                <MDBNavItem>\r\n                    <MDBFormInline onSubmit={ (event) => {event.preventDefault(); history.push('/search/' + document.getElementById('searchInput').value); return false; }}>\r\n                        <div className=\"md-form my-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Найти\" aria-label=\"Найти\"\r\n                            id=\"searchInput\"/>\r\n                        </div>\r\n                    </MDBFormInline>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem className=\"font-weight-bold\" hidden={loggedIn}>\r\n                    <MDBNavLink to=\"#\" onClick={onLoginClick} >\r\n                        <MDBIcon icon=\"sign-in-alt\" /> Войти\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem className=\"font-weight-bold\" hidden={loggedIn}>\r\n                    <MDBNavLink to=\"#\" onClick={onRegistrationClick} >\r\n                        <MDBIcon icon=\"user-plus\" /> Зарегистрироваться\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem hidden={!loggedIn} className=\"font-weight-bold\">\r\n                    <MDBDropdown>\r\n                        <MDBDropdownToggle nav caret>\r\n                        <span className=\"mr-2\">{user.username}</span>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu>\r\n                        <MDBDropdownItem href={\"/user/\"+user.id}>Профиль</MDBDropdownItem>\r\n                        <MDBDropdownItem onClick={ onLogoutClick }>\r\n                            <MDBIcon icon=\"sign-out-alt\"/> Выйти\r\n                        </MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </MDBNavbarNav>\r\n        </MDBNavbar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    user: selectors.getUser(state)\r\n});\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonLoginClick: () => {\r\n\t\t\tdispatch(actions.openLoginForm());\r\n        },\r\n        onLogoutClick: () =>{\r\n            dispatch(actions.resetAuthorization());\r\n        },\r\n        onRegistrationClick: () =>{\r\n            dispatch(actions.openRegistrateForm());\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport GamePage from \"./components/GamePage\";\r\nimport MoviePage from \"./components/MoviePage\";\r\nimport SearchPage from \"./components/SearchPage/SearchPage\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport RegistrationForm from \"./components/RegistrationForm\";\r\nimport ConfirmPage from \"./components/ConfirmPage\";\r\nimport UserPage from \"./components/UserPage/UserPage\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <div className=\"navbar\"></div>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/game/:id\" component={GamePage} />\r\n            <Route exact path=\"/movie/:id\" component={MoviePage} />\r\n            <Route exact path=\"/search/:query\" component={SearchPage} />\r\n            <Route exact path=\"/confirm/\" component={ConfirmPage} />\r\n            <Route exact path=\"/user/:userID\" component={UserPage} />\r\n            <Route render={function () { return <h1>Not Found</h1>; }} />\r\n        </Switch>\r\n      <ToastContainer position=\"top-center\" hideProgressBar newestOnTop closeOnClick/>\r\n      <LoginForm/>\r\n      <RegistrationForm/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React, {useEffect} from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'; \r\nimport Routes from \"./Routes\";\r\nimport * as actions from \"./store/actions\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App({onLoad}) {\r\n\r\n  useEffect(\r\n    () => {\r\n        onLoad();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"flyout\">\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n    onLoad: () => {\r\n      dispatch(actions.checkAuthorization());\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, \r\n  applyMiddleware, \r\n  //combineReducers,\r\n   compose } from 'redux';\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './store/reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk) ) );\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\nexport default store;\r\n\r\n"],"sourceRoot":""}