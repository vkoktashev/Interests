{"version":3,"sources":["components/HomePage.js","store/reducers.js","settings.js","services/jwtAuth.js","services/requests.js","store/actions.js","store/actionTypes.js","components/Common/StatusButtonGroup.js","components/GamePage.js","components/MoviePage.js","components/SearchPage/CardGame.js","components/SearchPage/CardMovie.js","components/Common/CardUser.js","components/Common/CategoriesTab.js","components/SearchPage/SearchPage.js","components/LoginForm.js","components/RegistrationForm.js","components/ConfirmPage.js","components/UserPage/GameBlock.js","components/UserPage/FriendBlock.js","components/UserPage/MovieBlock.js","components/UserPage/LogRow.js","components/UserPage/UserLogBlock.js","components/UserPage/UserPage.js","components/Navbar.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","initialState","Map","auth","loggedIn","user","username","email","id","content","game","rawg","name","background_image","background_image_additional","developers","hltb","game_image_url","user_info","status","review","score","spent_time","movie","tmdb","title","poster_path","searchContent","games","movies","users","userPageContent","stats","userLogs","log","userFriendsLogs","openedPages","LoginForm","RegistrateForm","errors","registrate","gameRequest","movieRequest","userPage","isLoading","contentGame","contentMovie","searchGames","searchMovies","searchUsers","userPageLogs","userPageFriendsLogs","getLoggedIn","state","get","getContentGame","getContentMovie","getSearchContentGames","getSearchContentMovies","getSearchContentUsers","getAuthError","getRegistrateError","getGameRequestError","getUser","getLoginForm","getRegistrateForm","getIsLoadingContentGame","getIsLoadingContentMovie","getIsLoadingSearchGames","getIsLoadingSearchMovies","getIsLoadingSearchUsers","getIsLoadingUserPageContent","getIsLoadingUserPageLogs","getIsLoadingUserPageFriendsLogs","getUserPageContent","getUserPageLogs","getUserPageFriendsLogs","BACKEND_URL","GET_TOKEN_URL","REFRESH_TOKEN_URL","REGISTRATE_URL","CONFIRM_URL","GET_GAME_URL","GET_MOVIE_URL","USER_INFO_URL","axiosConfig","headers","getToken","password","a","axios","post","res","userData","jwt_decode","data","access","user_id","token","refreshToken","refresh","console","updateToken","registration","response","confirmation","uid64","patch","getGame","AuthStr","getMovie","setGameStatus","gameSlug","put","setMovieStatus","query","page","params","getUserInfo","userID","setUserStatus","is_following","getUserLog","resultsOnPage","page_size","getUserFriendsLog","checkAuthorization","dispatch","localStorage","getItem","Date","now","type","setItem","resetAuthorization","removeItem","defaults","common","StatusButtonGroup","statuses","activeColor","onChangeStatus","userStatus","useState","activeStatus","setActiveStatus","useEffect","map","className","key","style","backgroundColor","onClick","connect","selectors","requestError","gameIsLoading","requestGame","Requests","then","result","toast","error","actions","openLoginForm","isOpen","getState","slug","useParams","genres","setGenres","metascoreBlock","setMetascoreBlock","setReview","spentTime","setSpentTime","setDevelopers","date","setDate","gameplay_main_extra","gameplay_main","gameplay_comletionist","hltbInfo","setHtlbInfo","newGenres","i","length","metacritic","playtime","gameplay_completionist","newDevelopers","released","mas","split","newDate","document","backgroundImage","active","spinner","text","md","size","src","alt","marginBottom","display","hidden","far","icon","gameplay_main_unit","gameplay_main_extra_unit","gameplay_completionist_unit","stop","emptySymbol","fontSize","fullSymbol","n","initialRating","readonly","onChange","marginTop","paddingTop","dangerouslySetInnerHTML","__html","description","paddingLeft","label","value","event","target","outline","disabled","getElementById","movieIsLoading","requestMovie","companies","setCompanies","cast","setCast","director","setDirector","vote_average","production_companies","newCompanies","newCast","crew","newDirector","job","backdrop_path","release_date","runtime","tagline","overview","CardGame","history","useHistory","setName","newName","substr","href","window","location","origin","e","push","preventDefault","CardMovie","CardUser","CategoriesTab","categories","onChangeCategory","activeCategory","setActiveCategory","category","color","height","borderColor","gamesIsLoading","moviesIsLoading","usersIsLoading","searchGame","searchMovie","results","queryText","setQueryText","gamesCards","setGamesCards","moviesCards","setMoviesCards","usersCards","setUsersCards","onSubmit","placeholder","aria-label","authError","closeForm","logIn","login","toggle","centered","htmlFor","registrateArror","confirmEmailRequest","success","search","URLSearchParams","GameBlock","gameColumns","field","sort","columns","rows","gameTableData","setGameTableData","rawg_slug","rawg_name","name2","games_count","games_total_spent_time","striped","bordered","small","info","barReverse","noBottomColumns","noRecordsFoundLabel","paginationLabel","entriesLabel","searchLabel","FriendBlock","MovieBlock","movieColumns","movieTableData","setMovieTableData","tmdb_id","tmdb_name","movies_count","movies_total_spent_time","LogRow","showUsername","created","toLocaleTimeString","action","actionResult","translateActionType","action_type","action_result","actionType","translateType","nameToLink","target_id","number","actionResultToStr","UserLogBlock","logs","onChangePage","logsByDay","setLogsByDay","currentPage","setCurrentPage","newLogs","getDay","groupLogsByDay","dayLog","toLocaleDateString","has_next_page","userIsLoading","userInfo","userLogsIsLoading","userFriendsLogsIsLoading","currentUserInfo","getUserLogs","getUserFriendsLogs","is_followed","pageNumber","followed_users","onLoginClick","onLogoutClick","onRegistrationClick","dark","expand","fixed","left","right","to","nav","caret","Routes","exact","path","component","GamePage","MoviePage","SearchPage","ConfirmPage","UserPage","render","position","hideProgressBar","newestOnTop","closeOnClick","React","Component","onLoad","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","setIn","applyMiddleware","thunk","ReactDOM","URL","process","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.522f3978.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction HomePage () \r\n{\r\n    return (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Страница ещё не готова</h1>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nexport default HomePage;","import * as types from './actionTypes';\r\nimport { Map } from 'immutable';\r\n\r\n// Создаем reducer с начальным состоянием.\r\nconst initialState = Map(\r\n    {\r\n        auth: { loggedIn: false },\r\n        user: { username:\"\", email:\"\", id: null },\r\n        content: { \r\n            game: {\r\n                rawg: {\r\n                    name: \"\",\r\n                    background_image: \"\",\r\n                    background_image_additional: \"\",\r\n                    developers: [{}],\r\n                },\r\n                hltb:{\r\n                    game_image_url: \"\"\r\n                },\r\n                user_info:{\r\n                    status: null,\r\n                    review: \"\",\r\n                    score: 0,\r\n                    spent_time: 0\r\n                }\r\n            },\r\n            movie: {\r\n                tmdb: {\r\n                    title: \"\",\r\n                    poster_path: \"\",\r\n                    developers: [{}],\r\n                },\r\n                user_info:{\r\n                    status: null,\r\n                    review: \"\",\r\n                    score: 0,\r\n                    spent_time: 0\r\n                }\r\n            } \r\n        },\r\n        searchContent: {\r\n            games: [],\r\n            movies: [],\r\n            users: []\r\n        },\r\n        userPageContent: {\r\n            user: {\r\n                stats: {}\r\n            },\r\n            userLogs: {log: []},\r\n            userFriendsLogs: {log: []},\r\n        },\r\n        openedPages: { LoginForm: false, RegistrateForm: false },\r\n        errors: {auth: false, registrate: false, gameRequest: false, movieRequest: false, userPage: false },\r\n        isLoading: {contentGame: false, contentMovie: false, searchGames: false, searchMovies: false, userPageContent: false, searchUsers: false, userPageLogs: false, userPageFriendsLogs: false}\r\n    }\r\n);\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_USER:\r\n        return state.setIn(['user'], action.user);\r\n    case types.SET_AUTH:\r\n        return state.setIn(['auth'], action.auth);\r\n\r\n    case types.SET_CONTENT_GAME:\r\n        return state.setIn(['content', 'game'], action.game);\r\n    case types.SET_CONTENT_MOVIE:\r\n        return state.setIn(['content', 'movie'], action.movie);\r\n\r\n    case types.SET_SEARCH_CONTENT_GAMES:\r\n        return state.setIn(['searchContent', 'games'], action.games);\r\n    case types.SET_SEARCH_CONTENT_MOVIES:\r\n        return state.setIn(['searchContent', 'movies'], action.movies);\r\n    case types.SET_SEARCH_CONTENT_USERS:\r\n        return state.setIn(['searchContent', 'users'], action.users);\r\n\r\n    case types.SET_CONTENT_GAME_USERINFO:\r\n        return state.setIn(['content', 'game', 'user_info'], action.user_info);\r\n    case types.SET_CONTENT_GAME_USERINFO_STATUS:\r\n        return state.setIn(['content', 'game', 'user_info', 'status'], action.status)\r\n    case types.SET_CONTENT_GAME_USERINFO_SCORE:\r\n        return state.setIn(['content', 'game', 'user_info', 'score'], action.score)\r\n\r\n    case types.SET_CONTENT_MOVIE_USERINFO:\r\n        return state.setIn(['content', 'movie', 'user_info'], action.user_info);\r\n\r\n    case types.SET_USER_PAGE_CONTENT:\r\n        return state.setIn(['userPageContent', 'user'], action.content);\r\n    case types.SET_USER_PAGE_FOLLOWING:\r\n        return state.setIn(['userPageContent', 'user', 'is_followed'], action.is_following);\r\n    case types.SET_USER_PAGE_LOGs:\r\n        return state.setIn(['userPageContent', 'userLogs'], action.logs);\r\n    case types.SET_USER_PAGE_FRIENDS_LOGS:\r\n        return state.setIn(['userPageContent', 'userFriendsLogs'], action.logs);\r\n\r\n    case types.SET_LOGINFORM:\r\n        return state.setIn(['openedPages', 'LoginForm'], action.isOpen);\r\n    case types.SET_REGISTRATEFORM:\r\n        return state.setIn(['openedPages', 'RegistrateForm'], action.isOpen);\r\n\r\n    case types.AUTH_ERROR:\r\n        return state.setIn(['errors', 'auth'], action.error);\r\n    case types.REGISTRATE_ERROR:\r\n        return state.setIn(['errors', 'registrate'], action.error);\r\n    case types.GAME_REQUEST_ERROR:\r\n        return state.setIn(['errors', 'gameRequest'], action.error);\r\n    case types.MOVIE_REQUEST_ERROR:\r\n        return state.setIn(['errors', 'movieRequest'], action.error);\r\n    case types.USER_PAGE_ERROR:\r\n        return state.setIn(['errors', 'userPage'], action.error);\r\n\r\n    case types.SET_IS_LOADING_CONTENT_GAME:\r\n        return state.setIn(['isLoading', 'contentGame'], action.isLoading);\r\n    case types.SET_IS_LOADING_CONTENT_MOVIE:\r\n        return state.setIn(['isLoading', 'contentMovie'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_GAMES:\r\n        return state.setIn(['isLoading', 'searchGames'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_MOVIES:\r\n        return state.setIn(['isLoading', 'searchMovies'], action.isLoading);\r\n    case types.SET_IS_LOADING_USER_PAGE_CONTENT:\r\n        return state.setIn(['isLoading', 'userPageContent'], action.isLoading);\r\n    case types.SET_IS_LOADING_USER_PAGE_LOGS:\r\n        return state.setIn(['isLoading', 'userPageLogs'], action.isLoading);\r\n    case types.SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS:\r\n        return state.setIn(['isLoading', 'userPageFriendsLogs'], action.isLoading);\r\n    case types.SET_IS_LOADING_SEARCH_USERS:\r\n        return state.setIn(['isLoading', 'searchUsers'], action.isLoading);\r\n    default:\r\n        return state;\r\n  }\r\n}\r\n\r\nexport function getLoggedIn(state) {\r\n    return state.get('auth').loggedIn;\r\n}\r\n\r\nexport function getAuth(state) {\r\n    return state.get('auth');\r\n}\r\n\r\nexport function getContentGame(state) {\r\n    return state.get('content').game;\r\n}\r\n\r\nexport function getContentMovie(state) {\r\n    return state.get('content').movie;\r\n}\r\n\r\nexport function getSearchContentGames(state) {\r\n    return state.get('searchContent').games;\r\n}\r\n\r\nexport function getSearchContentMovies(state) {\r\n    return state.get('searchContent').movies;\r\n}\r\n\r\nexport function getSearchContentUsers(state) {\r\n    return state.get('searchContent').users;\r\n}\r\n\r\nexport function getAuthError(state) {\r\n    return state.get('errors').auth;\r\n}\r\n\r\nexport function getRegistrateError(state) {\r\n    return state.get('errors').registrate;\r\n}\r\n\r\nexport function getGameRequestError(state) {\r\n    return state.get('errors').gameRequest;\r\n}\r\n\r\nexport function getMovieRequestError(state) {\r\n    return state.get('errors').movieRequest;\r\n}\r\n\r\nexport function getUserPageError(state) {\r\n    return state.get('errors').userPage;\r\n}\r\n\r\nexport function getUser(state) {\r\n    return state.get('user');\r\n}\r\n\r\nexport function getLoginForm(state) {\r\n    return state.get('openedPages').LoginForm;\r\n}\r\n\r\nexport function getRegistrateForm(state) {\r\n    return state.get('openedPages').RegistrateForm;\r\n}\r\n\r\nexport function getIsLoadingContentGame(state) {\r\n    return state.get('isLoading').contentGame;\r\n}\r\n\r\nexport function getIsLoadingContentMovie(state) {\r\n    return state.get('isLoading').contentMovie;\r\n}\r\n\r\nexport function getIsLoadingSearchGames(state) {\r\n    return state.get('isLoading').searchGames;\r\n}\r\n\r\nexport function getIsLoadingSearchMovies(state) {\r\n    return state.get('isLoading').searchMovies;\r\n}\r\n\r\nexport function getIsLoadingSearchUsers(state) {\r\n    return state.get('isLoading').searchUsers;\r\n}\r\n\r\nexport function getIsLoadingSearchAll(state) {\r\n    return (state.get('isLoading').searchUsers || state.get('isLoading').searchMovies || state.get('isLoading').searchGames);\r\n}\r\n\r\nexport function getIsLoadingUserPageContent(state) {\r\n    return state.get('isLoading').userPageContent;\r\n}\r\n\r\nexport function getIsLoadingUserPageLogs(state) {\r\n    return state.get('isLoading').userPageLogs;\r\n}\r\n\r\nexport function getIsLoadingUserPageFriendsLogs(state) {\r\n    return state.get('isLoading').userPageFriendsLogs;\r\n}\r\n\r\nexport function getUserPageContent(state){\r\n    return state.get('userPageContent').user;\r\n}\r\n\r\nexport function getUserPageLogs(state){\r\n    return state.get('userPageContent').userLogs;\r\n}\r\n\r\nexport function getUserPageFriendsLogs(state){\r\n    return state.get('userPageContent').userFriendsLogs;\r\n}","/** Время жизни токена в миллисекундах, после истечения которого будет запрошен новый токен*/\r\nexport const TOKEN_LIFETIME = 86000000; \r\n/**Адрес сервера*/\r\nexport const BACKEND_URL = \"http://35.193.124.214:8001/\";\r\n/**Адрес получения токена */\r\nexport const GET_TOKEN_URL = BACKEND_URL + \"users/auth/login/\"; \r\n/**Адрес обновления токена */\r\nexport const REFRESH_TOKEN_URL = BACKEND_URL + \"users/auth/refresh-token/\";\r\n/**Адрес регистрации */\r\nexport const REGISTRATE_URL = BACKEND_URL + \"users/auth/signup/\";\r\n/**Адрес подтверждения почты */\r\nexport const CONFIRM_URL = BACKEND_URL + \"users/auth/confirmation/\";\r\n/**Адрес запроса игры */\r\nexport const GET_GAME_URL = BACKEND_URL + \"games/game/\";\r\n/**Адрес поиска игр */\r\nexport const SEARCH_GAMES_URL = BACKEND_URL + \"games/search/\";\r\n/**Адрес запроса фильма */\r\nexport const GET_MOVIE_URL = BACKEND_URL + \"movies/movie/\";\r\n/**Адрес поиска фильмов */\r\nexport const SEARCH_MOVIES_URL = BACKEND_URL + \"movies/search/\";\r\n/**Адрес получения информации о пользователе */\r\nexport const USER_INFO_URL = BACKEND_URL + \"users/user/\";\r\n/**Адрес поиска пользователей */\r\nexport const SEARCH_USERS_URL = BACKEND_URL + \"users/search/\"; \r\n","import axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport {GET_TOKEN_URL, REFRESH_TOKEN_URL, REGISTRATE_URL, CONFIRM_URL} from '../settings';\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n};\r\n\r\n/**\r\n * ПОлучение токена авторизации. Токен сохраняется в localStorage\r\n * @param {string} username Имя пользователя\r\n * @param {string} password Пароль \r\n */\r\nexport async function getToken(username, password){\r\n    try{\r\n        const res = await axios.post(GET_TOKEN_URL, {\r\n                    username: username,\r\n                    password: password \r\n                }, axiosConfig);\r\n\r\n        let userData = jwt_decode(res.data.access);\r\n        let user = {username: userData.username, id: userData.user_id, email: userData.email}\r\n\r\n        return {token: res.data.access, refreshToken: res.data.refresh, user: user};\r\n    }catch(e){\r\n        console.log(\"axios error: \" + e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Функция обновления токена\r\n */\r\nexport async function updateToken(refreshToken){\r\n    if (typeof refreshToken !== 'undefined' & refreshToken != null)\r\n        try{\r\n            const res = await axios.post(REFRESH_TOKEN_URL, {\r\n                        refresh: refreshToken\r\n                    }, axiosConfig);\r\n                    \r\n            let userData = jwt_decode(res.data.access);\r\n            let user = {username: userData.username, id: userData.user_id, email: userData.email};\r\n\r\n            return {token: res.data.access, user: user};\r\n        }catch(e){\r\n            console.log(\"exios error: \" + e);\r\n            return null;\r\n        }\r\n    return null;\r\n}\r\n\r\nexport async function registration(username, email, password) {\r\n   try{\r\n        const res = await axios.post(REGISTRATE_URL, \r\n            {  username: username,\r\n                email: email, \r\n                password: password \r\n            }, axiosConfig);\r\n        let data = res.data;\t\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e.response);\r\n        return e.response;\r\n    }\r\n}\r\n\r\nexport async function confirmation(uid64, token) {\r\n    try{\r\n        console.log(uid64);\r\n        console.log(token);\r\n        const res = await axios.patch(CONFIRM_URL, \r\n             {  \r\n                uid64: uid64,\r\n                token: token\r\n             }, \r\n             axiosConfig);\r\n        let data = res.data;\t\r\n        return data;\r\n     }catch(e){\r\n         console.log(\"AXIOS ERROR: \", e.response);\r\n         return e.response;\r\n     }\r\n }\r\n","import axios from \"axios\";\r\nimport {GET_GAME_URL, SEARCH_GAMES_URL, USER_INFO_URL, SEARCH_MOVIES_URL, GET_MOVIE_URL, SEARCH_USERS_URL} from \"../settings\";\r\n\r\nlet axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8'\r\n    }\r\n};\r\n\r\naxios.defaults.headers.common = {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n\r\n/**\r\n * Запрос к бд, получающий информацию об игре\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID игры  \r\n * @returns {object} Информация об игре\r\n */\r\nexport async function getGame(token, id) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(GET_GAME_URL + id + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(GET_GAME_URL + id + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Запрос к бд, получающий информацию о фильме\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID фильма  \r\n * @returns {object} Информация о фильме\r\n */\r\nexport async function getMovie(token, id) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(GET_MOVIE_URL + id + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(GET_MOVIE_URL + id + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса игры\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Статус игры\r\n * @param {string} gameSlug Слаг игры\r\n */\r\nexport async function setGameStatus(token, gameSlug, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        console.log(user_info);\r\n        const res = await axios.put(GET_GAME_URL + gameSlug + \"/\", \r\n            user_info, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса фильма\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Статус фильма\r\n * @param {string} movieID ID фильма\r\n */\r\nexport async function setMovieStatus(token, id, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        console.log(user_info);\r\n        const res = await axios.put(GET_MOVIE_URL + id + \"/\", \r\n            user_info, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса игры\r\n * @param {string} token Токен доступа\r\n * @param {object} user_info Объект статуса игры\r\n * @param {string} gameSlug Слаг игры\r\n \r\nexport async function patchGameStatus(token, gameSlug, user_info){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        const res = await axios.patch(GET_GAME_URL + gameSlug + \"/\", \r\n        {status: user_info.status, score: user_info.score, review: user_info.review, spent_time: user_info.spent_time }, { 'headers': { 'Authorization': AuthStr } });\r\n        console.log(res.data);\r\n        if (res.status === 204 || res.status === 201|| res.status === 200)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}*/\r\n\r\n\r\n/**\r\n * Запрос на поиск игр\r\n * @param {string} query Поисковый запрос\r\n * @param {int} page Страница поиска\r\n */\r\nexport async function searchGames(query, page){\r\n    try{\r\n        const res = await axios.get(SEARCH_GAMES_URL, { params : {query: query, page: page} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на поиск фильмов\r\n * @param {string} query Поисковый запрос\r\n * @param {int} page Страница поиска\r\n */\r\nexport async function searchMovies(query, page){\r\n    try{\r\n        const res = await axios.get(SEARCH_MOVIES_URL, { params : {query: query, page: page} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n            console.log(res);\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на поиск пользователей\r\n * @param {string} query Поисковый запрос\r\n */\r\nexport async function searchUsers(query){\r\n    try{\r\n        const res = await axios.get(SEARCH_USERS_URL, { params : {query: query} }, \r\n            { 'headers': { 'Content-Type': 'application/json;charset=UTF-8' } });\r\n            console.log(res);\r\n        return res.data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос к бд, получающий информацию об игре\r\n * @param {string} token Токен доступа\r\n * @param {string} id ID игры  \r\n * @returns {object} Информация об игре\r\n */\r\nexport async function getUserInfo(token, userID) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/\", { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/\", axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос на изменение статуса пользовтеля (добавить в друзья и тд)\r\n * @param {string} token Токен доступа\r\n * @param {boolean} is_following Статус фильма\r\n * @param {string} userID ID пользовтеля\r\n */\r\nexport async function setUserStatus(token, is_following, userID){\r\n    try{\r\n        var AuthStr = 'Bearer ' + token;\r\n        const res = await axios.put(USER_INFO_URL + userID + \"/follow/\", \r\n            is_following, { headers: { 'Authorization': AuthStr } });\r\n        console.log(res); \r\n        \r\n        if (res.status === 204 || res.status === 200 || res.status === 201)\r\n            return res.data;\r\n        else return null;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос к бд, получающий лог пользователя\r\n * @param {string} userID ID пользователя\r\n * @param {string} page страница \r\n * @param {int} resultsOnPage количество результатов на странице \r\n */\r\nexport async function getUserLog(token, userID, page, resultsOnPage) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/log/\", { params : { page: page, page_size: resultsOnPage } }, { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/log/\", { params : { page: page, page_size: resultsOnPage } }, axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Запрос к бд, получающий лог друзей пользователя\r\n * @param {string} userID ID пользователя\r\n * @param {int} page страница\r\n * @param {int} resultsOnPage количество результатов на странице \r\n */\r\nexport async function getUserFriendsLog(token, userID, page, resultsOnPage) {\r\n    let data;\r\n    try{\r\n        if (token){\r\n            var AuthStr = 'Bearer ' + token;\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/friends_log/\", { params : { page: page, page_size: resultsOnPage } }, { 'headers': { 'Authorization': AuthStr } });\r\n            data = res.data;\r\n        }else{\r\n            const res = await axios.get(USER_INFO_URL + userID + \"/friends_log/\", { params : { page: page, page_size: resultsOnPage } }, axiosConfig);\r\n            data = res.data;\r\n        }\r\n        return data;\r\n    }catch(e){\r\n        console.log(\"AXIOS ERROR: \", e);\r\n        return null;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\nimport * as selectors from './reducers';\r\nimport {getToken, updateToken, registration, confirmation} from \"../services/jwtAuth\";\r\nimport {TOKEN_LIFETIME} from \"../settings\";\r\nimport * as Requests from \"../services/requests\";\r\nimport { toast } from \"react-toastify\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport function tryAuth(login, password) {\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.AUTH_ERROR,\r\n            error: false \r\n        });\r\n\r\n      try {\r\n        const res = await getToken(login, password);\r\n        if (res !== null){\r\n            localStorage.setItem('refreshToken', res.refreshToken);\r\n            localStorage.setItem('token', res.token);\r\n            localStorage.setItem('tokenTime', Date.now());\r\n            dispatch({\r\n                type: actionTypes.SET_AUTH,\r\n                auth: { loggedIn: true }, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: res.user, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_LOGINFORM,\r\n                isOpen: false \r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: actionTypes.AUTH_ERROR,\r\n                error: true \r\n            });\r\n        }\r\n            \r\n      }catch (error) {\r\n        console.error(error);\r\n        dispatch({\r\n            type: actionTypes.AUTH_ERROR,\r\n            error: true \r\n        });\r\n      }\r\n    };\r\n}\r\n\r\nexport function checkAuthorization(){\r\n    return async(dispatch) => {\r\n        if (localStorage.getItem('token') === null | Date.now() - localStorage.getItem('tokenTime') > TOKEN_LIFETIME){\r\n            const res = await updateToken(localStorage.getItem(\"refreshToken\"));\r\n            if (res !== null){\r\n                dispatch({\r\n                    type: actionTypes.SET_AUTH,\r\n                    auth: { loggedIn: true }, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: res.user, \r\n                });\r\n                localStorage.setItem('token', res.token);\r\n                localStorage.setItem('tokenTime', Date.now());\r\n                return true;\r\n            }else{\r\n                //toast.warn(\"Произошла ошибка авторизации. Зайдите ещё раз\");\r\n                dispatch(resetAuthorization());\r\n                return false;\r\n            } \r\n        }else{\r\n            let userData = jwt_decode(localStorage.getItem('token'));\r\n            let user = {username: userData.username, id: userData.user_id, email: userData.email};\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: user, \r\n            });\r\n            dispatch({\r\n                type: actionTypes.SET_AUTH,\r\n                auth: { loggedIn: true }, \r\n            });\r\n            return true;\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport function resetAuthorization(){\r\n    return async(dispatch) => {\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('tokenTime');\r\n        dispatch({\r\n            type: actionTypes.SET_AUTH,\r\n            auth: { loggedIn: false }, \r\n        });\r\n        dispatch({\r\n            type: actionTypes.SET_USER,\r\n            user: { username:\"\", id: null, email:\"\" }, \r\n        });\r\n    }\r\n}\r\n\r\nexport function registrationRequest(username, email, password){\r\n    return async(dispatch) => {\r\n        registration(username, email, password).then((result) => {\r\n            console.log(result);\r\n            if (result.status !== 400){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: { login: result.username, email: result.email }, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.REGISTRATE_ERROR,\r\n                    error: false \r\n                });\r\n            }\r\n            else{\r\n                for (let error in result.data)\r\n                    toast.error(result.data[error][0]);\r\n                   \r\n                dispatch({\r\n                    type: actionTypes.REGISTRATE_ERROR,\r\n                    error: true \r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function confirmEmailRequest(uid64, token){\r\n    return async() => {\r\n        confirmation(uid64, token).then((result) => {\r\n            console.log(result);\r\n            if (result.status !== 400){\r\n                toast.success(\"Почта подтверждена!\");\r\n            }\r\n            else{\r\n                toast.error(result.data);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestGame(id){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n            isLoading: true\r\n        });\r\n        Requests.getGame(localStorage.getItem('token'), id).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_CONTENT_GAME,\r\n                    game: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Игра не найдена!\");\r\n                dispatch({\r\n                    type: actionTypes.GAME_REQUEST_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_GAME,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestMovie(id){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n            isLoading: true\r\n        });\r\n        Requests.getMovie(localStorage.getItem('token'), id).then((result) => {\r\n            console.log(result);\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_CONTENT_MOVIE,\r\n                    movie: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Фильм не найден!\");\r\n                dispatch({\r\n                    type: actionTypes.MOVIE_REQUEST_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_CONTENT_MOVIE,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function setGameStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setGameStatus(localStorage.getItem('token'), selectors.getContentGame(getState()).rawg.slug, user_info).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_GAME_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/*export function patchGameStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.patchGameStatus(localStorage.getItem('token'), selectors.getContentGame(getState()).rawg.slug, user_info).then((result) => {\r\n                console.log(result)\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_GAME_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}*/\r\n\r\nexport function requestUserPageContent(username){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n            isLoading: true\r\n        });\r\n        Requests.getUserInfo(localStorage.getItem('token'), username).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER_PAGE_CONTENT,\r\n                    content: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Профиль не найден!\");\r\n                dispatch({\r\n                    type: actionTypes.USER_PAGE_ERROR,\r\n                    error: true \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_CONTENT,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestUserPageLogs(userID, page, resultsOnPage){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_USER_PAGE_LOGS,\r\n            isLoading: true\r\n        });\r\n        Requests.getUserLog(localStorage.getItem('token'), userID, page, resultsOnPage).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER_PAGE_LOGs,\r\n                    logs: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_LOGS,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Ошибка загрузки логов!\");\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_LOGS,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function requestUserPageFriendsLogs(userID, page, resultsOnPage){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS,\r\n            isLoading: true\r\n        });\r\n        Requests.getUserFriendsLog(localStorage.getItem('token'), userID, page, resultsOnPage).then((result) => {\r\n            if (result != null){\r\n                dispatch({\r\n                    type: actionTypes.SET_USER_PAGE_FRIENDS_LOGS,\r\n                    logs: result, \r\n                });\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS,\r\n                    isLoading: false\r\n                });\r\n            }\r\n            else{\r\n                toast.error(\"Ошибка загрузки логов!\");\r\n                dispatch({\r\n                    type: actionTypes.SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS,\r\n                    isLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function searchGames(query, page){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_GAMES,\r\n            isLoading: true\r\n        });\r\n        Requests.searchGames(query, page).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_GAMES,\r\n                    games: result, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_GAMES,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function searchMovies(query, page){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_MOVIES,\r\n            isLoading: true\r\n        });\r\n        Requests.searchMovies(query, page).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_MOVIES,\r\n                    movies: result.results, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_MOVIES,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function setMovieStatus(user_info){\r\n    return async(dispatch, getState) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setMovieStatus(localStorage.getItem('token'), selectors.getContentMovie(getState()).tmdb.id, user_info).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_CONTENT_MOVIE_USERINFO,\r\n                        user_info: result\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function searchUsers(query){\r\n    return async(dispatch) => {\r\n        dispatch({\r\n            type: actionTypes.SET_IS_LOADING_SEARCH_USERS,\r\n            isLoading: true\r\n        });\r\n        Requests.searchUsers(query).then((result) => {\r\n            if (!result){\r\n                toast.error(\"Ошибка поиска\")\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: actionTypes.SET_SEARCH_CONTENT_USERS,\r\n                    users: result, \r\n                });\r\n            }\r\n            dispatch({\r\n                type: actionTypes.SET_IS_LOADING_SEARCH_USERS,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function setUserStatus(is_following, userID){\r\n    return async(dispatch) => {\r\n        if (await dispatch(checkAuthorization())){\r\n            Requests.setUserStatus(localStorage.getItem('token'), is_following, userID).then((result) => {\r\n                if (!result){\r\n                    toast.error(\"Ошибка обновления статуса\")\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: actionTypes.SET_USER_PAGE_FOLLOWING,\r\n                        is_following: result.is_following\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport function setUser(user) {\r\n    return({ type: actionTypes.SET_USER, user: user });\r\n}\r\n\r\nexport function openLoginForm() {\r\n    return({ type: actionTypes.SET_LOGINFORM, isOpen: true  });\r\n}\r\n\r\nexport function closeLoginForm() {\r\n    return({ type: actionTypes.SET_LOGINFORM, isOpen: false  });\r\n}\r\n\r\nexport function openRegistrateForm() {\r\n    return({ type: actionTypes.SET_REGISTRATEFORM, isOpen: true  });\r\n}\r\n\r\nexport function closeRegistrateForm() {\r\n    return({ type: actionTypes.SET_REGISTRATEFORM, isOpen: false  });\r\n}","export const SET_USER = 'SET_USER';\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const SET_LOGINFORM = \"SET_LOGINFORM\";\r\nexport const SET_REGISTRATEFORM = \"SET_REGISTRATEFORM\";\r\nexport const SET_CONTENT_GAME = \"SET_CONTENT_GAME\";\r\nexport const SET_CONTENT_MOVIE = \"SET_CONTENT_MOVIE\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const REGISTRATE_ERROR = \"REGISTRATE_ERROR\";\r\nexport const GAME_REQUEST_ERROR = \"GAME_REQUEST_ERROR\";\r\nexport const MOVIE_REQUEST_ERROR = \"MOVIE_REQUEST_ERROR\";\r\nexport const USER_PAGE_ERROR = \"USER_PAGE_ERROR\";\r\nexport const SET_CONTENT_GAME_USERINFO = \"SET_CONTENT_GAME_USERINFO\";\r\nexport const SET_CONTENT_GAME_USERINFO_STATUS = \"SET_CONTENT_GAME_USERINFO_STATUS\";\r\nexport const SET_CONTENT_GAME_USERINFO_SCORE = \"SET_CONTENT_GAME_USERINFO_SCORE\";\r\nexport const SET_CONTENT_GAME_USERINFO_REVIEW = \"SET_CONTENT_GAME_USERINFO_REVIEW\";\r\nexport const SET_CONTENT_MOVIE_USERINFO = \"SET_CONTENT_MOVIE_USERINFO\";\r\nexport const SET_SEARCH_CONTENT_GAMES = \"SET_SEARCH_CONTENT_GAMES\";\r\nexport const SET_SEARCH_CONTENT_MOVIES = \"SET_SEARCH_CONTENT_MOVIES\";\r\nexport const SET_SEARCH_CONTENT_USERS = \"SET_SEARCH_CONTENT_USERS\";\r\nexport const SET_IS_LOADING_CONTENT_GAME = \"SET_IS_LOADING_CONTENT_GAME\";\r\nexport const SET_IS_LOADING_CONTENT_MOVIE = \"SET_IS_LOADING_CONTENT_MOVIE\";\r\nexport const SET_IS_LOADING_SEARCH_GAMES = \"SET_IS_LOADING_SEARCH_GAMES\";\r\nexport const SET_IS_LOADING_SEARCH_MOVIES = \"SET_IS_LOADING_SEARCH_MOVIES\";\r\nexport const SET_IS_LOADING_SEARCH_USERS = \"SET_IS_LOADING_SEARCH_USERS\";\r\nexport const SET_IS_LOADING_USER_PAGE_CONTENT = \"SET_IS_LOADING_USER_PAGE_CONTENT\";\r\nexport const SET_IS_LOADING_USER_PAGE_LOGS = \"SET_IS_LOADING_USER_PAGE_LOGS\";\r\nexport const SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS = \"SET_IS_LOADING_USER_PAGE_FRIENDS_LOGS\";\r\nexport const SET_USER_PAGE_CONTENT = \"SET_USER_PAGE_CONTENT\";\r\nexport const SET_USER_PAGE_FOLLOWING = \"SET_USER_PAGE_FOLLOWING\";\r\nexport const SET_USER_PAGE_LOGs = \"SET_USER_PAGE_LOGs\";\r\nexport const SET_USER_PAGE_FRIENDS_LOGS = \"SET_USER_PAGE_FRIENDS_LOGS\";\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './style.css';\r\n\r\nfunction StatusButtonGroup( {statuses, activeColor, onChangeStatus, userStatus} ) {\r\n    const [activeStatus, setActiveStatus] = useState('');\r\n\r\n    useEffect(() =>{\r\n            setActiveStatus(userStatus?userStatus:statuses[0]);\r\n        },\r\n        [statuses, userStatus]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            {statuses.map((status) => <button className={'contentStatuses'} \r\n                                            key={status}\r\n                                            style={{backgroundColor: (activeStatus === status?activeColor:'#000000')}}\r\n                                            onClick={()=>{ \r\n                                                if (onChangeStatus(status)){\r\n                                                    setActiveStatus(status);\r\n                                                }\r\n                                            }}>\r\n                                            {status}\r\n                                        </button>) }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default StatusButtonGroup;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput\r\n} from \"mdbreact\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport Rating from \"react-rating\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\nimport StatusButtonGroup from \"./Common/StatusButtonGroup\";\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction GamePage ( {requestGame, game, requestError, loggedIn, openLoginForm, setGameStatus, gameIsLoading\r\n    } ) {\r\n    let { id } = useParams();\r\n    const [genres, setGenres] = useState(\"\");\r\n    const [metascoreBlock, setMetascoreBlock] = useState(\"\");\r\n    const [review, setReview] = useState(\"\");\r\n    const [spentTime, setSpentTime] = useState(0);\r\n    const [developers, setDevelopers] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [hltbInfo, setHtlbInfo] = useState({gameplay_main_extra: -1, gameplay_main: -1, gameplay_comletionist: -1});\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            requestGame(id);\r\n        },\r\n        // eslint-disable-next-line\r\n\t\t[id, requestGame, loggedIn]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            if (game.rawg.genres){\r\n                let newGenres = \"\"\r\n                for (let i = 0; i < game.rawg.genres.length; i++){\r\n                    newGenres += game.rawg.genres[i].name;\r\n                    if (i !== game.rawg.genres.length - 1)\r\n                        newGenres += \", \";\r\n                }\r\n                 setGenres(newGenres);   \r\n            }\r\n\r\n            if (game.rawg.metacritic){\r\n                setMetascoreBlock(\r\n                    <div>\r\n                        <div className=\"metacritic\">\r\n                            <p>{game.rawg.metacritic}</p>\r\n                        </div>\r\n                        <p className=\"metacriticText\">Metascore</p>\r\n                    </div>\r\n                );\r\n            }else{\r\n                setMetascoreBlock(\"\");\r\n            }\r\n\r\n            if (game.hltb){\r\n                setHtlbInfo(game.hltb);\r\n            }else if (game.rawg.playtime){\r\n                setHtlbInfo({gameplay_main_extra: game.rawg.playtime, gameplay_main: -1, gameplay_completionist: -1});\r\n            }else{\r\n                setHtlbInfo({gameplay_main_extra: -1, gameplay_main: -1, gameplay_completionist: -1});\r\n            }\r\n\r\n            if (game.user_info){\r\n                setReview(game.user_info.review);\r\n                setSpentTime(game.user_info.spent_time);\r\n            }\r\n\r\n            if (game.rawg.developers){\r\n                let newDevelopers = \"\"\r\n                for (let i = 0; i < game.rawg.developers.length; i++){\r\n                    newDevelopers += game.rawg.developers[i].name;\r\n                    if (i !== game.rawg.developers.length - 1)\r\n                    newDevelopers += \", \";\r\n                }\r\n                setDevelopers(newDevelopers);   \r\n            }\r\n\r\n            if (game.rawg.released){\r\n                let mas = game.rawg.released.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            document.title = game.rawg.name;\r\n\t\t},\r\n\t\t[game]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg\" style={{backgroundImage: `url(${game.rawg.background_image_additional?game.rawg.background_image_additional:game.rawg.background_image})`}}/>\r\n                <LoadingOverlay\r\n                    active={gameIsLoading}\r\n                    spinner\r\n                    text='Загрузка...'\r\n                    >\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"gameContentPage\"> \r\n                            <MDBContainer>\r\n                                <MDBRow className=\"gameContentHeader rounded-top\" >\r\n                                    <MDBCol size=\"5\">\r\n                                        <img src={game.rawg.background_image} className=\"img-fluid\" alt=\"\"/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"6\">\r\n                                        <h1>{game.rawg.name}</h1>\r\n                                        <p style={{marginBottom: \"2px\"}}>Разработчики: {developers}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Дата релиза: {date}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Жанр: {genres}</p>\r\n                                        <p style={{marginBottom: \"4px\", display: \"inline\"}} >Время прохождения: </p>\r\n                                            <div hidden={hltbInfo.gameplay_main < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"light-green-text\" title={\"Главный сюжет\"}/><span className=\"hs\"/>{hltbInfo.gameplay_main} {hltbInfo.gameplay_main_unit}<span className=\"hs\"/>\r\n                                            </div> <p style={{display: \"inline\"}} > </p>\r\n                                            <div hidden={hltbInfo.gameplay_main_extra < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"yellow-text\" title={\"Главный сюжет + побочные задания\"}/><span className=\"hs\"/>{hltbInfo.gameplay_main_extra} {hltbInfo.gameplay_main_extra_unit}<span className=\"hs\"/> \r\n                                            </div> <p style={{display: \"inline\"}} > </p>\r\n                                            <div hidden={hltbInfo.gameplay_completionist < 0} style={{display: \"inline\"}}>\r\n                                                <MDBIcon far icon=\"clock\" className=\"red-text\" title={\"Полное прохождение\"}/><span className=\"hs\"/>{hltbInfo.gameplay_completionist} {hltbInfo.gameplay_completionist_unit}\r\n                                            </div>\r\n                                        <br/>\r\n                                        <Rating stop={10}\r\n                                            emptySymbol={<MDBIcon far icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}}/>}\r\n                                            fullSymbol={[1,2,3,4,5,6,7,8,9,10].map(n => <MDBIcon icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}} title={n}/>)}\r\n                                            initialRating={game.user_info?game.user_info.score:0}\r\n                                            readonly={!loggedIn | (!game.user_info)}\r\n                                            onChange={(score) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                    setGameStatus({score: score });\r\n                                                }}\r\n                                            }\r\n                                            style={{marginTop: \"20px\", marginBottom: \"10px\"}}\r\n                                        /> <br/>\r\n                                        <StatusButtonGroup\r\n                                            statuses={['Не играл', 'Буду играть', 'Играю', 'Дропнул', 'Прошел']}\r\n                                            activeColor='#4527a0' \r\n                                            userStatus={game.user_info?game.user_info.status:'Не играл'}\r\n                                            onChangeStatus={(status) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                   setGameStatus({ status: status });\r\n                                                }\r\n                                            }}\r\n                                            />\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"1\">\r\n                                        { metascoreBlock }\r\n                                    </MDBCol>\r\n                                </MDBRow> \r\n                                <MDBRow className=\"gameContentBody\"> \r\n                                    <MDBCol >\r\n                                        <h3 style={{paddingTop: \"15px\"}}>Описание</h3>\r\n                                        <div dangerouslySetInnerHTML={{__html: game.rawg.description}} />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow>\r\n                                <MDBCol size=\"6\" style={{paddingLeft: \"20px\"}}>\r\n                                    <h3 style={{paddingTop: \"10px\"}}>Отзывы</h3>\r\n                                        \r\n                                        <MDBInput \r\n                                            type=\"textarea\" \r\n                                            id=\"reviewInput\"\r\n                                            label=\"Ваш отзыв\" \r\n                                            value={review}\r\n                                            onChange={(event) =>setReview(event.target.value)}\r\n                                            outline\r\n                                        />\r\n                                        <MDBInput\r\n                                            type=\"number\"\r\n                                            id=\"spentTimeInput\"\r\n                                            label=\"Время прохождения (часы)\" \r\n                                            value={spentTime}\r\n                                            onChange={(event) =>setSpentTime(event.target.value)}\r\n                                        />\r\n                                        <button \r\n                                            className={'savePreviewButton'} \r\n                                            disabled={!loggedIn | (!game.user_info)}\r\n                                            onClick={() => {\r\n                                                    if (!loggedIn){\r\n                                                        openLoginForm();\r\n                                                    }else{\r\n                                                        setGameStatus({   review: document.getElementById('reviewInput').value, spent_time: document.getElementById('spentTimeInput').value });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            >\r\n                                            Сохранить\r\n                                        </button>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </MDBContainer>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n                 </LoadingOverlay>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    requestError: selectors.getGameRequestError(state),\r\n    game: selectors.getContentGame(state),\r\n    gameIsLoading: selectors.getIsLoadingContentGame(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\trequestGame: (id) => {\r\n            dispatch(actions.requestGame(id));\r\n        },\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        /*patchGameStatus: (user_info) => {\r\n            dispatch(actions.patchGameStatus(user_info));\r\n        },*/\r\n        setGameStatus: (status) => {\r\n            dispatch(actions.setGameStatus(status));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage);\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBInput\r\n} from \"mdbreact\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport Rating from \"react-rating\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\nimport StatusButtonGroup from \"./Common/StatusButtonGroup\";\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction MoviePage ( {requestMovie, movie, loggedIn, movieIsLoading, setMovieStatus, openLoginForm\r\n    } ) {\r\n    let { id } = useParams();\r\n    const [metascoreBlock, setMetascoreBlock] = useState(\"\");\r\n    const [genres, setGenres] = useState(\"\");\r\n    const [companies, setCompanies] = useState(\"\");\r\n    const [cast, setCast] = useState(\"\");\r\n    const [director, setDirector] = useState(\"\");\r\n    const [review, setReview] = useState(\"\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            requestMovie(id);\r\n        },\r\n        // eslint-disable-next-line\r\n\t\t[id, requestMovie, loggedIn]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            if (movie.tmdb.vote_average){\r\n                setMetascoreBlock(\r\n                    <div>\r\n                        <div className=\"metacritic\">\r\n                            <p>{movie.tmdb.vote_average * 10}</p>\r\n                        </div>\r\n                        <p className=\"metacriticText\">TMDB score</p>\r\n                    </div>\r\n                );\r\n            }else{\r\n                setMetascoreBlock(\"\");\r\n            }\r\n\r\n            if (movie.tmdb.genres){\r\n                let newGenres = \"\"\r\n                for (let i = 0; i < movie.tmdb.genres.length; i++){\r\n                    newGenres += movie.tmdb.genres[i].name;\r\n                    if (i !== movie.tmdb.genres.length - 1)\r\n                        newGenres += \", \";\r\n                }\r\n                setGenres(newGenres);   \r\n            }\r\n\r\n            if (movie.tmdb.production_companies){\r\n                let newCompanies = \"\"\r\n                for (let i = 0; i < movie.tmdb.production_companies.length; i++){\r\n                    newCompanies += movie.tmdb.production_companies[i].name;\r\n                    if (i !== movie.tmdb.production_companies.length - 1)\r\n                        newCompanies += \", \";\r\n                }\r\n                setCompanies(newCompanies);   \r\n            }\r\n\r\n            if (movie.tmdb.cast){\r\n                let newCast = \"\";\r\n                let length = movie.tmdb.cast.length>5?5:movie.tmdb.cast.length;\r\n                for (let i = 0; i < length; i++){\r\n                    newCast += movie.tmdb.cast[i].name;\r\n                    if (i !== length - 1)\r\n                        newCast += \", \";\r\n                }\r\n                setCast(newCast);   \r\n            }\r\n\r\n            if (movie.tmdb.crew){\r\n                let newDirector = \"\"\r\n                for (let i = 0; i < movie.tmdb.crew.length; i++){\r\n                    if (movie.tmdb.crew[i].job === \"Director\"){\r\n                        newDirector = movie.tmdb.crew[i].name;\r\n                        break;\r\n                    }\r\n                }\r\n                setDirector(newDirector);   \r\n            }\r\n\r\n            if (movie.user_info){\r\n                setReview(movie.user_info.review);\r\n            }\r\n\r\n            document.title = movie.tmdb.title;\r\n\t\t},\r\n\t\t[movie]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg\" style={{backgroundImage: `url(${ 'http://image.tmdb.org/t/p/w1920_and_h800_multi_faces' + movie.tmdb.backdrop_path})`}}/>\r\n                <LoadingOverlay\r\n                    active={movieIsLoading}\r\n                    spinner\r\n                    text='Загрузка...'\r\n                    >\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"movieContentPage\"> \r\n                            <MDBContainer>\r\n                                <MDBRow className=\"movieContentHeader rounded-top\" >\r\n                                    <MDBCol size=\"5\">\r\n                                        <img src={\"http://image.tmdb.org/t/p/w600_and_h900_bestv2\" + movie.tmdb.poster_path} className=\"img-fluid\" alt=\"\"/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"6\">\r\n                                        <h1>{movie.tmdb.title}</h1>\r\n                                        <p style={{marginBottom: \"2px\"}}>Дата релиза: {movie.tmdb.release_date}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Продолжительность (мин): {movie.tmdb.runtime}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Жанр: {genres}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Компания: {companies}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Слоган: {movie.tmdb.tagline}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>В ролях: {cast}</p>\r\n                                        <p style={{marginBottom: \"2px\"}}>Режиссер: {director}</p>\r\n                                        <br/>\r\n                                        <Rating stop={10}\r\n                                            emptySymbol={<MDBIcon far icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}}/>}\r\n                                            fullSymbol={[1,2,3,4,5,6,7,8,9,10].map(n => <MDBIcon icon=\"star\" size=\"1x\" style={{fontSize: \"25px\"}} title={n}/>)}\r\n                                            initialRating={movie.user_info?movie.user_info.score:0}\r\n                                            readonly={!loggedIn | (!movie.user_info)}\r\n                                            onChange={(score) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                    setMovieStatus({score: score });\r\n                                                }}\r\n                                            }\r\n                                        /> <br/>\r\n                                        <StatusButtonGroup loggedIn={loggedIn} \r\n                                            statuses={['Не смотрел', 'Буду смотреть', 'Дропнул', 'Посмотрел']}\r\n                                            activeColor='#4527a0' \r\n                                            userStatus={movie.user_info?movie.user_info.status:'Не смотрел'}\r\n                                            onChangeStatus={(status) => {\r\n                                                if (!loggedIn){\r\n                                                    openLoginForm();\r\n                                                }else{\r\n                                                   setMovieStatus({ status: status });\r\n                                                }\r\n                                            }}/>\r\n                                    </MDBCol>\r\n                                    <MDBCol size=\"1\">\r\n                                        { metascoreBlock }\r\n                                    </MDBCol>\r\n                                </MDBRow> \r\n                                <MDBRow className=\"movieContentBody\"> \r\n                                    <MDBCol >\r\n                                        <h3 style={{paddingTop: \"15px\"}}>Описание</h3>\r\n                                        <div dangerouslySetInnerHTML={{__html: movie.tmdb.overview}} />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBCol size=\"6\" style={{paddingLeft: \"20px\"}}>\r\n                                    <h3 style={{paddingTop: \"10px\"}}>Отзывы</h3>\r\n                                        \r\n                                        <MDBInput \r\n                                            type=\"textarea\" \r\n                                            id=\"reviewInput\"\r\n                                            label=\"Ваш отзыв\" \r\n                                            value={review}\r\n                                            onChange={(event) =>setReview(event.target.value)}\r\n                                            outline\r\n                                        />\r\n                                        <button \r\n                                            className={'savePreviewButton'} \r\n                                            disabled={!loggedIn | (!movie.user_info)}\r\n                                            onClick={() => {\r\n                                                    if (!loggedIn){\r\n                                                        openLoginForm();\r\n                                                    }else{\r\n                                                        setMovieStatus({   review: document.getElementById('reviewInput').value });\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            >\r\n                                            Сохранить\r\n                                        </button>\r\n                                    </MDBCol>\r\n                            </MDBContainer>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n                 </LoadingOverlay>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    requestError: selectors.getGameRequestError(state),\r\n    movie: selectors.getContentMovie(state),\r\n    movieIsLoading: selectors.getIsLoadingContentMovie(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\trequestMovie: (id) => {\r\n            dispatch(actions.requestMovie(id));\r\n        },\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        setMovieStatus: (status) => {\r\n            dispatch(actions.setMovieStatus(status));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\n\r\nfunction CardGame( {game} ) {\r\n    let history = useHistory();\r\n    const [date, setDate] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n            if (game.released){\r\n                let mas = game.released.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            if (game.name.length > 55){\r\n                let newName = game.name.substr(0, 55) + \"...\";\r\n                setName(newName);\r\n            }else\r\n                setName(game.name);\r\n        },\r\n        [game]\r\n    );\r\n\r\n    /*const mouseDownHandler = ( event ) => {\r\n        if( event.button === 1 ) {\r\n            console.log(window.location.origin + '/game/' + game.slug );\r\n\r\n        }\r\n      }*/\r\n\r\n    return(\r\n        <div className=\"searchCardGame\" >\r\n            <div className=\"searchCardGameImage\" style={{backgroundImage: `url(${game.background_image})`}}> </div>\r\n            <div className=\"searchCardGameText\">\r\n                <a href={window.location.origin + '/game/' + game.slug} \r\n                    onClick={(e) => { history.push('/game/' + game.slug); e.preventDefault();}}>\r\n                        <h4 >{name}</h4>\r\n                </a>\r\n                <p>{date}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n//onMouseDown={mouseDownHandler} \r\n\r\nexport default CardGame;\r\n","import React, { useEffect, useState} from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nfunction CardMovie ( {movie} ) {\r\n    let history = useHistory();\r\n\r\n    const [date, setDate] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    useEffect(() =>{\r\n            if (movie.release_date){\r\n                let mas = movie.release_date.split(\"-\");\r\n                let newDate = mas[2] + \".\" + mas[1] + \".\" + mas[0];\r\n                setDate(newDate);\r\n            }else\r\n                setDate(\"\");\r\n\r\n            if (movie.title.length > 55){\r\n                let newName = movie.title.substr(0, 55) + \"...\";\r\n                setName(newName);\r\n            }else\r\n                setName(movie.title);\r\n        },\r\n        [movie]\r\n    );\r\n\r\n    return(\r\n        <div className=\"searchCardMovie\" >\r\n            <div className=\"searchCardMovieImage\" style={{backgroundImage: `url(${\"http://image.tmdb.org/t/p/w600_and_h900_bestv2\" + movie.poster_path})`}}> </div>\r\n            <div className=\"searchCardMovieText\">\r\n                <a href={window.location.origin + '/movie/' + movie.id} \r\n                    onClick={(e) => { history.push('/movie/' + movie.id); e.preventDefault();}}>\r\n                        <h4 >{name}</h4>\r\n                </a>\r\n                <p>{date}</p>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CardMovie;\r\n","import React, { useEffect} from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nfunction CardUser ( {user} ) {\r\n    let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n            \r\n        },\r\n        [user]\r\n    );\r\n\r\n    return(\r\n        <div className=\"cardUser\" >\r\n            <div className=\"cardUserImage\" style={{backgroundImage: `url(${'http://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png'})`}}> </div>\r\n            <div className=\"cardUserText\">\r\n                <a href={window.location.origin + '/user/' + user.id} \r\n                    onClick={(e) => { history.push('/user/' + user.id); e.preventDefault();}}>\r\n                        <h4 >{user.username}</h4>\r\n                </a>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default CardUser;\r\n","import React, {useState} from \"react\";\r\nimport './style.css';\r\n\r\nfunction CategoriesTab( {categories, activeColor, onChangeCategory} ) {\r\n    const [activeCategory, setActiveCategory] = useState(categories[0]);\r\n\r\n    return(\r\n        <div>\r\n            {categories.map((category) => <button className={'categoriesTab'} \r\n                                            key={category}\r\n                                            style={{color: (activeCategory === category?activeColor:'#000000')}}\r\n                                            onClick={()=>{ \r\n                                                setActiveCategory(category);\r\n                                                onChangeCategory(category);\r\n                                            }}>\r\n                                            {category}\r\n                                        </button>) }\r\n            <br/>\r\n`           <hr style={{ color: activeColor, backgroundColor: '#6C0AAB', height: 2.5,  borderColor : '#6C0AAB', marginTop: \"-16px\", marginBottom: \"-10px\" }}/>`\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default CategoriesTab;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBFormInline\r\n} from \"mdbreact\";\r\nimport './style.css';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport CardGame from './CardGame';\r\nimport CardMovie from './CardMovie';\r\nimport CardUser from '../Common/CardUser';\r\nimport CategoriesTab from '../Common/CategoriesTab';\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../../store/reducers';\r\nimport * as actions from '../../store/actions';\r\n\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction SearchPage ( { loggedIn, openLoginForm, gamesIsLoading, moviesIsLoading, usersIsLoading, searchGame, games, searchMovie, movies, searchUsers, users } ) {\r\n    let history = useHistory();\r\n    let { query } = useParams();\r\n    const [queryText, setQueryText] = useState(\"\");\r\n    const [gamesCards, setGamesCards] = useState(\"\");\r\n    const [moviesCards, setMoviesCards] = useState(\"\");\r\n    const [usersCards, setUsersCards] = useState(\"\");\r\n\r\n    const [activeCategory, setActiveCategory] = useState(\"Всё\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            searchGame(query, 1);\r\n            searchMovie(query, 1);\r\n            searchUsers(query);\r\n            setQueryText(query);\r\n            document.title = 'Поиск';\r\n\t\t},\r\n\t\t[query, searchGame, searchMovie, searchUsers]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setGamesCards(<div className=\"searchCardsGroup\">{games.map(game => <CardGame game={game} key={game.id}/>)}</div>);\r\n\t\t},\r\n\t\t[games]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setMoviesCards(<div className=\"searchCardsGroup\">{movies.map(movie => <CardMovie movie={movie} key={movie.id}/>)}</div>);\r\n\t\t},\r\n\t\t[movies]\r\n    );\r\n\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            setUsersCards(<div className=\"searchCardsGroup\">{users.map(user => <CardUser user={user} key={user.username}/>)}</div>);\r\n\t\t},\r\n\t\t[users]\r\n    );\r\n    \r\n    return (\r\n            <div>\r\n\t\t\t<div className=\"bg searchBG\"/> \r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                        <MDBCol className=\"searchPage\"> \r\n                            <h1>Поиск</h1>\r\n                            <MDBFormInline className=\"md-form\"\r\n                                onSubmit={ (event) => {event.preventDefault(); history.push('/search/' + document.getElementById('searchInput2').value); return false; }}>\r\n                                <MDBIcon icon=\"search\" />\r\n                                <input \r\n                                    className=\"form-control form-control-sm ml-3 w-50\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Найти\" \r\n                                    aria-label=\"Search\" \r\n                                    id=\"searchInput2\" \r\n                                    value={queryText} \r\n                                    onChange={(event) =>setQueryText(event.target.value)}/>\r\n                            </MDBFormInline>\r\n\r\n                            <h1>Результаты поиска</h1>\r\n                                <CategoriesTab\r\n                                    categories={['Всё', 'Игры', 'Фильмы', 'Пользователи']}\r\n                                    activeColor='#4527a0' \r\n                                    onChangeCategory={(category) => {\r\n                                        setActiveCategory(category);\r\n                                    }}/>\r\n\r\n                                <LoadingOverlay\r\n                                    active={gamesIsLoading}\r\n                                    spinner\r\n                                    text='Ищем игры...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Игры'}>\r\n                                        <h3>Игры</h3>\r\n                                        {gamesCards}\r\n                                    </div>\r\n                                </LoadingOverlay>\r\n\r\n                                <LoadingOverlay\r\n                                    active={moviesIsLoading}\r\n                                    spinner\r\n                                    text='Ищем фильмы...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Фильмы'}>\r\n                                        <h3>Фильмы</h3>\r\n                                        {moviesCards}\r\n                                    </div>       \r\n                                </LoadingOverlay>\r\n                                \r\n                                <LoadingOverlay\r\n                                    active={usersIsLoading}\r\n                                    spinner\r\n                                    text='Ищем пользователей...'\r\n                                    >\r\n                                    <div hidden={activeCategory!=='Всё' && activeCategory!=='Пользователи'}>\r\n                                        <h3>Пользователи</h3>\r\n                                        {usersCards}\r\n                                    </div>    \r\n                                </LoadingOverlay>\r\n                                \r\n                        </MDBCol>\r\n                        <MDBCol md=\"0.5\"></MDBCol>\r\n                    </MDBRow>\r\n                 </MDBContainer>\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    gamesIsLoading: selectors.getIsLoadingSearchGames(state),\r\n    moviesIsLoading: selectors.getIsLoadingSearchMovies(state),\r\n    usersIsLoading: selectors.getIsLoadingSearchUsers(state),\r\n    games: selectors.getSearchContentGames(state),\r\n    movies: selectors.getSearchContentMovies(state),\r\n    users: selectors.getSearchContentUsers(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        searchGame: (query, page) => {\r\n            dispatch(actions.searchGames(query, page));\r\n        },\r\n        searchMovie: (query, page) => {\r\n            dispatch(actions.searchMovies(query, page));\r\n        },\r\n        searchUsers: (query) => {\r\n            dispatch(actions.searchUsers(query));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","import React from \"react\";\r\nimport {\r\n\tMDBModal, \r\n\tMDBModalBody,\r\n\tMDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn\r\n} from \"mdbreact\";\r\nimport { connect } from 'react-redux'; \r\nimport * as actions from '../store/actions';\r\nimport * as selectors from '../store/reducers';\r\n\r\n/**\r\n * КОмпонент формы авторизации\r\n * @param {number} Параметр, при изменении которого компонент открывается \r\n */\r\nfunction LoginForm( {isOpen, closeForm, logIn, authError} ) {\r\n\treturn (\r\n        <MDBModal isOpen={isOpen} toggle={closeForm} size=\"sm\" centered>\r\n\t    <MDBModalBody>\r\n\t      <MDBContainer>\r\n\t        <MDBRow>\r\n\t          <MDBCol>\r\n\t            <form onSubmit={(event) => {event.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\tlogIn(document.getElementById(\"loginInput\").value,\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"passwordInput\").value)}}>\r\n\t              <p className=\"h4 text-center mb-4\">Войти</p>\r\n\t\t\t\t  <p className=\"note note-danger\" hidden={!authError} >Неверный логин или пароль!</p>\r\n\t              <label htmlFor=\"loginInput\" className=\"grey-text\">\r\n\t                Логин\r\n\t              </label>\r\n\t              <input type=\"text\" id=\"loginInput\" className=\"form-control\" />\r\n\t              <br />\r\n\t              <label htmlFor=\"passwordInput\" className=\"grey-text\">\r\n\t                Пароль\r\n\t              </label>\r\n\t              <input type=\"password\" id=\"passwordInput\" className=\"form-control\" />\r\n\t              <div className=\"text-center mt-4\">\r\n\t\t\t\t\t<MDBBtn style={{color: \"white\", backgroundColor: \"#6C0AAB\"}} type=\"submit\">\r\n\t\t\t\t\t\tВойти\r\n\t\t\t\t\t</MDBBtn>\r\n\t              </div>\r\n\t            </form>\r\n\t          </MDBCol>\r\n\t        </MDBRow>\r\n\t      </MDBContainer>\r\n\t    </MDBModalBody>\r\n      </MDBModal>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisOpen: selectors.getLoginForm(state),\r\n\tauthError: selectors.getAuthError(state)\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcloseForm: () => {\r\n\t\t\tdispatch(actions.closeLoginForm());\r\n\t\t},\r\n\t\tlogIn: (login, password) => {\r\n\t\t\tdispatch(actions.tryAuth(login, password));\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React from \"react\";\r\nimport {\r\n\tMDBModal, \r\n\tMDBModalBody,\r\n\tMDBContainer,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn\r\n} from \"mdbreact\";\r\nimport { connect } from 'react-redux'; \r\nimport * as actions from '../store/actions';\r\nimport * as selectors from '../store/reducers';\r\n\r\n/**\r\n * КОмпонент формы авторизации\r\n * @param {number} Параметр, при изменении которого компонент открывается \r\n */\r\nfunction RegistrationForm( {isOpen, closeForm, registrate, registrateArror, user} ) {\r\n\treturn (\r\n        <MDBModal isOpen={isOpen} toggle={closeForm} size=\"sm\" centered>\r\n\t    <MDBModalBody>\r\n\t      <MDBContainer>\r\n\t        <MDBRow>\r\n\t          <MDBCol>\r\n\t            <form>\r\n\t              <p className=\"h4 text-center mb-4\">Регистрация</p>\r\n\t\t\t\t  <p className=\"note note-danger\" hidden={!registrateArror} >Ошибка регистрации!</p>\r\n                  <p className=\"note note-success\" hidden={user.email===\"\"} >{user.login}, добро пожаловать! Осталось только подтвердить вашу почту: {user.email}</p>\r\n\t              <label htmlFor=\"loginInput\" className=\"grey-text\">\r\n\t                Никнейм\r\n\t              </label>\r\n\t              <input type=\"text\" id=\"loginInput\" className=\"form-control\" />\r\n\t              <br />\r\n                  <label htmlFor=\"emailInput\" className=\"grey-text\">\r\n\t                Электронная почта\r\n\t              </label>\r\n\t              <input type=\"email\" id=\"emailInput\" className=\"form-control\" />\r\n\t              <br />\r\n\t              <label htmlFor=\"passwordInput\" className=\"grey-text\">\r\n\t                Пароль\r\n\t              </label>\r\n\t              <input type=\"password\" id=\"passwordInput\" className=\"form-control\" />\r\n\t              <div className=\"text-center mt-4\">\r\n                    <MDBBtn style={{color: \"white\", backgroundColor: \"#6C0AAB\"}} type=\"button\" onClick={() => registrate(document.getElementById(\"loginInput\").value,\r\n                                                                                                                        document.getElementById(\"emailInput\").value,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    document.getElementById(\"passwordInput\").value)}>\r\n\t\t\t\t\t\tЗарегистрироваться\r\n\t\t\t\t\t</MDBBtn>\r\n\t              </div>\r\n\t            </form>\r\n\t          </MDBCol>\r\n\t        </MDBRow>\r\n\t      </MDBContainer>\r\n\t    </MDBModalBody>\r\n      </MDBModal>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisOpen: selectors.getRegistrateForm(state),\r\n    registrateArror: selectors.getRegistrateError(state),\r\n    user: selectors.getUser(state)\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcloseForm: () => {\r\n\t\t\tdispatch(actions.closeRegistrateForm());\r\n\t\t},\r\n\t\tregistrate: (login, email, password) => {\r\n\t\t\tdispatch(actions.registrationRequest(login, email, password));\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n","import React, {\r\n    useEffect\r\n} from \"react\";\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction ConfirmPage ( {confirmEmailRequest} ) \r\n{\r\n\tlet search = window.location.search;\r\n\tlet params = new URLSearchParams(search);\r\n\tlet uid64 = params.get('uid64');\r\n\tlet token = params.get('token');\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconfirmEmailRequest(uid64, token);\r\n\t\t},\r\n\t\t[confirmEmailRequest, token, uid64]\r\n\t);\r\n\t\r\n    return (\r\n\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        confirmEmailRequest: (uid64, token) => {\r\n            dispatch(actions.confirmEmailRequest(uid64, token));\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmPage);","import React, { useEffect, useState} from \"react\";\r\n\r\nimport {\r\n    MDBDataTable\r\n} from \"mdbreact\";\r\n\r\nfunction GameBlock ( {games, stats} ) {\r\n\r\n    const gameColumns = [\r\n        {\r\n          label: 'Название',\r\n          field: 'name',\r\n          sort: 'disabled'\r\n        },\r\n        {\r\n          label: 'Статус',\r\n          field: 'status',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Оценка',\r\n          field: 'score',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Отзыв',\r\n          field: 'review',\r\n          sort: 'asc'\r\n        },\r\n        {\r\n          label: 'Время прохождения',\r\n          field: 'spent_time',\r\n          sort: 'asc'\r\n        }\r\n      ];\r\n\r\n    const [gameTableData, setGameTableData] = useState({\r\n        columns: gameColumns,\r\n        rows: [\r\n        ]\r\n    });\r\n\r\n    useEffect(() =>{\r\n            if (games)\r\n            {\r\n                setGameTableData({\r\n                    columns: gameColumns,\r\n                    rows: games.map((game) => {\r\n                        return {\r\n                                name: <a className=\"logRow\" href={window.location.origin + '/game/' + game.game.rawg_slug}>{game.game.rawg_name}</a>,\r\n                                name2: game.game.rawg_name,\r\n                                status: game.status,\r\n                                score: game.score,\r\n                                review: game.review,\r\n                                spent_time: game.spent_time,\r\n                                /*clickEvent: (e) => {\r\n                                    //window.open('/game/' + game.game.rawg_slug);\r\n                                    history.push('/game/' + game.game.rawg_slug);\r\n                                }*/\r\n                            }      \r\n                    })\r\n                });\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [games]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <p>Игр сыграно: {stats.games_count}, часов наиграно: {stats.games_total_spent_time}</p>  \r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={gameTableData}\r\n                info={false}\r\n                barReverse={true}\r\n                noBottomColumns={true}\r\n                noRecordsFoundLabel=\"Ничего не найдено!\"\r\n                paginationLabel={[\"Предыдущая\", \"Следующая\"]}\r\n                entriesLabel=\"Показывать игр на странице\"\r\n                searchLabel='Поиск'\r\n                />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default GameBlock;\r\n","import React from \"react\";\r\n\r\nimport CardUser from '../Common/CardUser';\r\n\r\nfunction FriendBlock ( {users} ) {\r\n\r\n    return(\r\n        <div className=\"friendsBlock\">\r\n            { users.map((user) => <CardUser user={user} key={user.id}/>) }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default FriendBlock;\r\n","import React, { useEffect, useState} from \"react\";\r\n\r\nimport {\r\n    MDBDataTable\r\n} from \"mdbreact\";\r\n\r\nfunction MovieBlock ( {movies, stats} ) {\r\n\r\n    const movieColumns = [\r\n      {\r\n        label: 'Название',\r\n        field: 'name',\r\n        sort: 'disabled'\r\n      },\r\n      {\r\n        label: 'Статус',\r\n        field: 'status',\r\n        sort: 'asc'\r\n      },\r\n      {\r\n        label: 'Оценка',\r\n        field: 'score',\r\n        sort: 'asc'\r\n      },\r\n      {\r\n        label: 'Отзыв',\r\n        field: 'review',\r\n        sort: 'asc'\r\n      }\r\n    ];\r\n\r\n  const [movieTableData, setMovieTableData] = useState({\r\n      columns: movieColumns,\r\n      rows: [\r\n      ]\r\n  });\r\n\r\n    useEffect(() =>{\r\n            if (movies)\r\n            {\r\n              setMovieTableData({\r\n                columns: movieColumns,\r\n                rows: movies.map((movie) => {\r\n                    return {\r\n                            name: <a className=\"logRow\" href={window.location.origin + '/movie/' + movie.movie.tmdb_id}>{movie.movie.tmdb_name}</a>,\r\n                            name2: movie.movie.tmdb_name,\r\n                            status: movie.status,\r\n                            score: movie.score,\r\n                            review: movie.review,\r\n                            /*clickEvent: (e) => {\r\n                                //window.open('/game/' + game.game.rawg_slug);\r\n                                history.push('/movie/' + movie.movie.tmdb_id)\r\n                            }*/\r\n                        }      \r\n                  })\r\n              });\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [movies]\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <p>Фильмов посмотрено: {stats.movies_count}, часов просмотра: {stats.movies_total_spent_time}</p>  \r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                small\r\n                data={movieTableData}\r\n                info={false}\r\n                barReverse={true}\r\n                noBottomColumns={true}\r\n                noRecordsFoundLabel=\"Ничего не найдено!\"\r\n                paginationLabel={[\"Предыдущая\", \"Следующая\"]}\r\n                entriesLabel=\"Показывать фильмов на странице\"\r\n                searchLabel='Поиск'\r\n                />\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default MovieBlock;\r\n","import React, { useEffect} from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport './style.css';\r\nimport Rating from \"react-rating\";\r\nimport {\r\n    MDBIcon\r\n} from \"mdbreact\";\r\n\r\nfunction LogRow ( {log, showUsername} ) {\r\n    let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n            \r\n        },\r\n        [log]\r\n    );\r\n\r\n    function translateActionType(action, actionResult){\r\n        switch (action) {\r\n            case 'score':\r\n                return 'оценил(а)';\r\n            case 'status':\r\n                return 'изменил(а) статус';\r\n            case 'review':\r\n                return 'оставил(а) отзыв на';\r\n            case 'spent_time':\r\n                return 'изменил(а) время прохождения';\r\n            case 'is_following':\r\n                if (actionResult === 'True')\r\n                    return 'подписан(а) на';\r\n                else\r\n                    return 'отписан(а) от';\r\n            default:\r\n                return action;\r\n        }\r\n    }\r\n\r\n    function translateType(type, actionType){\r\n        switch (type) {\r\n            case 'game':\r\n                if (actionType === 'score' || actionType === 'review')\r\n                    return 'игру';\r\n                else\r\n                    return 'игры';\r\n            case 'movie':\r\n                if (actionType === 'score' || actionType === 'review')\r\n                    return 'фильм';\r\n                else\r\n                    return 'фильма';\r\n            case 'user':\r\n                return 'пользователя';\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n\r\n    function nameToLink(name, type, id){\r\n        switch (type){\r\n            case 'game':\r\n                return  <a href={window.location.origin + '/game/' + id} \r\n                            className=\"logLink\"\r\n                            onClick={(e) => { history.push('/game/' + id); e.preventDefault();}}>\r\n                                {name}\r\n                        </a>;\r\n            case 'movie':\r\n                return  <a href={window.location.origin + '/movie/' + id} \r\n                            className=\"logLink\"\r\n                            onClick={(e) => { history.push('/movie/' + id); e.preventDefault();}}>\r\n                                {name}\r\n                        </a>;\r\n            case 'user':\r\n                return  <a href={window.location.origin + '/user/' + id} \r\n                            className=\"logLink\"\r\n                            onClick={(e) => { history.push('/user/' + id); e.preventDefault();}}>\r\n                                {name}\r\n                        </a>;\r\n            default:\r\n                return name;\r\n        }\r\n    }\r\n\r\n    function userToLink(username, userID){\r\n            return  <a href={window.location.origin + '/user/' + userID} \r\n                        className=\"logLink\"\r\n                        onClick={(e) => { history.push('/user/' + userID); e.preventDefault();}}>\r\n                            {username}\r\n                    </a>;\r\n    }\r\n\r\n    function actionResultToStr(actionType, actionResult){\r\n        switch (actionType){\r\n            case 'score':\r\n                return  <Rating stop={10}\r\n                            emptySymbol={<MDBIcon far icon=\"star\" size=\"1x\"/>}\r\n                            fullSymbol={[1,2,3,4,5,6,7,8,9,10].map(n => <MDBIcon icon=\"star\" size=\"1x\" title={n}/>)}\r\n                            initialRating={actionResult}\r\n                            readonly={true}\r\n                        />\r\n            case 'status':\r\n                return '\"' + actionResult + '\"';\r\n            case 'review':\r\n                return '\"' + actionResult + '\"';\r\n            case 'spent_time':\r\n                return actionResult + ' ' + intToHours(actionResult);\r\n            case 'is_following':\r\n                return '';\r\n            default:\r\n                return actionResult;\r\n        }\r\n    }\r\n\r\n    function parseDate(date){\r\n        let newDate = new Date(date);\r\n        return newDate.toLocaleTimeString(\"ru-RU\");\r\n    }\r\n\r\n    return(\r\n            <p className=\"logRow\">{parseDate(log.created)} {showUsername?userToLink(log.user, log.user_id):''} {translateActionType(log.action_type, log.action_result)} {translateType(log.type, log.action_type)} {nameToLink(log.target, log.type, log.target_id)}{log.type==='user'?'':':'} {actionResultToStr(log.action_type, log.action_result)}</p>\r\n    )\r\n}\r\n\r\nfunction intToHours(number){\r\n    if (11 <= number && number <= 14)\r\n        return 'часов'\r\n    else if (number % 10 === 1)\r\n        return 'час'\r\n    else if (2 <= number % 10 && number % 10 <= 4)\r\n        return 'часа'\r\n    else\r\n        return 'часов'\r\n}\r\n\r\nexport default LogRow;","import React, { useEffect, useState} from \"react\";\r\nimport {\r\n    MDBIcon\r\n} from \"mdbreact\";\r\nimport './style.css';\r\nimport LogRow from './LogRow';\r\n\r\nfunction UserLogBlock ( {logs, showUsername, onChangePage} ) {\r\n    const [logsByDay, setLogsByDay] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() =>{\r\n            setLogsByDay(groupLogsByDay(logs.log));\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [logs]\r\n    );\r\n\r\n    function groupLogsByDay(logs){\r\n        let newLogs = [];\r\n\r\n        for (let i in logs){\r\n            let date = new Date(logs[i].created);\r\n\r\n            if (newLogs.length === 0)\r\n                newLogs.push({\r\n                    date: date,\r\n                    logs: [logs[i]]\r\n                });\r\n            else if (date.getDay() === newLogs[newLogs.length - 1].date.getDay())\r\n                newLogs[newLogs.length - 1].logs.push(logs[i]);\r\n            else\r\n                newLogs.push({\r\n                    date: date,\r\n                    logs: [logs[i]]\r\n                });\r\n        }\r\n        return newLogs;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            { \r\n                logsByDay.map((dayLog) => \r\n                    <div key={dayLog.logs[0].id} className=\"logDay\">\r\n                        <h5 className='logDate'>\r\n                            {dayLog.date.toLocaleDateString(\"ru-RU\")}\r\n                        </h5>\r\n                        <div className='logRows'>\r\n                            { dayLog.logs.map((log) => <LogRow log={log} showUsername={showUsername} key={log.id}/>) }\r\n                        </div>\r\n                    </div>\r\n                )  \r\n            } \r\n            <button \r\n                className=\"logPaginationButton\" \r\n                disabled={!logs.has_next_page}\r\n                onClick={() => {\r\n                        if (logs.has_next_page){\r\n                            onChangePage(currentPage+1);\r\n                            setCurrentPage(currentPage+1);\r\n                        } \r\n                    }}\r\n                >\r\n                <MDBIcon icon=\"arrow-down\" />\r\n            </button> \r\n\r\n            <button \r\n                className=\"logPaginationButton\" \r\n                disabled={currentPage===1}\r\n                onClick={() => {\r\n                        if (currentPage>1){\r\n                            onChangePage(currentPage-1);\r\n                            setCurrentPage(currentPage-1);\r\n                        } \r\n                    }}\r\n                >\r\n                <MDBIcon icon=\"arrow-up\" />\r\n            </button>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default UserLogBlock;\r\n","import React, {\r\n    useEffect,\r\n    useState\r\n} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBContainer\r\n} from \"mdbreact\";\r\nimport './style.css';\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../../store/reducers';\r\nimport * as actions from '../../store/actions';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport GameBlock from './GameBlock';\r\nimport FriendBlock from './FriendBlock';\r\nimport MovieBlock from './MovieBlock';\r\nimport UserLogBlock from './UserLogBlock';\r\nimport CategoriesTab from '../Common/CategoriesTab';\r\n\r\nconst LOG_ROWS_COUNT = 15; \r\n\r\n/**\r\n * Основная страница приложения\r\n */\r\nfunction UserPage ( { userIsLoading, getUserInfo, userInfo, currentUserInfo, setUserStatus, getUserLogs, userLogs, userLogsIsLoading,getUserFriendsLogs, userFriendsLogs, userFriendsLogsIsLoading}) \r\n{ \r\n    let { userID } = useParams();\r\n    const [activeCategory, setActiveCategory] = useState(\"Профиль\");\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            getUserInfo(userID);\r\n            getUserLogs(userID, 1, LOG_ROWS_COUNT);\r\n            getUserFriendsLogs(userID, 1, LOG_ROWS_COUNT);\r\n\t\t},\r\n\t\t[userID, getUserInfo, getUserLogs, getUserFriendsLogs]\r\n    );\r\n\r\n    useEffect(\r\n\t\t() => {\r\n            document.title = 'Профиль ' + userInfo.username;\r\n\t\t},\r\n\t\t[userInfo]\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bg searchBG\"/> \r\n            <LoadingOverlay\r\n                active={userIsLoading}\r\n                spinner\r\n                text='Загрузка...'\r\n                >\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"0.5\"></MDBCol>\r\n                    <MDBCol className=\"searchPage\"> \r\n                        <h1>Информация о пользователе {userInfo.username}</h1>\r\n                        <button \r\n                            hidden={currentUserInfo.username === userInfo.username}\r\n                            className='addFriendButton'\r\n                            onClick={ () => {\r\n                                setUserStatus({is_following: userInfo.is_followed?false:true}, userInfo.id);\r\n                            }}>\r\n                            {userInfo.is_followed?'Отписаться':'Подписаться'}\r\n                        </button>\r\n                        <CategoriesTab\r\n                            categories={['Профиль', 'Игры', 'Фильмы', 'Друзья']}\r\n                            activeColor='#4527a0' \r\n                            onChangeCategory={(category) => { setActiveCategory(category) }}/>\r\n\r\n                            <div hidden={activeCategory!=='Профиль'}>\r\n                                <h4>Моя активность: </h4>\r\n                                <LoadingOverlay\r\n                                    active={userLogsIsLoading}\r\n                                    spinner\r\n                                    text='Загрузка активности...'\r\n                                    >\r\n                                    <UserLogBlock logs={userLogs} onChangePage={(pageNumber) => getUserLogs(userID, pageNumber, LOG_ROWS_COUNT)}/>\r\n                                </LoadingOverlay>\r\n                            </div>\r\n                            <div hidden={activeCategory!=='Игры'}>\r\n                                <GameBlock games={userInfo.games} stats={userInfo.stats} />\r\n                            </div>\r\n                            <div hidden={activeCategory!=='Фильмы'}>\r\n                                <MovieBlock movies={userInfo.movies} stats={userInfo.stats} />\r\n                            </div>\r\n                            <div hidden={activeCategory!=='Друзья'}>\r\n                                <FriendBlock users={userInfo.followed_users?userInfo.followed_users:[]} />\r\n                                <h4>Активность друзей: </h4>\r\n                                <LoadingOverlay\r\n                                    active={userFriendsLogsIsLoading}\r\n                                    spinner\r\n                                    text='Загрузка активности...'\r\n                                    >\r\n                                    <UserLogBlock logs={userFriendsLogs} onChangePage={(pageNumber) => getUserFriendsLogs(userID, pageNumber, LOG_ROWS_COUNT)} showUsername={true}/>\r\n                                </LoadingOverlay>\r\n                                \r\n                            </div>\r\n                    </MDBCol>\r\n                    <MDBCol md=\"0.5\"></MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n            </LoadingOverlay>\r\n        </div>\r\n    \t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    userIsLoading: selectors.getIsLoadingUserPageContent(state),\r\n    userInfo: selectors.getUserPageContent(state),\r\n    userLogs: selectors.getUserPageLogs(state),\r\n    userLogsIsLoading: selectors.getIsLoadingUserPageLogs(state),\r\n    userFriendsLogs: selectors.getUserPageFriendsLogs(state),\r\n    userFriendsLogsIsLoading: selectors.getIsLoadingUserPageFriendsLogs(state),\r\n    currentUserInfo: selectors.getUser(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        openLoginForm: () => {\r\n            dispatch(actions.openLoginForm());\r\n        },\r\n        getUserInfo: (user_id) => {\r\n            dispatch(actions.requestUserPageContent(user_id));\r\n        },\r\n        setUserStatus: (is_following, userID) => {\r\n            dispatch(actions.setUserStatus(is_following, userID));\r\n        },\r\n        getUserLogs: (userID, page, resultsOnPage) => {\r\n            dispatch(actions.requestUserPageLogs(userID, page, resultsOnPage));\r\n        },\r\n        getUserFriendsLogs: (userID, page, resultsOnPage) => {\r\n            dispatch(actions.requestUserPageFriendsLogs(userID, page, resultsOnPage));\r\n        },\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);","import React from \"react\";\r\nimport {\r\n    useHistory\r\n  } from \"react-router-dom\";\r\n\r\nimport {\r\n\tMDBNavbar,\r\n    MDBNavItem,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavLink,\r\n    MDBIcon,\r\n    MDBFormInline,\r\n    MDBDropdown,\r\n    MDBDropdownItem,\r\n    MDBDropdownMenu,\r\n    MDBDropdownToggle\r\n} from \"mdbreact\";\r\n\r\nimport { connect } from 'react-redux'; \r\nimport * as selectors from '../store/reducers';\r\nimport * as actions from '../store/actions';\r\n\r\nfunction Navbar( {loggedIn, onLoginClick, onLogoutClick, onRegistrationClick, user} ) {\r\n    let history = useHistory();\r\n\r\n    return(\r\n            <MDBNavbar style={{ backgroundColor: \"#4527a0\" }} dark expand=\"md\" fixed=\"top\">\r\n            <MDBNavbarBrand>\r\n                <strong className=\"white-text\">Interests</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarNav left>\r\n                \r\n            </MDBNavbarNav>\r\n\r\n            <MDBNavbarNav right>\r\n                <MDBNavItem>\r\n                    <MDBFormInline onSubmit={ (event) => {event.preventDefault(); history.push('/search/' + document.getElementById('searchInput').value); return false; }}>\r\n                        <div className=\"md-form my-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Найти\" aria-label=\"Найти\"\r\n                            id=\"searchInput\"/>\r\n                        </div>\r\n                    </MDBFormInline>\r\n                </MDBNavItem>\r\n\r\n                <MDBNavItem className=\"font-weight-bold\" hidden={loggedIn}>\r\n                    <MDBNavLink to=\"#\" onClick={onLoginClick} >\r\n                        <MDBIcon icon=\"sign-in-alt\" /> Войти\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem className=\"font-weight-bold\" hidden={loggedIn}>\r\n                    <MDBNavLink to=\"#\" onClick={onRegistrationClick} >\r\n                        <MDBIcon icon=\"user-plus\" /> Зарегистрироваться\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem hidden={!loggedIn} className=\"font-weight-bold\">\r\n                    <MDBDropdown>\r\n                        <MDBDropdownToggle nav caret>\r\n                        <span className=\"mr-2\">{user.username}</span>\r\n                        </MDBDropdownToggle>\r\n                        <MDBDropdownMenu>\r\n                        <MDBDropdownItem href={\"/user/\"+user.id}>Профиль</MDBDropdownItem>\r\n                        <MDBDropdownItem onClick={ onLogoutClick }>\r\n                            <MDBIcon icon=\"sign-out-alt\"/> Выйти\r\n                        </MDBDropdownItem>\r\n                        </MDBDropdownMenu>\r\n                    </MDBDropdown>\r\n                </MDBNavItem>\r\n            </MDBNavbarNav>\r\n        </MDBNavbar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedIn: selectors.getLoggedIn(state),\r\n    user: selectors.getUser(state)\r\n});\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonLoginClick: () => {\r\n\t\t\tdispatch(actions.openLoginForm());\r\n        },\r\n        onLogoutClick: () =>{\r\n            dispatch(actions.resetAuthorization());\r\n        },\r\n        onRegistrationClick: () =>{\r\n            dispatch(actions.openRegistrateForm());\r\n        }\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport GamePage from \"./components/GamePage\";\r\nimport MoviePage from \"./components/MoviePage\";\r\nimport SearchPage from \"./components/SearchPage/SearchPage\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport RegistrationForm from \"./components/RegistrationForm\";\r\nimport ConfirmPage from \"./components/ConfirmPage\";\r\nimport UserPage from \"./components/UserPage/UserPage\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <div className=\"navbar\"></div>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route exact path=\"/game/:id\" component={GamePage} />\r\n            <Route exact path=\"/movie/:id\" component={MoviePage} />\r\n            <Route exact path=\"/search/:query\" component={SearchPage} />\r\n            <Route exact path=\"/confirm/\" component={ConfirmPage} />\r\n            <Route exact path=\"/user/:userID\" component={UserPage} />\r\n            <Route render={function () { return <h1>Not Found</h1>; }} />\r\n            \r\n        </Switch>\r\n      <ToastContainer position=\"top-center\" hideProgressBar newestOnTop closeOnClick/>\r\n      <LoginForm/>\r\n      <RegistrationForm/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//confirm_password_reset\r\nexport default Routes;","import React, {useEffect} from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'; \r\nimport Routes from \"./Routes\";\r\nimport * as actions from \"./store/actions\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App({onLoad}) {\r\n\r\n  useEffect(\r\n    () => {\r\n        onLoad();\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"flyout\">\r\n        <main>\r\n          <Routes />\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n    onLoad: () => {\r\n      dispatch(actions.checkAuthorization());\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, \r\n  applyMiddleware, \r\n  //combineReducers,\r\n   compose } from 'redux';\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './store/reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk) ) );\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\nexport default store;\r\n\r\n"],"sourceRoot":""}