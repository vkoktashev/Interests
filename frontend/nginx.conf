# auto detects a good number of processes to run
worker_processes auto;

events{
    worker_connections 8001;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        listen 443 ssl http2;
	    listen [::]:443 ssl http2;
        server_name your-interests.ru;

	absolute_redirect off;
        ssl_certificate /etc/letsencrypt/live/your-interests.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/your-interests.ru/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/your-interests.ru/chain.pem;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
        keepalive_timeout 70;

	rewrite ^([^.]*[^/])$ $1/ permanent;

        root /var/www;
        index index.html index.htm;

    location /api/static/ {
        root /code/staticfiles;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        types {
            text/plain txt;
            application/octet-stream bin;
        }
    }

	location /api/ {
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Url-Scheme $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://back:8001/;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        #location ~* [\.](?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          #expires 1M;
          #access_log off;
          #add_header Cache-Control "public";
        #}

        #location ~* \.(?:css|js)$ {
            #try_files $uri =404;
            #expires 1y;
            #access_log off;
            #add_header Cache-Control "public";
        #}

        #location ~ ^.+\..+$ {
            #try_files $uri =404;
        #}
    }

    server {
        listen 80;
        listen [::]:80;

        server_name *.your-interests.ru your-interests.ru;

        location / {
            return 301 https://your-interests.ru$request_uri;
        }
    }
}
