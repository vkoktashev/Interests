# auto detects a good number of processes to run
worker_processes auto;

events{
    worker_connections 8001;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';


    server {
        #listen 80;
        
        listen 443 ssl http2;
	    listen [::]:443 ssl http2;
        server_name interests.fun;
        
        ssl_certificate /etc/letsencrypt/live/interests.fun/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/interests.fun/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/interests.fun/chain.pem;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
        keepalive_timeout 70;

        root /var/www;
        index index.html index.htm;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

        location /api {
        try_files $uri $uri/ @proxy_api;
    }
    location /admin {
        try_files $uri $uri/ @proxy_api;
    }

    location @proxy_api {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_pass   http://back:8001;
    }
    }

    server {
	listen 80;
	listen [::]:80;

	server_name *.interests.fun interests.fun;

	location / {
		return 301 https://interests.fun$request_uri;
	}
}
}